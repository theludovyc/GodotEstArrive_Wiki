__NOTOC__A packed [[Array GD|Array]] of 32-bit integers.== Description ==An [[Array GD|Array]] specifically designed to hold 32-bit integer values. Packs data tightly, so it saves memory for large array sizes.'''Note:''' This type is passed by value and not by reference.'''Note:''' This type stores signed 32-bit integers, which means it can take values in the interval {{Span|[-2^31, 2^31 - 1]}}, i.e. {{Span|[-2147483648, 2147483647]}}. Exceeding those bounds will wrap around. In comparison, int uses signed 64-bit integers which can hold much larger values. If you need to pack 64-bit integers tightly, see [[PackedInt64Array GD|PackedInt64Array]].== Methods =={| class="wikitable | [[PackedInt32Array GD|PackedInt32Array]]|| [[PackedInt32Array GD#PackedInt32Array|PackedInt32Array]] '''(''' [[Array GD|Array]] from ''')'''                |-| void|| [[#append|append]] '''(''' int integer ''')'''                                     |-| void|| [[#append_array|append_array]] '''(''' [[PackedInt32Array GD|PackedInt32Array]] array ''')''' |-| bool|| [[#empty|empty]] '''(''' ''')'''                                                                     |-| int|| [[#insert|insert]] '''(''' int idx, int integer ''')'''          |-| void|| [[#invert|invert]] '''(''' ''')'''                                                                   |-| void|| [[#push_back|push_back]] '''(''' int integer ''')'''                               |-| void|| [[#remove|remove]] '''(''' int idx ''')'''                                         |-| void|| [[#resize|resize]] '''(''' int idx ''')'''                                         |-| void|| [[#set|set]] '''(''' int idx, int integer ''')'''                |-| int|| [[#size|size]] '''(''' ''')'''                                                                       |}== Method Descriptions ===== PackedInt32Array ===*  [[PackedInt32Array GD|PackedInt32Array]] '''PackedInt32Array''' '''(''' [[Array GD|Array]] from ''')'''Constructs a new {{Span|PackedInt32Array}}. Optionally, you can pass in a generic [[Array GD|Array]] that will be converted.=== append ===*  void '''append''' '''(''' int integer ''')'''Appends an element at the end of the array (alias of [[#push_back|push_back]]).=== append_array ===*  void '''append_array''' '''(''' [[PackedInt32Array GD|PackedInt32Array]] array ''')'''Appends a {{Span|PackedInt32Array}} at the end of this array.=== empty ===*  bool '''empty ( )'''Returns {{Span|true}} if the array is empty.=== insert ===*  int '''insert''' '''(''' int idx, int integer ''')'''Inserts a new integer at a given position in the array. The position must be valid, or at the end of the array ({{Span|idx == size()}}).=== invert ===*  void '''invert ( )'''Reverses the order of the elements in the array.=== push_back ===*  void '''push_back''' '''(''' int integer ''')'''Appends a value to the array.=== remove ===*  void '''remove''' '''(''' int idx ''')'''Removes an element from the array by index.=== resize ===*  void '''resize''' '''(''' int idx ''')'''Sets the size of the array. If the array is grown, reserves elements at the end of the array. If the array is shrunk, truncates the array to the new size.=== set ===*  void '''set''' '''(''' int idx, int integer ''')'''Changes the integer at the given index.=== size ===*  int '''size ( )'''Returns the array size.