__NOTOC__'''Inherits:''' [[GeometryInstance GD|GeometryInstance]] '''<''' [[VisualInstance GD|VisualInstance]] '''<''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]3D particle emitter.== Description ==3D particle node used to create a variety of particle systems and effects. {{Span|Particles}} features an emitter that generates some number of particles at a given rate.Use the {{Span|process_material}} property to add a [[ParticlesMaterial GD|ParticlesMaterial]] to configure particle appearance and behavior. Alternatively, you can add a [[ShaderMaterial GD|ShaderMaterial]] which will be applied to all particles.== Tutorials ==*  :doc:`../tutorials/3d/vertex_animation/controlling_thousands_of_fish`== Properties =={| class="wikitable | int|| [[#amount|amount]]|| {{Span|8}}                           |-| [[#DrawOrder|DrawOrder]]|| [[#draw_order|draw_order]]|| {{Span|0}}                           |-| [[Mesh GD|Mesh]]|| [[#draw_pass_1|draw_pass_1]]||                                 |-| [[Mesh GD|Mesh]]|| [[#draw_pass_2|draw_pass_2]]||                                 |-| [[Mesh GD|Mesh]]|| [[#draw_pass_3|draw_pass_3]]||                                 |-| [[Mesh GD|Mesh]]|| [[#draw_pass_4|draw_pass_4]]||                                 |-| int|| [[#draw_passes|draw_passes]]|| {{Span|1}}                           |-| bool|| [[#emitting|emitting]]|| {{Span|false}}                       |-| float|| [[#explosiveness|explosiveness]]|| {{Span|0.0}}                         |-| int|| [[#fixed_fps|fixed_fps]]|| {{Span|0}}                           |-| bool|| [[#fract_delta|fract_delta]]|| {{Span|true}}                        |-| float|| [[#lifetime|lifetime]]|| {{Span|1.0}}                         |-| bool|| [[#local_coords|local_coords]]|| {{Span|true}}                        |-| bool|| [[#one_shot|one_shot]]|| {{Span|false}}                       |-| float|| [[#preprocess|preprocess]]|| {{Span|0.0}}                         |-| [[Material GD|Material]]|| [[#process_material|process_material]]||                                 |-| float|| [[#randomness|randomness]]|| {{Span|0.0}}                         |-| float|| [[#speed_scale|speed_scale]]|| {{Span|1.0}}                         |-| [[AABB GD|AABB]]|| [[#visibility_aabb|visibility_aabb]]|| {{Span|AABB( -4, -4, -4, 8, 8, 8 )}} |}== Methods =={| class="wikitable | [[AABB GD|AABB]]|| [[#capture_aabb|capture_aabb]] '''(''' ''')''' const                                                                |-| [[Mesh GD|Mesh]]|| [[#get_draw_pass_mesh|get_draw_pass_mesh]] '''(''' int pass ''')''' const                         |-| void|| [[#restart|restart]] '''(''' ''')'''                                                                                |-| void|| [[#set_draw_pass_mesh|set_draw_pass_mesh]] '''(''' int pass, [[Mesh GD|Mesh]] mesh ''')''' |}== Enumerations ===== DrawOrder ====== DRAW_ORDER_INDEX ====== DRAW_ORDER_LIFETIME ====== DRAW_ORDER_VIEW_DEPTH ===enum '''DrawOrder''':*  '''DRAW_ORDER_INDEX''' = '''0'''  Particles are drawn in the order emitted.*  '''DRAW_ORDER_LIFETIME''' = '''1'''  Particles are drawn in order of remaining lifetime.*  '''DRAW_ORDER_VIEW_DEPTH''' = '''2'''  Particles are drawn in order of depth.== Constants ===== MAX_DRAW_PASSES ===*  '''MAX_DRAW_PASSES''' = '''4'''  Maximum number of draw passes supported.== Property Descriptions ===== amount ===*  int '''amount'''{| class="wikitable | ''Default''|| {{Span|8}}             |-| ''Setter''|| set_amount(value) |-| ''Getter''|| get_amount()      |}Number of particles to emit.=== draw_order ===*  [[#DrawOrder|DrawOrder]] '''draw_order'''{| class="wikitable | ''Default''|| {{Span|0}}                 |-| ''Setter''|| set_draw_order(value) |-| ''Getter''|| get_draw_order()      |}Particle draw order. Uses [[#DrawOrder|DrawOrder]] values.=== draw_pass_1 ===*  [[Mesh GD|Mesh]] '''draw_pass_1'''{| class="wikitable | ''Setter''|| set_draw_pass_mesh(value) |-| ''Getter''|| get_draw_pass_mesh()      |}[[Mesh GD|Mesh]] that is drawn for the first draw pass.=== draw_pass_2 ===*  [[Mesh GD|Mesh]] '''draw_pass_2'''{| class="wikitable | ''Setter''|| set_draw_pass_mesh(value) |-| ''Getter''|| get_draw_pass_mesh()      |}[[Mesh GD|Mesh]] that is drawn for the second draw pass.=== draw_pass_3 ===*  [[Mesh GD|Mesh]] '''draw_pass_3'''{| class="wikitable | ''Setter''|| set_draw_pass_mesh(value) |-| ''Getter''|| get_draw_pass_mesh()      |}[[Mesh GD|Mesh]] that is drawn for the third draw pass.=== draw_pass_4 ===*  [[Mesh GD|Mesh]] '''draw_pass_4'''{| class="wikitable | ''Setter''|| set_draw_pass_mesh(value) |-| ''Getter''|| get_draw_pass_mesh()      |}[[Mesh GD|Mesh]] that is drawn for the fourth draw pass.=== draw_passes ===*  int '''draw_passes'''{| class="wikitable | ''Default''|| {{Span|1}}                  |-| ''Setter''|| set_draw_passes(value) |-| ''Getter''|| get_draw_passes()      |}The number of draw passes when rendering particles.=== emitting ===*  bool '''emitting'''{| class="wikitable | ''Default''|| {{Span|false}}           |-| ''Setter''|| set_emitting(value) |-| ''Getter''|| is_emitting()       |}If {{Span|true}}, particles are being emitted.=== explosiveness ===*  float '''explosiveness'''{| class="wikitable | ''Default''|| {{Span|0.0}}                        |-| ''Setter''|| set_explosiveness_ratio(value) |-| ''Getter''|| get_explosiveness_ratio()      |}Time ratio between each emission. If {{Span|0}}, particles are emitted continuously. If {{Span|1}}, all particles are emitted simultaneously.=== fixed_fps ===*  int '''fixed_fps'''{| class="wikitable | ''Default''|| {{Span|0}}                |-| ''Setter''|| set_fixed_fps(value) |-| ''Getter''|| get_fixed_fps()      |}The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the simulation of the particle system itself.=== fract_delta ===*  bool '''fract_delta'''{| class="wikitable | ''Default''|| {{Span|true}}                    |-| ''Setter''|| set_fractional_delta(value) |-| ''Getter''|| get_fractional_delta()      |}If {{Span|true}}, results in fractional delta calculation which has a smoother particles display effect.=== lifetime ===*  float '''lifetime'''{| class="wikitable | ''Default''|| {{Span|1.0}}             |-| ''Setter''|| set_lifetime(value) |-| ''Getter''|| get_lifetime()      |}Amount of time each particle will exist.=== local_coords ===*  bool '''local_coords'''{| class="wikitable | ''Default''|| {{Span|true}}                         |-| ''Setter''|| set_use_local_coordinates(value) |-| ''Getter''|| get_use_local_coordinates()      |}If {{Span|true}}, particles use the parent node's coordinate space. If {{Span|false}}, they use global coordinates.=== one_shot ===*  bool '''one_shot'''{| class="wikitable | ''Default''|| {{Span|false}}           |-| ''Setter''|| set_one_shot(value) |-| ''Getter''|| get_one_shot()      |}If {{Span|true}}, only {{Span|amount}} particles will be emitted.=== preprocess ===*  float '''preprocess'''{| class="wikitable | ''Default''|| {{Span|0.0}}                     |-| ''Setter''|| set_pre_process_time(value) |-| ''Getter''|| get_pre_process_time()      |}Amount of time to preprocess the particles before animation starts. Lets you start the animation some time after particles have started emitting.=== process_material ===*  [[Material GD|Material]] '''process_material'''{| class="wikitable | ''Setter''|| set_process_material(value) |-| ''Getter''|| get_process_material()      |}[[Material GD|Material]] for processing particles. Can be a [[ParticlesMaterial GD|ParticlesMaterial]] or a [[ShaderMaterial GD|ShaderMaterial]].=== randomness ===*  float '''randomness'''{| class="wikitable | ''Default''|| {{Span|0.0}}                     |-| ''Setter''|| set_randomness_ratio(value) |-| ''Getter''|| get_randomness_ratio()      |}Emission randomness ratio.=== speed_scale ===*  float '''speed_scale'''{| class="wikitable | ''Default''|| {{Span|1.0}}                |-| ''Setter''|| set_speed_scale(value) |-| ''Getter''|| get_speed_scale()      |}Speed scaling ratio. A value of {{Span|0}} can be used to pause the particles.=== visibility_aabb ===*  [[AABB GD|AABB]] '''visibility_aabb'''{| class="wikitable | ''Default''|| {{Span|AABB( -4, -4, -4, 8, 8, 8 )}} |-| ''Setter''|| set_visibility_aabb(value)      |-| ''Getter''|| get_visibility_aabb()           |}The [[AABB GD|AABB]] that determines the area of the world part of which needs to be visible on screen for the particle system to be active.== Method Descriptions ===== capture_aabb ===*  [[AABB GD|AABB]] '''capture_aabb ( )''' constReturns the axis-aligned bounding box that contains all the particles that are active in the current frame.=== get_draw_pass_mesh ===*  [[Mesh GD|Mesh]] '''get_draw_pass_mesh''' '''(''' int pass ''')''' constReturns the [[Mesh GD|Mesh]] that is drawn at index {{Span|pass}}.=== restart ===*  void '''restart ( )'''Restarts the particle emission, clearing existing particles.=== set_draw_pass_mesh ===*  void '''set_draw_pass_mesh''' '''(''' int pass, [[Mesh GD|Mesh]] mesh ''')'''Sets the [[Mesh GD|Mesh]] that is drawn at index {{Span|pass}}.