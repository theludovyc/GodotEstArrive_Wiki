__NOTOC__'''Inherits:''' [[PacketPeer GD|PacketPeer]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]UDP packet peer.== Description ==UDP packet peer. Can be used to send raw UDP packets as well as [[Variant GD|Variant]]\ s.== Methods =={| class="wikitable | void|| [[#close|close]] '''(''' ''')'''                                                                                                                           |-| [[@GlobalScope GD#Error|Error]]|| [[#connect_to_host|connect_to_host]] '''(''' [[String GD|String]] host, int port ''')'''                                          |-| [[String GD|String]]|| [[#get_packet_ip|get_packet_ip]] '''(''' ''')''' const                                                                                                     |-| int|| [[#get_packet_port|get_packet_port]] '''(''' ''')''' const                                                                                                 |-| bool|| [[#is_connected_to_host|is_connected_to_host]] '''(''' ''')''' const                                                                                       |-| bool|| [[#is_listening|is_listening]] '''(''' ''')''' const                                                                                                       |-| [[@GlobalScope GD#Error|Error]]|| [[#join_multicast_group|join_multicast_group]] '''(''' [[String GD|String]] multicast_address, [[String GD|String]] interface_name ''')'''   |-| [[@GlobalScope GD#Error|Error]]|| [[#leave_multicast_group|leave_multicast_group]] '''(''' [[String GD|String]] multicast_address, [[String GD|String]] interface_name ''')''' |-| [[@GlobalScope GD#Error|Error]]|| [[#listen|listen]] '''(''' int port, [[String GD|String]] bind_address="*", int recv_buf_size=65536 ''')'''     |-| void|| [[#set_broadcast_enabled|set_broadcast_enabled]] '''(''' bool enabled ''')'''                                                           |-| [[@GlobalScope GD#Error|Error]]|| [[#set_dest_address|set_dest_address]] '''(''' [[String GD|String]] host, int port ''')'''                                        |-| [[@GlobalScope GD#Error|Error]]|| [[#wait|wait]] '''(''' ''')'''                                                                                                                             |}== Method Descriptions ===== close ===*  void '''close ( )'''Closes the UDP socket the {{Span|PacketPeerUDP}} is currently listening on.=== connect_to_host ===*  [[@GlobalScope GD#Error|Error]] '''connect_to_host''' '''(''' [[String GD|String]] host, int port ''')'''Calling this method connects this UDP peer to the given {{Span|host}}/{{Span|port}} pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to [[#set_dest_address|set_dest_address]] are not allowed). This method does not send any data to the remote peer, to do that, use [[PacketPeer GD#put_var|PacketPeer.put_var()]] or [[PacketPeer GD#put_packet|PacketPeer.put_packet()]] as usual. See also [[UDPServer GD|UDPServer]].Note: Connecting to the remote peer does not help to protect from malicious attacks like IP spoofing, etc. Think about using an encryption technique like SSL or DTLS if you feel like your application is transferring sensitive information.=== get_packet_ip ===*  [[String GD|String]] '''get_packet_ip ( )''' constReturns the IP of the remote peer that sent the last packet(that was received with [[PacketPeer GD#get_packet|PacketPeer.get_packet()]] or [[PacketPeer GD#get_var|PacketPeer.get_var()]]).=== get_packet_port ===*  int '''get_packet_port ( )''' constReturns the port of the remote peer that sent the last packet(that was received with [[PacketPeer GD#get_packet|PacketPeer.get_packet()]] or [[PacketPeer GD#get_var|PacketPeer.get_var()]]).=== is_connected_to_host ===*  bool '''is_connected_to_host ( )''' constReturns {{Span|true}} if the UDP socket is open and has been connected to a remote address. See [[#connect_to_host|connect_to_host]].=== is_listening ===*  bool '''is_listening ( )''' constReturns whether this {{Span|PacketPeerUDP}} is listening.=== join_multicast_group ===*  [[@GlobalScope GD#Error|Error]] '''join_multicast_group''' '''(''' [[String GD|String]] multicast_address, [[String GD|String]] interface_name ''')'''Joins the multicast group specified by {{Span|multicast_address}} using the interface identified by {{Span|interface_name}}.You can join the same multicast group with multiple interfaces. Use [[IP GD#get_local_interfaces|IP.get_local_interfaces()]] to know which are available.Note: Some Android devices might require the {{Span|CHANGE_WIFI_MULTICAST_STATE}} permission for multicast to work.=== leave_multicast_group ===*  [[@GlobalScope GD#Error|Error]] '''leave_multicast_group''' '''(''' [[String GD|String]] multicast_address, [[String GD|String]] interface_name ''')'''Removes the interface identified by {{Span|interface_name}} from the multicast group specified by {{Span|multicast_address}}.=== listen ===*  [[@GlobalScope GD#Error|Error]] '''listen''' '''(''' int port, [[String GD|String]] bind_address="*", int recv_buf_size=65536 ''')'''Makes this {{Span|PacketPeerUDP}} listen on the {{Span|port}} binding to {{Span|bind_address}} with a buffer size {{Span|recv_buf_size}}.If {{Span|bind_address}} is set to {{Span|"*"}} (default), the peer will listen on all available addresses (both IPv4 and IPv6).If {{Span|bind_address}} is set to {{Span|"0.0.0.0"}} (for IPv4) or {{Span|"::"}} (for IPv6), the peer will listen on all available addresses matching that IP type.If {{Span|bind_address}} is set to any valid address (e.g. {{Span|"192.168.1.101"}}, {{Span|"::1"}}, etc), the peer will only listen on the interface with that addresses (or fail if no interface with the given address exists).=== set_broadcast_enabled ===*  void '''set_broadcast_enabled''' '''(''' bool enabled ''')'''Enable or disable sending of broadcast packets (e.g. {{Span|set_dest_address("255.255.255.255", 4343)}}. This option is disabled by default.Note: Some Android devices might require the {{Span|CHANGE_WIFI_MULTICAST_STATE}} permission and this option to be enabled to receive broadcast packets too.=== set_dest_address ===*  [[@GlobalScope GD#Error|Error]] '''set_dest_address''' '''(''' [[String GD|String]] host, int port ''')'''Sets the destination address and port for sending packets and variables. A hostname will be resolved using DNS if needed.Note: [[#set_broadcast_enabled|set_broadcast_enabled]] must be enabled before sending packets to a broadcast address (e.g. {{Span|255.255.255.255}}).=== wait ===*  [[@GlobalScope GD#Error|Error]] '''wait ( )'''Waits for a packet to arrive on the listening port. See [[#listen|listen]].