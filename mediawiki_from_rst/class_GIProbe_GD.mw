__NOTOC__'''Inherits:''' [[VisualInstance GD|VisualInstance]] '''<''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Real-time global illumination (GI) probe.== Description =={{Span|GIProbe}}\ s are used to provide high-quality real-time indirect light to scenes. They precompute the effect of objects that emit light and the effect of static geometry to simulate the behavior of complex light in real-time. {{Span|GIProbe}}\ s need to be baked before using, however, once baked, dynamic objects will receive light from them. Further, lights can be fully dynamic or baked.Having {{Span|GIProbe}}\ s in a scene can be expensive, the quality of the probe can be turned down in exchange for better performance in the [[ProjectSettings GD|ProjectSettings]] using [[ProjectSettings GD#rendering/quality/gi_probes/quality|ProjectSettings.rendering/quality/gi_probes/quality()]].== Tutorials ==*  :doc:`../tutorials/3d/gi_probes`== Properties =={| class="wikitable | [[GIProbeData GD|GIProbeData]]|| [[#data|data]]||                           |-| [[Vector3 GD|Vector3]]|| [[#extents|extents]]|| {{Span|Vector3( 10, 10, 10 )}} |-| [[#Subdiv|Subdiv]]|| [[#subdiv|subdiv]]|| {{Span|1}}                     |}== Methods =={| class="wikitable | void|| [[#bake|bake]] '''(''' [[Node GD|Node]] from_node=null, bool create_visual_debug=false ''')''' |-| void|| [[#debug_bake|debug_bake]] '''(''' ''')'''                                                                               |}== Enumerations ===== Subdiv ====== SUBDIV_64 ====== SUBDIV_128 ====== SUBDIV_256 ====== SUBDIV_512 ====== SUBDIV_MAX ===enum '''Subdiv''':*  '''SUBDIV_64''' = '''0'''  Use 64 subdivisions. This is the lowest quality setting, but the fastest. Use it if you can, but especially use it on lower-end hardware.*  '''SUBDIV_128''' = '''1'''  Use 128 subdivisions. This is the default quality setting.*  '''SUBDIV_256''' = '''2'''  Use 256 subdivisions.*  '''SUBDIV_512''' = '''3'''  Use 512 subdivisions. This is the highest quality setting, but the slowest. On lower-end hardware this could cause the GPU to stall.*  '''SUBDIV_MAX''' = '''4'''  Represents the size of the [[#Subdiv|Subdiv]] enum.== Property Descriptions ===== data ===*  [[GIProbeData GD|GIProbeData]] '''data'''{| class="wikitable | ''Setter''|| set_probe_data(value) |-| ''Getter''|| get_probe_data()      |}The [[GIProbeData GD|GIProbeData]] resource that holds the data for this {{Span|GIProbe}}.=== extents ===*  [[Vector3 GD|Vector3]] '''extents'''{| class="wikitable | ''Default''|| {{Span|Vector3( 10, 10, 10 )}} |-| ''Setter''|| set_extents(value)        |-| ''Getter''|| get_extents()             |}The size of the area covered by the {{Span|GIProbe}}. If you make the extents larger without increasing the subdivisions with [[#subdiv|subdiv]], the size of each cell will increase and result in lower detailed lighting.=== subdiv ===*  [[#Subdiv|Subdiv]] '''subdiv'''{| class="wikitable | ''Default''|| {{Span|1}}             |-| ''Setter''|| set_subdiv(value) |-| ''Getter''|| get_subdiv()      |}Number of times to subdivide the grid that the {{Span|GIProbe}} operates on. A higher number results in finer detail and thus higher visual quality, while lower numbers result in better performance.== Method Descriptions ===== bake ===*  void '''bake''' '''(''' [[Node GD|Node]] from_node=null, bool create_visual_debug=false ''')'''Bakes the effect from all [[GeometryInstance GD|GeometryInstance]]\ s marked with [[GeometryInstance GD#use_in_baked_light|GeometryInstance.use_in_baked_light()]] and [[Light GD|Light]]\ s marked with either [[Light GD#BAKE_INDIRECT|Light.BAKE_INDIRECT()]] or [[Light GD#BAKE_ALL|Light.BAKE_ALL()]]. If {{Span|create_visual_debug}} is {{Span|true}}, after baking the light, this will generate a [[MultiMesh GD|MultiMesh]] that has a cube representing each solid cell with each cube colored to the cell's albedo color. This can be used to visualize the {{Span|GIProbe}}'s data and debug any issues that may be occurring.=== debug_bake ===*  void '''debug_bake ( )'''Calls [[#bake|bake]] with {{Span|create_visual_debug}} enabled.