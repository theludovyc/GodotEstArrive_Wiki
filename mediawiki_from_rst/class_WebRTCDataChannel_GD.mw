__NOTOC__'''Inherits:''' [[PacketPeer GD|PacketPeer]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[WebRTCDataChannelGDNative GD|WebRTCDataChannelGDNative]]== Properties =={| class="wikitable | [[#WriteMode|WriteMode]]|| [[#write_mode|write_mode]]|| {{Span|1}} |}== Methods =={| class="wikitable | void|| [[#close|close]] '''(''' ''')'''                                             |-| int|| [[#get_id|get_id]] '''(''' ''')''' const                                     |-| [[String GD|String]]|| [[#get_label|get_label]] '''(''' ''')''' const                               |-| int|| [[#get_max_packet_life_time|get_max_packet_life_time]] '''(''' ''')''' const |-| int|| [[#get_max_retransmits|get_max_retransmits]] '''(''' ''')''' const           |-| [[String GD|String]]|| [[#get_protocol|get_protocol]] '''(''' ''')''' const                         |-| [[#ChannelState|ChannelState]]|| [[#get_ready_state|get_ready_state]] '''(''' ''')''' const                   |-| bool|| [[#is_negotiated|is_negotiated]] '''(''' ''')''' const                       |-| bool|| [[#is_ordered|is_ordered]] '''(''' ''')''' const                             |-| [[@GlobalScope GD#Error|Error]]|| [[#poll|poll]] '''(''' ''')'''                                               |-| bool|| [[#was_string_packet|was_string_packet]] '''(''' ''')''' const               |}== Enumerations ===== WriteMode ====== WRITE_MODE_TEXT ====== WRITE_MODE_BINARY ===enum '''WriteMode''':*  '''WRITE_MODE_TEXT''' = '''0'''  Tells the channel to send data over this channel as text. An external peer (non-Godot) would receive this as a string.*  '''WRITE_MODE_BINARY''' = '''1'''  Tells the channel to send data over this channel as binary. An external peer (non-Godot) would receive this as array buffer or blob.=== ChannelState ====== STATE_CONNECTING ====== STATE_OPEN ====== STATE_CLOSING ====== STATE_CLOSED ===enum '''ChannelState''':*  '''STATE_CONNECTING''' = '''0'''  The channel was created, but it's still trying to connect.*  '''STATE_OPEN''' = '''1'''  The channel is currently open, and data can flow over it.*  '''STATE_CLOSING''' = '''2'''  The channel is being closed, no new messages will be accepted, but those already in queue will be flushed.*  '''STATE_CLOSED''' = '''3'''  The channel was closed, or connection failed.== Property Descriptions ===== write_mode ===*  [[#WriteMode|WriteMode]] '''write_mode'''{| class="wikitable | ''Default''|| {{Span|1}}                 |-| ''Setter''|| set_write_mode(value) |-| ''Getter''|| get_write_mode()      |}The transfer mode to use when sending outgoing packet. Either text or binary.== Method Descriptions ===== close ===*  void '''close ( )'''Closes this data channel, notifying the other peer.=== get_id ===*  int '''get_id ( )''' constReturns the id assigned to this channel during creation (or auto-assigned during negotiation).If the channel is not negotiated out-of-band the id will only be available after the connection is established (will return {{Span|65535}} until then).=== get_label ===*  [[String GD|String]] '''get_label ( )''' constReturns the label assigned to this channel during creation.=== get_max_packet_life_time ===*  int '''get_max_packet_life_time ( )''' constReturns the {{Span|maxPacketLifeTime}} value assigned to this channel during creation.Will be {{Span|65535}} if not specified.=== get_max_retransmits ===*  int '''get_max_retransmits ( )''' constReturns the {{Span|maxRetransmits}} value assigned to this channel during creation.Will be {{Span|65535}} if not specified.=== get_protocol ===*  [[String GD|String]] '''get_protocol ( )''' constReturns the sub-protocol assigned to this channel during creation. An empty string if not specified.=== get_ready_state ===*  [[#ChannelState|ChannelState]] '''get_ready_state ( )''' constReturns the current state of this channel, see [[#ChannelState|ChannelState]].=== is_negotiated ===*  bool '''is_negotiated ( )''' constReturns {{Span|true}} if this channel was created with out-of-band configuration.=== is_ordered ===*  bool '''is_ordered ( )''' constReturns {{Span|true}} if this channel was created with ordering enabled (default).=== poll ===*  [[@GlobalScope GD#Error|Error]] '''poll ( )'''Reserved, but not used for now.=== was_string_packet ===*  bool '''was_string_packet ( )''' constReturns {{Span|true}} if the last received packet was transferred as text. See [[#write_mode|write_mode]].