__NOTOC__'''Inherits:''' [[Object GD|Object]]Server interface for low-level audio access.== Description =={{Span|AudioServer}} is a low-level server interface for audio access. It is in charge of creating sample data (playable audio) as well as its playback via a voice interface.== Tutorials ==*  :doc:`../tutorials/audio/audio_buses`== Properties =={| class="wikitable | int|| [[#bus_count|bus_count]]|| {{Span|1}}         |-| [[String GD|String]]|| [[#device|device]]|| {{Span|"Default"}} |-| float|| [[#global_rate_scale|global_rate_scale]]|| {{Span|1.0}}       |}== Methods =={| class="wikitable | void|| [[#add_bus|add_bus]] '''(''' int at_position=-1 ''')'''                                                                                             |-| void|| [[#add_bus_effect|add_bus_effect]] '''(''' int bus_idx, [[AudioEffect GD|AudioEffect]] effect, int at_position=-1 ''')'''  |-| [[String GD|String]]|| [[#capture_get_device|capture_get_device]] '''(''' ''')'''                                                                                                            |-| [[Array GD|Array]]|| [[#capture_get_device_list|capture_get_device_list]] '''(''' ''')'''                                                                                                  |-| void|| [[#capture_set_device|capture_set_device]] '''(''' [[String GD|String]] name ''')'''                                                                           |-| [[AudioBusLayout GD|AudioBusLayout]]|| [[#generate_bus_layout|generate_bus_layout]] '''(''' ''')''' const                                                                                                    |-| int|| [[#get_bus_channels|get_bus_channels]] '''(''' int bus_idx ''')''' const                                                                            |-| [[AudioEffect GD|AudioEffect]]|| [[#get_bus_effect|get_bus_effect]] '''(''' int bus_idx, int effect_idx ''')'''                                                    |-| int|| [[#get_bus_effect_count|get_bus_effect_count]] '''(''' int bus_idx ''')'''                                                                          |-| [[AudioEffectInstance GD|AudioEffectInstance]]|| [[#get_bus_effect_instance|get_bus_effect_instance]] '''(''' int bus_idx, int effect_idx, int channel=0 ''')''' |-| int|| [[#get_bus_index|get_bus_index]] '''(''' [[StringName GD|StringName]] bus_name ''')''' const                                                                   |-| [[String GD|String]]|| [[#get_bus_name|get_bus_name]] '''(''' int bus_idx ''')''' const                                                                                    |-| float|| [[#get_bus_peak_volume_left_db|get_bus_peak_volume_left_db]] '''(''' int bus_idx, int channel ''')''' const                       |-| float|| [[#get_bus_peak_volume_right_db|get_bus_peak_volume_right_db]] '''(''' int bus_idx, int channel ''')''' const                     |-| [[StringName GD|StringName]]|| [[#get_bus_send|get_bus_send]] '''(''' int bus_idx ''')''' const                                                                                    |-| float|| [[#get_bus_volume_db|get_bus_volume_db]] '''(''' int bus_idx ''')''' const                                                                          |-| [[Array GD|Array]]|| [[#get_device_list|get_device_list]] '''(''' ''')'''                                                                                                                  |-| float|| [[#get_mix_rate|get_mix_rate]] '''(''' ''')''' const                                                                                                                  |-| float|| [[#get_output_latency|get_output_latency]] '''(''' ''')''' const                                                                                                      |-| [[#SpeakerMode|SpeakerMode]]|| [[#get_speaker_mode|get_speaker_mode]] '''(''' ''')''' const                                                                                                          |-| float|| [[#get_time_since_last_mix|get_time_since_last_mix]] '''(''' ''')''' const                                                                                            |-| float|| [[#get_time_to_next_mix|get_time_to_next_mix]] '''(''' ''')''' const                                                                                                  |-| bool|| [[#is_bus_bypassing_effects|is_bus_bypassing_effects]] '''(''' int bus_idx ''')''' const                                                            |-| bool|| [[#is_bus_effect_enabled|is_bus_effect_enabled]] '''(''' int bus_idx, int effect_idx ''')''' const                                |-| bool|| [[#is_bus_mute|is_bus_mute]] '''(''' int bus_idx ''')''' const                                                                                      |-| bool|| [[#is_bus_solo|is_bus_solo]] '''(''' int bus_idx ''')''' const                                                                                      |-| void|| [[#lock|lock]] '''(''' ''')'''                                                                                                                                        |-| void|| [[#move_bus|move_bus]] '''(''' int index, int to_index ''')'''                                                                    |-| void|| [[#remove_bus|remove_bus]] '''(''' int index ''')'''                                                                                                |-| void|| [[#remove_bus_effect|remove_bus_effect]] '''(''' int bus_idx, int effect_idx ''')'''                                              |-| void|| [[#set_bus_bypass_effects|set_bus_bypass_effects]] '''(''' int bus_idx, bool enable ''')'''                                      |-| void|| [[#set_bus_effect_enabled|set_bus_effect_enabled]] '''(''' int bus_idx, int effect_idx, bool enabled ''')'''   |-| void|| [[#set_bus_layout|set_bus_layout]] '''(''' [[AudioBusLayout GD|AudioBusLayout]] bus_layout ''')'''                                                             |-| void|| [[#set_bus_mute|set_bus_mute]] '''(''' int bus_idx, bool enable ''')'''                                                          |-| void|| [[#set_bus_name|set_bus_name]] '''(''' int bus_idx, [[String GD|String]] name ''')'''                                                        |-| void|| [[#set_bus_send|set_bus_send]] '''(''' int bus_idx, [[StringName GD|StringName]] send ''')'''                                                |-| void|| [[#set_bus_solo|set_bus_solo]] '''(''' int bus_idx, bool enable ''')'''                                                          |-| void|| [[#set_bus_volume_db|set_bus_volume_db]] '''(''' int bus_idx, float volume_db ''')'''                                           |-| void|| [[#swap_bus_effects|swap_bus_effects]] '''(''' int bus_idx, int effect_idx, int by_effect_idx ''')'''           |-| void|| [[#unlock|unlock]] '''(''' ''')'''                                                                                                                                    |}== Signals ===== bus_layout_changed ===*  '''bus_layout_changed ( )'''Emitted when the [[AudioBusLayout GD|AudioBusLayout]] changes.== Enumerations ===== SpeakerMode ====== SPEAKER_MODE_STEREO ====== SPEAKER_SURROUND_31 ====== SPEAKER_SURROUND_51 ====== SPEAKER_SURROUND_71 ===enum '''SpeakerMode''':*  '''SPEAKER_MODE_STEREO''' = '''0'''  Two or fewer speakers were detected.*  '''SPEAKER_SURROUND_31''' = '''1'''  A 3.1 channel surround setup was detected.*  '''SPEAKER_SURROUND_51''' = '''2'''  A 5.1 channel surround setup was detected.*  '''SPEAKER_SURROUND_71''' = '''3'''  A 7.1 channel surround setup was detected.== Property Descriptions ===== bus_count ===*  int '''bus_count'''{| class="wikitable | ''Default''|| {{Span|1}}                |-| ''Setter''|| set_bus_count(value) |-| ''Getter''|| get_bus_count()      |}Number of available audio buses.=== device ===*  [[String GD|String]] '''device'''{| class="wikitable | ''Default''|| {{Span|"Default"}}     |-| ''Setter''|| set_device(value) |-| ''Getter''|| get_device()      |}Name of the current device for audio output (see [[#get_device_list|get_device_list]]).=== global_rate_scale ===*  float '''global_rate_scale'''{| class="wikitable | ''Default''|| {{Span|1.0}}                      |-| ''Setter''|| set_global_rate_scale(value) |-| ''Getter''|| get_global_rate_scale()      |}Scales the rate at which audio is played (i.e. setting it to {{Span|0.5}} will make the audio be played twice as fast).== Method Descriptions ===== add_bus ===*  void '''add_bus''' '''(''' int at_position=-1 ''')'''Adds a bus at {{Span|at_position}}.=== add_bus_effect ===*  void '''add_bus_effect''' '''(''' int bus_idx, [[AudioEffect GD|AudioEffect]] effect, int at_position=-1 ''')'''Adds an [[AudioEffect GD|AudioEffect]] effect to the bus {{Span|bus_idx}} at {{Span|at_position}}.=== capture_get_device ===*  [[String GD|String]] '''capture_get_device ( )'''Name of the current device for audio input (see [[#capture_get_device_list|capture_get_device_list]]).=== capture_get_device_list ===*  [[Array GD|Array]] '''capture_get_device_list ( )'''Returns the names of all audio input devices detected on the system.=== capture_set_device ===*  void '''capture_set_device''' '''(''' [[String GD|String]] name ''')'''Sets which audio input device is used for audio capture.=== generate_bus_layout ===*  [[AudioBusLayout GD|AudioBusLayout]] '''generate_bus_layout ( )''' constGenerates an [[AudioBusLayout GD|AudioBusLayout]] using the available buses and effects.=== get_bus_channels ===*  int '''get_bus_channels''' '''(''' int bus_idx ''')''' constReturns the amount of channels of the bus at index {{Span|bus_idx}}.=== get_bus_effect ===*  [[AudioEffect GD|AudioEffect]] '''get_bus_effect''' '''(''' int bus_idx, int effect_idx ''')'''Returns the [[AudioEffect GD|AudioEffect]] at position {{Span|effect_idx}} in bus {{Span|bus_idx}}.=== get_bus_effect_count ===*  int '''get_bus_effect_count''' '''(''' int bus_idx ''')'''Returns the number of effects on the bus at {{Span|bus_idx}}.=== get_bus_effect_instance ===*  [[AudioEffectInstance GD|AudioEffectInstance]] '''get_bus_effect_instance''' '''(''' int bus_idx, int effect_idx, int channel=0 ''')'''Returns the [[AudioEffectInstance GD|AudioEffectInstance]] assigned to the given bus and effect indices (and optionally channel).=== get_bus_index ===*  int '''get_bus_index''' '''(''' [[StringName GD|StringName]] bus_name ''')''' constReturns the index of the bus with the name {{Span|bus_name}}.=== get_bus_name ===*  [[String GD|String]] '''get_bus_name''' '''(''' int bus_idx ''')''' constReturns the name of the bus with the index {{Span|bus_idx}}.=== get_bus_peak_volume_left_db ===*  float '''get_bus_peak_volume_left_db''' '''(''' int bus_idx, int channel ''')''' constReturns the peak volume of the left speaker at bus index {{Span|bus_idx}} and channel index {{Span|channel}}.=== get_bus_peak_volume_right_db ===*  float '''get_bus_peak_volume_right_db''' '''(''' int bus_idx, int channel ''')''' constReturns the peak volume of the right speaker at bus index {{Span|bus_idx}} and channel index {{Span|channel}}.=== get_bus_send ===*  [[StringName GD|StringName]] '''get_bus_send''' '''(''' int bus_idx ''')''' constReturns the name of the bus that the bus at index {{Span|bus_idx}} sends to.=== get_bus_volume_db ===*  float '''get_bus_volume_db''' '''(''' int bus_idx ''')''' constReturns the volume of the bus at index {{Span|bus_idx}} in dB.=== get_device_list ===*  [[Array GD|Array]] '''get_device_list ( )'''Returns the names of all audio devices detected on the system.=== get_mix_rate ===*  float '''get_mix_rate ( )''' constReturns the sample rate at the output of the {{Span|AudioServer}}.=== get_output_latency ===*  float '''get_output_latency ( )''' constReturns the audio driver's output latency.=== get_speaker_mode ===*  [[#SpeakerMode|SpeakerMode]] '''get_speaker_mode ( )''' constReturns the speaker configuration.=== get_time_since_last_mix ===*  float '''get_time_since_last_mix ( )''' constReturns the relative time since the last mix occurred.=== get_time_to_next_mix ===*  float '''get_time_to_next_mix ( )''' constReturns the relative time until the next mix occurs.=== is_bus_bypassing_effects ===*  bool '''is_bus_bypassing_effects''' '''(''' int bus_idx ''')''' constIf {{Span|true}}, the bus at index {{Span|bus_idx}} is bypassing effects.=== is_bus_effect_enabled ===*  bool '''is_bus_effect_enabled''' '''(''' int bus_idx, int effect_idx ''')''' constIf {{Span|true}}, the effect at index {{Span|effect_idx}} on the bus at index {{Span|bus_idx}} is enabled.=== is_bus_mute ===*  bool '''is_bus_mute''' '''(''' int bus_idx ''')''' constIf {{Span|true}}, the bus at index {{Span|bus_idx}} is muted.=== is_bus_solo ===*  bool '''is_bus_solo''' '''(''' int bus_idx ''')''' constIf {{Span|true}}, the bus at index {{Span|bus_idx}} is in solo mode.=== lock ===*  void '''lock ( )'''Locks the audio driver's main loop.'''Note:''' Remember to unlock it afterwards.=== move_bus ===*  void '''move_bus''' '''(''' int index, int to_index ''')'''Moves the bus from index {{Span|index}} to index {{Span|to_index}}.=== remove_bus ===*  void '''remove_bus''' '''(''' int index ''')'''Removes the bus at index {{Span|index}}.=== remove_bus_effect ===*  void '''remove_bus_effect''' '''(''' int bus_idx, int effect_idx ''')'''Removes the effect at index {{Span|effect_idx}} from the bus at index {{Span|bus_idx}}.=== set_bus_bypass_effects ===*  void '''set_bus_bypass_effects''' '''(''' int bus_idx, bool enable ''')'''If {{Span|true}}, the bus at index {{Span|bus_idx}} is bypassing effects.=== set_bus_effect_enabled ===*  void '''set_bus_effect_enabled''' '''(''' int bus_idx, int effect_idx, bool enabled ''')'''If {{Span|true}}, the effect at index {{Span|effect_idx}} on the bus at index {{Span|bus_idx}} is enabled.=== set_bus_layout ===*  void '''set_bus_layout''' '''(''' [[AudioBusLayout GD|AudioBusLayout]] bus_layout ''')'''Overwrites the currently used [[AudioBusLayout GD|AudioBusLayout]].=== set_bus_mute ===*  void '''set_bus_mute''' '''(''' int bus_idx, bool enable ''')'''If {{Span|true}}, the bus at index {{Span|bus_idx}} is muted.=== set_bus_name ===*  void '''set_bus_name''' '''(''' int bus_idx, [[String GD|String]] name ''')'''Sets the name of the bus at index {{Span|bus_idx}} to {{Span|name}}.=== set_bus_send ===*  void '''set_bus_send''' '''(''' int bus_idx, [[StringName GD|StringName]] send ''')'''Connects the output of the bus at {{Span|bus_idx}} to the bus named {{Span|send}}.=== set_bus_solo ===*  void '''set_bus_solo''' '''(''' int bus_idx, bool enable ''')'''If {{Span|true}}, the bus at index {{Span|bus_idx}} is in solo mode.=== set_bus_volume_db ===*  void '''set_bus_volume_db''' '''(''' int bus_idx, float volume_db ''')'''Sets the volume of the bus at index {{Span|bus_idx}} to {{Span|volume_db}}.=== swap_bus_effects ===*  void '''swap_bus_effects''' '''(''' int bus_idx, int effect_idx, int by_effect_idx ''')'''Swaps the position of two effects in bus {{Span|bus_idx}}.=== unlock ===*  void '''unlock ( )'''Unlocks the audio driver's main loop. (After locking it, you should always unlock it.)