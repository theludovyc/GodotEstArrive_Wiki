__NOTOC__'''Inherits:''' [[Node2D GD|Node2D]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Point sampler for a [[Path2D GD|Path2D]].== Description ==This node takes its parent [[Path2D GD|Path2D]], and returns the coordinates of a point within it, given a distance from the first vertex.It is useful for making other nodes follow a path, without coding the movement pattern. For that, the nodes must be children of this node. The descendant nodes will then move accordingly when setting an offset in this node.== Properties =={| class="wikitable | bool|| [[#cubic_interp|cubic_interp]]|| {{Span|true}} |-| float|| [[#h_offset|h_offset]]|| {{Span|0.0}}  |-| float|| [[#lookahead|lookahead]]|| {{Span|4.0}}  |-| bool|| [[#loop|loop]]|| {{Span|true}} |-| float|| [[#offset|offset]]|| {{Span|0.0}}  |-| bool|| [[#rotate|rotate]]|| {{Span|true}} |-| float|| [[#unit_offset|unit_offset]]|| {{Span|0.0}}  |-| float|| [[#v_offset|v_offset]]|| {{Span|0.0}}  |}== Property Descriptions ===== cubic_interp ===*  bool '''cubic_interp'''{| class="wikitable | ''Default''|| {{Span|true}}                       |-| ''Setter''|| set_cubic_interpolation(value) |-| ''Getter''|| get_cubic_interpolation()      |}If {{Span|true}}, the position between two cached points is interpolated cubically, and linearly otherwise.The points along the [[Curve2D GD|Curve2D]] of the [[Path2D GD|Path2D]] are precomputed before use, for faster calculations. The point at the requested offset is then calculated interpolating between two adjacent cached points. This may present a problem if the curve makes sharp turns, as the cached points may not follow the curve closely enough.There are two answers to this problem: either increase the number of cached points and increase memory consumption, or make a cubic interpolation between two points at the cost of (slightly) slower calculations.=== h_offset ===*  float '''h_offset'''{| class="wikitable | ''Default''|| {{Span|0.0}}             |-| ''Setter''|| set_h_offset(value) |-| ''Getter''|| get_h_offset()      |}The node's offset along the curve.=== lookahead ===*  float '''lookahead'''{| class="wikitable | ''Default''|| {{Span|4.0}}              |-| ''Setter''|| set_lookahead(value) |-| ''Getter''|| get_lookahead()      |}How far to look ahead of the curve to calculate the tangent if the node is rotating. E.g. shorter lookaheads will lead to faster rotations.=== loop ===*  bool '''loop'''{| class="wikitable | ''Default''|| {{Span|true}}        |-| ''Setter''|| set_loop(value) |-| ''Getter''|| has_loop()      |}If {{Span|true}}, any offset outside the path's length will wrap around, instead of stopping at the ends. Use it for cyclic paths.=== offset ===*  float '''offset'''{| class="wikitable | ''Default''|| {{Span|0.0}}           |-| ''Setter''|| set_offset(value) |-| ''Getter''|| get_offset()      |}The distance along the path in pixels.=== rotate ===*  bool '''rotate'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_rotate(value) |-| ''Getter''|| is_rotating()     |}If {{Span|true}}, this node rotates to follow the path, making its descendants rotate.=== unit_offset ===*  float '''unit_offset'''{| class="wikitable | ''Default''|| {{Span|0.0}}                |-| ''Setter''|| set_unit_offset(value) |-| ''Getter''|| get_unit_offset()      |}The distance along the path as a number in the range 0.0 (for the first vertex) to 1.0 (for the last). This is just another way of expressing the offset within the path, as the offset supplied is multiplied internally by the path's length.=== v_offset ===*  float '''v_offset'''{| class="wikitable | ''Default''|| {{Span|0.0}}             |-| ''Setter''|| set_v_offset(value) |-| ''Getter''|| get_v_offset()      |}The node's offset perpendicular to the curve.