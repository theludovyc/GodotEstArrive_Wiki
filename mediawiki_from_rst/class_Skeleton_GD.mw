__NOTOC__'''Inherits:''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Skeleton for characters and animated objects.== Description ==Skeleton provides a hierarchical interface for managing bones, including pose, rest and animation (see [[Animation GD|Animation]]). It can also use ragdoll physics.The overall transform of a bone with respect to the skeleton is determined by the following hierarchical order: rest pose, custom pose and pose.Note that "global pose" below refers to the overall transform of the bone with respect to skeleton, so it not the actual global/world transform of the bone.== Properties =={| class="wikitable | bool|| [[#animate_physical_bones|animate_physical_bones]]|| {{Span|true}} |}== Methods =={| class="wikitable | void|| [[#add_bone|add_bone]] '''(''' [[String GD|String]] name ''')'''                                                                                                                                                             |-| void|| [[#bind_child_node_to_bone|bind_child_node_to_bone]] '''(''' int bone_idx, [[Node GD|Node]] node ''')'''                                                                                                   |-| void|| [[#clear_bones|clear_bones]] '''(''' ''')'''                                                                                                                                                                                        |-| int|| [[#find_bone|find_bone]] '''(''' [[String GD|String]] name ''')''' const                                                                                                                                                     |-| int|| [[#get_bone_count|get_bone_count]] '''(''' ''')''' const                                                                                                                                                                            |-| [[Transform GD|Transform]]|| [[#get_bone_custom_pose|get_bone_custom_pose]] '''(''' int bone_idx ''')''' const                                                                                                                                 |-| [[Transform GD|Transform]]|| [[#get_bone_global_pose|get_bone_global_pose]] '''(''' int bone_idx ''')''' const                                                                                                                                 |-| [[String GD|String]]|| [[#get_bone_name|get_bone_name]] '''(''' int bone_idx ''')''' const                                                                                                                                               |-| int|| [[#get_bone_parent|get_bone_parent]] '''(''' int bone_idx ''')''' const                                                                                                                                           |-| [[Transform GD|Transform]]|| [[#get_bone_pose|get_bone_pose]] '''(''' int bone_idx ''')''' const                                                                                                                                               |-| [[Transform GD|Transform]]|| [[#get_bone_rest|get_bone_rest]] '''(''' int bone_idx ''')''' const                                                                                                                                               |-| [[Array GD|Array]]|| [[#get_bound_child_nodes_to_bone|get_bound_child_nodes_to_bone]] '''(''' int bone_idx ''')''' const                                                                                                               |-| bool|| [[#is_bone_rest_disabled|is_bone_rest_disabled]] '''(''' int bone_idx ''')''' const                                                                                                                               |-| void|| [[#localize_rests|localize_rests]] '''(''' ''')'''                                                                                                                                                                                  |-| void|| [[#physical_bones_add_collision_exception|physical_bones_add_collision_exception]] '''(''' [[RID GD|RID]] exception ''')'''                                                                                                  |-| void|| [[#physical_bones_remove_collision_exception|physical_bones_remove_collision_exception]] '''(''' [[RID GD|RID]] exception ''')'''                                                                                            |-| void|| [[#physical_bones_start_simulation|physical_bones_start_simulation]] '''(''' [[Array GD|Array]] bones=[  ] ''')'''                                                                                                           |-| void|| [[#physical_bones_stop_simulation|physical_bones_stop_simulation]] '''(''' ''')'''                                                                                                                                                  |-| [[SkinReference GD|SkinReference]]|| [[#register_skin|register_skin]] '''(''' [[Skin GD|Skin]] skin ''')'''                                                                                                                                                       |-| void|| [[#set_bone_custom_pose|set_bone_custom_pose]] '''(''' int bone_idx, [[Transform GD|Transform]] custom_pose ''')'''                                                                                        |-| void|| [[#set_bone_disable_rest|set_bone_disable_rest]] '''(''' int bone_idx, bool disable ''')'''                                                                                                    |-| void|| [[#set_bone_global_pose_override|set_bone_global_pose_override]] '''(''' int bone_idx, [[Transform GD|Transform]] pose, float amount, bool persistent=false ''')''' |-| void|| [[#set_bone_parent|set_bone_parent]] '''(''' int bone_idx, int parent_idx ''')'''                                                                                                               |-| void|| [[#set_bone_pose|set_bone_pose]] '''(''' int bone_idx, [[Transform GD|Transform]] pose ''')'''                                                                                                             |-| void|| [[#set_bone_rest|set_bone_rest]] '''(''' int bone_idx, [[Transform GD|Transform]] rest ''')'''                                                                                                             |-| void|| [[#unbind_child_node_from_bone|unbind_child_node_from_bone]] '''(''' int bone_idx, [[Node GD|Node]] node ''')'''                                                                                           |-| void|| [[#unparent_bone_and_rest|unparent_bone_and_rest]] '''(''' int bone_idx ''')'''                                                                                                                                   |}== Constants ===== NOTIFICATION_UPDATE_SKELETON ===*  '''NOTIFICATION_UPDATE_SKELETON''' = '''50'''== Property Descriptions ===== animate_physical_bones ===*  bool '''animate_physical_bones'''{| class="wikitable | ''Default''|| {{Span|true}}                          |-| ''Setter''|| set_animate_physical_bones(value) |-| ''Getter''|| get_animate_physical_bones()      |}== Method Descriptions ===== add_bone ===*  void '''add_bone''' '''(''' [[String GD|String]] name ''')'''Adds a bone, with name {{Span|name}}. [[#get_bone_count|get_bone_count]] will become the bone index.=== bind_child_node_to_bone ===*  void '''bind_child_node_to_bone''' '''(''' int bone_idx, [[Node GD|Node]] node ''')'''*Deprecated soon.*=== clear_bones ===*  void '''clear_bones ( )'''Clear all the bones in this skeleton.=== find_bone ===*  int '''find_bone''' '''(''' [[String GD|String]] name ''')''' constReturns the bone index that matches {{Span|name}} as its name.=== get_bone_count ===*  int '''get_bone_count ( )''' constReturns the amount of bones in the skeleton.=== get_bone_custom_pose ===*  [[Transform GD|Transform]] '''get_bone_custom_pose''' '''(''' int bone_idx ''')''' constReturns the custom pose of the specified bone. Custom pose is applied on top of the rest pose.=== get_bone_global_pose ===*  [[Transform GD|Transform]] '''get_bone_global_pose''' '''(''' int bone_idx ''')''' constReturns the overall transform of the specified bone, with respect to the skeleton. Being relative to the skeleton frame, this is not the actual "global" transform of the bone.=== get_bone_name ===*  [[String GD|String]] '''get_bone_name''' '''(''' int bone_idx ''')''' constReturns the name of the bone at index {{Span|index}}.=== get_bone_parent ===*  int '''get_bone_parent''' '''(''' int bone_idx ''')''' constReturns the bone index which is the parent of the bone at {{Span|bone_idx}}. If -1, then bone has no parent.'''Note:''' The parent bone returned will always be less than {{Span|bone_idx}}.=== get_bone_pose ===*  [[Transform GD|Transform]] '''get_bone_pose''' '''(''' int bone_idx ''')''' constReturns the pose transform of the specified bone. Pose is applied on top of the custom pose, which is applied on top the rest pose.=== get_bone_rest ===*  [[Transform GD|Transform]] '''get_bone_rest''' '''(''' int bone_idx ''')''' constReturns the rest transform for a bone {{Span|bone_idx}}.=== get_bound_child_nodes_to_bone ===*  [[Array GD|Array]] '''get_bound_child_nodes_to_bone''' '''(''' int bone_idx ''')''' const*Deprecated soon.*=== is_bone_rest_disabled ===*  bool '''is_bone_rest_disabled''' '''(''' int bone_idx ''')''' const=== localize_rests ===*  void '''localize_rests ( )'''=== physical_bones_add_collision_exception ===*  void '''physical_bones_add_collision_exception''' '''(''' [[RID GD|RID]] exception ''')'''=== physical_bones_remove_collision_exception ===*  void '''physical_bones_remove_collision_exception''' '''(''' [[RID GD|RID]] exception ''')'''=== physical_bones_start_simulation ===*  void '''physical_bones_start_simulation''' '''(''' [[Array GD|Array]] bones=[  ] ''')'''=== physical_bones_stop_simulation ===*  void '''physical_bones_stop_simulation ( )'''=== register_skin ===*  [[SkinReference GD|SkinReference]] '''register_skin''' '''(''' [[Skin GD|Skin]] skin ''')'''=== set_bone_custom_pose ===*  void '''set_bone_custom_pose''' '''(''' int bone_idx, [[Transform GD|Transform]] custom_pose ''')'''=== set_bone_disable_rest ===*  void '''set_bone_disable_rest''' '''(''' int bone_idx, bool disable ''')'''=== set_bone_global_pose_override ===*  void '''set_bone_global_pose_override''' '''(''' int bone_idx, [[Transform GD|Transform]] pose, float amount, bool persistent=false ''')'''=== set_bone_parent ===*  void '''set_bone_parent''' '''(''' int bone_idx, int parent_idx ''')'''Sets the bone index {{Span|parent_idx}} as the parent of the bone at {{Span|bone_idx}}. If -1, then bone has no parent.'''Note:''' {{Span|parent_idx}} must be less than {{Span|bone_idx}}.=== set_bone_pose ===*  void '''set_bone_pose''' '''(''' int bone_idx, [[Transform GD|Transform]] pose ''')'''Returns the pose transform for bone {{Span|bone_idx}}.=== set_bone_rest ===*  void '''set_bone_rest''' '''(''' int bone_idx, [[Transform GD|Transform]] rest ''')'''Sets the rest transform for bone {{Span|bone_idx}}.=== unbind_child_node_from_bone ===*  void '''unbind_child_node_from_bone''' '''(''' int bone_idx, [[Node GD|Node]] node ''')'''*Deprecated soon.*=== unparent_bone_and_rest ===*  void '''unparent_bone_and_rest''' '''(''' int bone_idx ''')'''