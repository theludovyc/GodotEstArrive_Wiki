__NOTOC__'''Inherits:''' [[Container GD|Container]] '''<''' [[Control GD|Control]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]A GraphNode is a container with potentially several input and output slots allowing connections between GraphNodes. Slots can have different, incompatible types.== Description ==A GraphNode is a container. Each GraphNode can have several input and output slots, sometimes referred to as ports, allowing connections between GraphNodes. To add a slot to GraphNode, add any [[Control GD|Control]]-derived child node to it.After adding at least one child to GraphNode new sections will be automatically created in the Inspector called 'Slot'. When 'Slot' is expanded you will see list with index number for each slot. You can click on each of them to expand further.In the Inspector you can enable (show) or disable (hide) slots. By default all slots are disabled so you may not see any slots on your GraphNode initially. You can assign a type to each slot. Only slots of the same type will be able to connect to each other. You can also assign colors to slots. A tuple of input and output slots is defined for each GUI element included in the GraphNode. Input connections are on the left and output connections are on the right side of GraphNode. Only enabled slots are counted as connections.== Properties =={| class="wikitable | bool|| [[#comment|comment]]|| {{Span|false}}           |-| [[#MouseFilter|MouseFilter]]|| mouse_filter|| {{Span|0}} (parent override)        |-| [[Vector2 GD|Vector2]]|| [[#offset|offset]]|| {{Span|Vector2( 0, 0 )}} |-| [[#Overlay|Overlay]]|| [[#overlay|overlay]]|| {{Span|0}}               |-| bool|| [[#resizable|resizable]]|| {{Span|false}}           |-| bool|| [[#selected|selected]]|| {{Span|false}}           |-| bool|| [[#show_close|show_close]]|| {{Span|false}}           |-| [[String GD|String]]|| [[#title|title]]|| {{Span|""}}              |}== Methods =={| class="wikitable | void|| [[#clear_all_slots|clear_all_slots]] '''(''' ''')'''                                                                                                                                                                                                                                                                                                                                                 |-| void|| [[#clear_slot|clear_slot]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                                                                 |-| [[Color GD|Color]]|| [[#get_connection_input_color|get_connection_input_color]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                                 |-| int|| [[#get_connection_input_count|get_connection_input_count]] '''(''' ''')'''                                                                                                                                                                                                                                                                                                                           |-| [[Vector2 GD|Vector2]]|| [[#get_connection_input_position|get_connection_input_position]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                           |-| int|| [[#get_connection_input_type|get_connection_input_type]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                                   |-| [[Color GD|Color]]|| [[#get_connection_output_color|get_connection_output_color]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                               |-| int|| [[#get_connection_output_count|get_connection_output_count]] '''(''' ''')'''                                                                                                                                                                                                                                                                                                                         |-| [[Vector2 GD|Vector2]]|| [[#get_connection_output_position|get_connection_output_position]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                         |-| int|| [[#get_connection_output_type|get_connection_output_type]] '''(''' int idx ''')'''                                                                                                                                                                                                                                                                                                 |-| [[Color GD|Color]]|| [[#get_slot_color_left|get_slot_color_left]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                         |-| [[Color GD|Color]]|| [[#get_slot_color_right|get_slot_color_right]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                       |-| int|| [[#get_slot_type_left|get_slot_type_left]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                           |-| int|| [[#get_slot_type_right|get_slot_type_right]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                         |-| bool|| [[#is_slot_enabled_left|is_slot_enabled_left]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                       |-| bool|| [[#is_slot_enabled_right|is_slot_enabled_right]] '''(''' int idx ''')''' const                                                                                                                                                                                                                                                                                                     |-| void|| [[#set_slot|set_slot]] '''(''' int idx, bool enable_left, int type_left, [[Color GD|Color]] color_left, bool enable_right, int type_right, [[Color GD|Color]] color_right, [[Texture2D GD|Texture2D]] custom_left=null, [[Texture2D GD|Texture2D]] custom_right=null ''')''' |}== Theme Properties =={| class="wikitable | [[StyleBox GD|StyleBox]]|| breakpoint||                     |-| [[Texture2D GD|Texture2D]]|| close||                     |-| [[Color GD|Color]]|| close_color|| Color( 0, 0, 0, 1 ) |-| int|| close_offset|| 18                  |-| [[StyleBox GD|StyleBox]]|| comment||                     |-| [[StyleBox GD|StyleBox]]|| commentfocus||                     |-| [[StyleBox GD|StyleBox]]|| defaultfocus||                     |-| [[StyleBox GD|StyleBox]]|| defaultframe||                     |-| [[StyleBox GD|StyleBox]]|| frame||                     |-| [[Texture2D GD|Texture2D]]|| port||                     |-| int|| port_offset|| 3                   |-| [[StyleBox GD|StyleBox]]|| position||                     |-| [[Texture2D GD|Texture2D]]|| resizer||                     |-| [[Color GD|Color]]|| resizer_color|| Color( 0, 0, 0, 1 ) |-| [[StyleBox GD|StyleBox]]|| selectedframe||                     |-| int|| separation|| 1                   |-| [[Color GD|Color]]|| title_color|| Color( 0, 0, 0, 1 ) |-| [[Font GD|Font]]|| title_font||                     |-| int|| title_offset|| 20                  |}== Signals ===== close_request ===*  '''close_request ( )'''Emitted when the GraphNode is requested to be closed. Happens on clicking the close button (see [[#show_close|show_close]]).=== dragged ===*  '''dragged''' '''(''' [[Vector2 GD|Vector2]] from, [[Vector2 GD|Vector2]] to ''')'''Emitted when the GraphNode is dragged.=== offset_changed ===*  '''offset_changed ( )'''Emitted when the GraphNode is moved.=== raise_request ===*  '''raise_request ( )'''Emitted when the GraphNode is requested to be displayed over other ones. Happens on focusing (clicking into) the GraphNode.=== resize_request ===*  '''resize_request''' '''(''' [[Vector2 GD|Vector2]] new_minsize ''')'''Emitted when the GraphNode is requested to be resized. Happens on dragging the resizer handle (see [[#resizable|resizable]]).== Enumerations ===== Overlay ====== OVERLAY_DISABLED ====== OVERLAY_BREAKPOINT ====== OVERLAY_POSITION ===enum '''Overlay''':*  '''OVERLAY_DISABLED''' = '''0'''  No overlay is shown.*  '''OVERLAY_BREAKPOINT''' = '''1'''  Show overlay set in the {{Span|breakpoint}} theme property.*  '''OVERLAY_POSITION''' = '''2'''  Show overlay set in the {{Span|position}} theme property.== Property Descriptions ===== comment ===*  bool '''comment'''{| class="wikitable | ''Default''|| {{Span|false}}          |-| ''Setter''|| set_comment(value) |-| ''Getter''|| is_comment()       |}If {{Span|true}}, the GraphNode is a comment node.=== offset ===*  [[Vector2 GD|Vector2]] '''offset'''{| class="wikitable | ''Default''|| {{Span|Vector2( 0, 0 )}} |-| ''Setter''|| set_offset(value)   |-| ''Getter''|| get_offset()        |}The offset of the GraphNode, relative to the scroll offset of the [[GraphEdit GD|GraphEdit]].'''Note:''' You cannot use position directly, as [[GraphEdit GD|GraphEdit]] is a [[Container GD|Container]].=== overlay ===*  [[#Overlay|Overlay]] '''overlay'''{| class="wikitable | ''Default''|| {{Span|0}}              |-| ''Setter''|| set_overlay(value) |-| ''Getter''|| get_overlay()      |}Sets the overlay shown above the GraphNode. See [[#Overlay|Overlay]].=== resizable ===*  bool '''resizable'''{| class="wikitable | ''Default''|| {{Span|false}}            |-| ''Setter''|| set_resizable(value) |-| ''Getter''|| is_resizable()       |}If {{Span|true}}, the user can resize the GraphNode.'''Note:''' Dragging the handle will only emit the [[#resize_request|resize_request]] signal, the GraphNode needs to be resized manually.=== selected ===*  bool '''selected'''{| class="wikitable | ''Default''|| {{Span|false}}           |-| ''Setter''|| set_selected(value) |-| ''Getter''|| is_selected()       |}If {{Span|true}}, the GraphNode is selected.=== show_close ===*  bool '''show_close'''{| class="wikitable | ''Default''|| {{Span|false}}                    |-| ''Setter''|| set_show_close_button(value) |-| ''Getter''|| is_close_button_visible()    |}If {{Span|true}}, the close button will be visible.'''Note:''' Pressing it will only emit the [[#close_request|close_request]] signal, the GraphNode needs to be removed manually.=== title ===*  [[String GD|String]] '''title'''{| class="wikitable | ''Default''|| {{Span|""}}           |-| ''Setter''|| set_title(value) |-| ''Getter''|| get_title()      |}The text displayed in the GraphNode's title bar.== Method Descriptions ===== clear_all_slots ===*  void '''clear_all_slots ( )'''Disables all input and output slots of the GraphNode.=== clear_slot ===*  void '''clear_slot''' '''(''' int idx ''')'''Disables input and output slot whose index is {{Span|idx}}.=== get_connection_input_color ===*  [[Color GD|Color]] '''get_connection_input_color''' '''(''' int idx ''')'''Returns the color of the input connection {{Span|idx}}.=== get_connection_input_count ===*  int '''get_connection_input_count ( )'''Returns the number of enabled input slots (connections) to the GraphNode.=== get_connection_input_position ===*  [[Vector2 GD|Vector2]] '''get_connection_input_position''' '''(''' int idx ''')'''Returns the position of the input connection {{Span|idx}}.=== get_connection_input_type ===*  int '''get_connection_input_type''' '''(''' int idx ''')'''Returns the type of the input connection {{Span|idx}}.=== get_connection_output_color ===*  [[Color GD|Color]] '''get_connection_output_color''' '''(''' int idx ''')'''Returns the color of the output connection {{Span|idx}}.=== get_connection_output_count ===*  int '''get_connection_output_count ( )'''Returns the number of enabled output slots (connections) of the GraphNode.=== get_connection_output_position ===*  [[Vector2 GD|Vector2]] '''get_connection_output_position''' '''(''' int idx ''')'''Returns the position of the output connection {{Span|idx}}.=== get_connection_output_type ===*  int '''get_connection_output_type''' '''(''' int idx ''')'''Returns the type of the output connection {{Span|idx}}.=== get_slot_color_left ===*  [[Color GD|Color]] '''get_slot_color_left''' '''(''' int idx ''')''' constReturns the color set to {{Span|idx}} left (input) slot.=== get_slot_color_right ===*  [[Color GD|Color]] '''get_slot_color_right''' '''(''' int idx ''')''' constReturns the color set to {{Span|idx}} right (output) slot.=== get_slot_type_left ===*  int '''get_slot_type_left''' '''(''' int idx ''')''' constReturns the (integer) type of left (input) {{Span|idx}} slot.=== get_slot_type_right ===*  int '''get_slot_type_right''' '''(''' int idx ''')''' constReturns the (integer) type of right (output) {{Span|idx}} slot.=== is_slot_enabled_left ===*  bool '''is_slot_enabled_left''' '''(''' int idx ''')''' constReturns {{Span|true}} if left (input) slot {{Span|idx}} is enabled, {{Span|false}} otherwise.=== is_slot_enabled_right ===*  bool '''is_slot_enabled_right''' '''(''' int idx ''')''' constReturns {{Span|true}} if right (output) slot {{Span|idx}} is enabled, {{Span|false}} otherwise.=== set_slot ===*  void '''set_slot''' '''(''' int idx, bool enable_left, int type_left, [[Color GD|Color]] color_left, bool enable_right, int type_right, [[Color GD|Color]] color_right, [[Texture2D GD|Texture2D]] custom_left=null, [[Texture2D GD|Texture2D]] custom_right=null ''')'''Sets properties of the slot with ID {{Span|idx}}.If {{Span|enable_left}}/{{Span|right}}, a port will appear and the slot will be able to be connected from this side.{{Span|type_left}}/{{Span|right}} is an arbitrary type of the port. Only ports with the same type values can be connected.{{Span|color_left}}/{{Span|right}} is the tint of the port's icon on this side.{{Span|custom_left}}/{{Span|right}} is a custom texture for this side's port.'''Note:''' This method only sets properties of the slot. To create the slot, add a [[Control GD|Control]]-derived child to the GraphNode.