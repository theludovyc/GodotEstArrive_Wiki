__NOTOC__'''Inherits:''' [[Font GD|Font]] '''<''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Renders text using fonts under the [https://www.angelcode.com/products/bmfont/ BMFont] format.Handles files with the {{Span|.fnt}} extension.== Description ==Renders text using {{Span|*.fnt}} fonts containing texture atlases. Supports distance fields. For using vector font files like TTF directly, see [[DynamicFont GD|DynamicFont]].== Properties =={| class="wikitable | float|| [[#ascent|ascent]]|| {{Span|0.0}}   |-| bool|| [[#distance_field|distance_field]]|| {{Span|false}} |-| [[BitmapFont GD|BitmapFont]]|| [[#fallback|fallback]]||           |-| float|| [[#height|height]]|| {{Span|1.0}}   |}== Methods =={| class="wikitable | void|| [[#add_char|add_char]] '''(''' int character, int texture, [[Rect2 GD|Rect2]] rect, [[Vector2 GD|Vector2]] align=Vector2( 0, 0 ), float advance=-1 ''')''' |-| void|| [[#add_kerning_pair|add_kerning_pair]] '''(''' int char_a, int char_b, int kerning ''')'''                                                                                 |-| void|| [[#add_texture|add_texture]] '''(''' [[Texture2D GD|Texture2D]] texture ''')'''                                                                                                                                           |-| void|| [[#clear|clear]] '''(''' ''')'''                                                                                                                                                                                                 |-| [[@GlobalScope GD#Error|Error]]|| [[#create_from_fnt|create_from_fnt]] '''(''' [[String GD|String]] path ''')'''                                                                                                                                            |-| [[Vector2 GD|Vector2]]|| [[#get_char_size|get_char_size]] '''(''' int char, int next=0 ''')''' const                                                                                                                  |-| int|| [[#get_kerning_pair|get_kerning_pair]] '''(''' int char_a, int char_b ''')''' const                                                                                                          |-| [[Texture2D GD|Texture2D]]|| [[#get_texture|get_texture]] '''(''' int idx ''')''' const                                                                                                                                                     |-| int|| [[#get_texture_count|get_texture_count]] '''(''' ''')''' const                                                                                                                                                                   |}== Property Descriptions ===== ascent ===*  float '''ascent'''{| class="wikitable | ''Default''|| {{Span|0.0}}           |-| ''Setter''|| set_ascent(value) |-| ''Getter''|| get_ascent()      |}Ascent (number of pixels above the baseline).=== distance_field ===*  bool '''distance_field'''{| class="wikitable | ''Default''|| {{Span|false}}                      |-| ''Setter''|| set_distance_field_hint(value) |-| ''Getter''|| is_distance_field_hint()       |}If {{Span|true}}, distance field hint is enabled.=== fallback ===*  [[BitmapFont GD|BitmapFont]] '''fallback'''{| class="wikitable | ''Setter''|| set_fallback(value) |-| ''Getter''|| get_fallback()      |}The fallback font.=== height ===*  float '''height'''{| class="wikitable | ''Default''|| {{Span|1.0}}           |-| ''Setter''|| set_height(value) |-| ''Getter''|| get_height()      |}Total font height (ascent plus descent) in pixels.== Method Descriptions ===== add_char ===*  void '''add_char''' '''(''' int character, int texture, [[Rect2 GD|Rect2]] rect, [[Vector2 GD|Vector2]] align=Vector2( 0, 0 ), float advance=-1 ''')'''Adds a character to the font, where {{Span|character}} is the Unicode value, {{Span|texture}} is the texture index, {{Span|rect}} is the region in the texture (in pixels!), {{Span|align}} is the (optional) alignment for the character and {{Span|advance}} is the (optional) advance.=== add_kerning_pair ===*  void '''add_kerning_pair''' '''(''' int char_a, int char_b, int kerning ''')'''Adds a kerning pair to the {{Span|BitmapFont}} as a difference. Kerning pairs are special cases where a typeface advance is determined by the next character.=== add_texture ===*  void '''add_texture''' '''(''' [[Texture2D GD|Texture2D]] texture ''')'''Adds a texture to the {{Span|BitmapFont}}.=== clear ===*  void '''clear ( )'''Clears all the font data and settings.=== create_from_fnt ===*  [[@GlobalScope GD#Error|Error]] '''create_from_fnt''' '''(''' [[String GD|String]] path ''')'''Creates a BitmapFont from the {{Span|*.fnt}} file at {{Span|path}}.=== get_char_size ===*  [[Vector2 GD|Vector2]] '''get_char_size''' '''(''' int char, int next=0 ''')''' constReturns the size of a character, optionally taking kerning into account if the next character is provided.=== get_kerning_pair ===*  int '''get_kerning_pair''' '''(''' int char_a, int char_b ''')''' constReturns a kerning pair as a difference.=== get_texture ===*  [[Texture2D GD|Texture2D]] '''get_texture''' '''(''' int idx ''')''' constReturns the font atlas texture at index {{Span|idx}}.=== get_texture_count ===*  int '''get_texture_count ( )''' constReturns the number of textures in the BitmapFont atlas.