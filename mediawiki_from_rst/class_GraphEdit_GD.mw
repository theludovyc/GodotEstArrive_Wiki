__NOTOC__'''Inherits:''' [[Control GD|Control]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]GraphEdit is an area capable of showing various GraphNodes. It manages connection events between them.== Description ==GraphEdit manages the showing of GraphNodes it contains, as well as connections and disconnections between them. Signals are sent for each of these two events. Disconnection between GraphNode slots is disabled by default.It is greatly advised to enable low-processor usage mode (see [[OS GD#low_processor_usage_mode|OS.low_processor_usage_mode()]]) when using GraphEdits.== Properties =={| class="wikitable | [[#FocusMode|FocusMode]]|| focus_mode|| {{Span|2}} (parent override)        |-| bool|| rect_clip_content|| {{Span|true}} (parent override)     |-| bool|| [[#right_disconnects|right_disconnects]]|| {{Span|false}}           |-| [[Vector2 GD|Vector2]]|| [[#scroll_offset|scroll_offset]]|| {{Span|Vector2( 0, 0 )}} |-| int|| [[#snap_distance|snap_distance]]|| {{Span|20}}              |-| bool|| [[#use_snap|use_snap]]|| {{Span|true}}            |-| float|| [[#zoom|zoom]]|| {{Span|1.0}}             |}== Methods =={| class="wikitable | void|| [[#add_valid_connection_type|add_valid_connection_type]] '''(''' int from_type, int to_type ''')'''                                                                                                                 |-| void|| [[#add_valid_left_disconnect_type|add_valid_left_disconnect_type]] '''(''' int type ''')'''                                                                                                                                           |-| void|| [[#add_valid_right_disconnect_type|add_valid_right_disconnect_type]] '''(''' int type ''')'''                                                                                                                                         |-| void|| [[#clear_connections|clear_connections]] '''(''' ''')'''                                                                                                                                                                                                |-| [[@GlobalScope GD#Error|Error]]|| [[#connect_node|connect_node]] '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''                                                         |-| void|| [[#disconnect_node|disconnect_node]] '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''                                                   |-| [[Array GD|Array]]|| [[#get_connection_list|get_connection_list]] '''(''' ''')''' const                                                                                                                                                                                      |-| [[HBoxContainer GD|HBoxContainer]]|| [[#get_zoom_hbox|get_zoom_hbox]] '''(''' ''')'''                                                                                                                                                                                                        |-| bool|| [[#is_node_connected|is_node_connected]] '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''                                               |-| bool|| [[#is_valid_connection_type|is_valid_connection_type]] '''(''' int from_type, int to_type ''')''' const                                                                                                             |-| void|| [[#remove_valid_connection_type|remove_valid_connection_type]] '''(''' int from_type, int to_type ''')'''                                                                                                           |-| void|| [[#remove_valid_left_disconnect_type|remove_valid_left_disconnect_type]] '''(''' int type ''')'''                                                                                                                                     |-| void|| [[#remove_valid_right_disconnect_type|remove_valid_right_disconnect_type]] '''(''' int type ''')'''                                                                                                                                   |-| void|| [[#set_connection_activity|set_connection_activity]] '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port, float amount ''')''' |-| void|| [[#set_selected|set_selected]] '''(''' [[Node GD|Node]] node ''')'''                                                                                                                                                                             |}== Theme Properties =={| class="wikitable | [[Color GD|Color]]|| activity|| Color( 1, 1, 1, 1 )    |-| int|| bezier_len_neg|| 160                    |-| int|| bezier_len_pos|| 80                     |-| [[StyleBox GD|StyleBox]]|| bg||                        |-| [[Color GD|Color]]|| grid_major|| Color( 1, 1, 1, 0.2 )  |-| [[Color GD|Color]]|| grid_minor|| Color( 1, 1, 1, 0.05 ) |-| [[Texture2D GD|Texture2D]]|| minus||                        |-| [[Texture2D GD|Texture2D]]|| more||                        |-| int|| port_grab_distance_horizontal|| 48                     |-| int|| port_grab_distance_vertical|| 6                      |-| [[Texture2D GD|Texture2D]]|| reset||                        |-| [[Color GD|Color]]|| selection_fill|| Color( 1, 1, 1, 0.3 )  |-| [[Color GD|Color]]|| selection_stroke|| Color( 1, 1, 1, 0.8 )  |-| [[Texture2D GD|Texture2D]]|| snap||                        |}== Signals ===== _begin_node_move ===*  '''_begin_node_move ( )'''Emitted at the beginning of a GraphNode movement.=== _end_node_move ===*  '''_end_node_move ( )'''Emitted at the end of a GraphNode movement.=== connection_from_empty ===*  '''connection_from_empty''' '''(''' [[StringName GD|StringName]] to, int to_slot, [[Vector2 GD|Vector2]] release_position ''')'''Emitted when user dragging connection from input port into empty space of the graph.=== connection_request ===*  '''connection_request''' '''(''' [[StringName GD|StringName]] from, int from_slot, [[StringName GD|StringName]] to, int to_slot ''')'''Emitted to the GraphEdit when the connection between the {{Span|from_slot}} slot of the {{Span|from}} GraphNode and the {{Span|to_slot}} slot of the {{Span|to}} GraphNode is attempted to be created.=== connection_to_empty ===*  '''connection_to_empty''' '''(''' [[StringName GD|StringName]] from, int from_slot, [[Vector2 GD|Vector2]] release_position ''')'''Emitted when user dragging connection from output port into empty space of the graph.=== copy_nodes_request ===*  '''copy_nodes_request ( )'''Emitted when the user presses {{Span|Ctrl + C}}.=== delete_nodes_request ===*  '''delete_nodes_request ( )'''Emitted when a GraphNode is attempted to be removed from the GraphEdit.=== disconnection_request ===*  '''disconnection_request''' '''(''' [[StringName GD|StringName]] from, int from_slot, [[StringName GD|StringName]] to, int to_slot ''')'''Emitted to the GraphEdit when the connection between {{Span|from_slot}} slot of {{Span|from}} GraphNode and {{Span|to_slot}} slot of {{Span|to}} GraphNode is attempted to be removed.=== duplicate_nodes_request ===*  '''duplicate_nodes_request ( )'''Emitted when a GraphNode is attempted to be duplicated in the GraphEdit.=== node_selected ===*  '''node_selected''' '''(''' [[Node GD|Node]] node ''')'''Emitted when a GraphNode is selected.=== paste_nodes_request ===*  '''paste_nodes_request ( )'''Emitted when the user presses {{Span|Ctrl + V}}.=== popup_request ===*  '''popup_request''' '''(''' [[Vector2 GD|Vector2]] position ''')'''Emitted when a popup is requested. Happens on right-clicking in the GraphEdit. {{Span|position}} is the position of the mouse pointer when the signal is sent.=== scroll_offset_changed ===*  '''scroll_offset_changed''' '''(''' [[Vector2 GD|Vector2]] ofs ''')'''Emitted when the scroll offset is changed by the user. It will not be emitted when changed in code.== Property Descriptions ===== right_disconnects ===*  bool '''right_disconnects'''{| class="wikitable | ''Default''|| {{Span|false}}                      |-| ''Setter''|| set_right_disconnects(value)   |-| ''Getter''|| is_right_disconnects_enabled() |}If {{Span|true}}, enables disconnection of existing connections in the GraphEdit by dragging the right end.=== scroll_offset ===*  [[Vector2 GD|Vector2]] '''scroll_offset'''{| class="wikitable | ''Default''|| {{Span|Vector2( 0, 0 )}}   |-| ''Setter''|| set_scroll_ofs(value) |-| ''Getter''|| get_scroll_ofs()      |}The scroll offset.=== snap_distance ===*  int '''snap_distance'''{| class="wikitable | ''Default''|| {{Span|20}}          |-| ''Setter''|| set_snap(value) |-| ''Getter''|| get_snap()      |}The snapping distance in pixels.=== use_snap ===*  bool '''use_snap'''{| class="wikitable | ''Default''|| {{Span|true}}            |-| ''Setter''|| set_use_snap(value) |-| ''Getter''|| is_using_snap()     |}If {{Span|true}}, enables snapping.=== zoom ===*  float '''zoom'''{| class="wikitable | ''Default''|| {{Span|1.0}}         |-| ''Setter''|| set_zoom(value) |-| ''Getter''|| get_zoom()      |}The current zoom value.== Method Descriptions ===== add_valid_connection_type ===*  void '''add_valid_connection_type''' '''(''' int from_type, int to_type ''')'''Makes possible the connection between two different slot types. The type is defined with the [[GraphNode GD#set_slot|GraphNode.set_slot()]] method.=== add_valid_left_disconnect_type ===*  void '''add_valid_left_disconnect_type''' '''(''' int type ''')'''Makes possible to disconnect nodes when dragging from the slot at the left if it has the specified type.=== add_valid_right_disconnect_type ===*  void '''add_valid_right_disconnect_type''' '''(''' int type ''')'''Makes possible to disconnect nodes when dragging from the slot at the right if it has the specified type.=== clear_connections ===*  void '''clear_connections ( )'''Removes all connections between nodes.=== connect_node ===*  [[@GlobalScope GD#Error|Error]] '''connect_node''' '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''Create a connection between the {{Span|from_port}} slot of the {{Span|from}} GraphNode and the {{Span|to_port}} slot of the {{Span|to}} GraphNode. If the connection already exists, no connection is created.=== disconnect_node ===*  void '''disconnect_node''' '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''Removes the connection between the {{Span|from_port}} slot of the {{Span|from}} GraphNode and the {{Span|to_port}} slot of the {{Span|to}} GraphNode. If the connection does not exist, no connection is removed.=== get_connection_list ===*  [[Array GD|Array]] '''get_connection_list ( )''' constReturns an Array containing the list of connections. A connection consists in a structure of the form {{Span|{ from_port: 0, from: "GraphNode name 0", to_port: 1, to: "GraphNode name 1" }}}.=== get_zoom_hbox ===*  [[HBoxContainer GD|HBoxContainer]] '''get_zoom_hbox ( )'''Gets the [[HBoxContainer GD|HBoxContainer]] that contains the zooming and grid snap controls in the top left of the graph.Warning: The intended usage of this function is to allow you to reposition or add your own custom controls to the container. This is an internal control and as such should not be freed. If you wish to hide this or any of it's children use their [[CanvasItem GD#visible|CanvasItem.visible()]] property instead.=== is_node_connected ===*  bool '''is_node_connected''' '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port ''')'''Returns {{Span|true}} if the {{Span|from_port}} slot of the {{Span|from}} GraphNode is connected to the {{Span|to_port}} slot of the {{Span|to}} GraphNode.=== is_valid_connection_type ===*  bool '''is_valid_connection_type''' '''(''' int from_type, int to_type ''')''' constReturns whether it's possible to connect slots of the specified types.=== remove_valid_connection_type ===*  void '''remove_valid_connection_type''' '''(''' int from_type, int to_type ''')'''Makes it not possible to connect between two different slot types. The type is defined with the [[GraphNode GD#set_slot|GraphNode.set_slot()]] method.=== remove_valid_left_disconnect_type ===*  void '''remove_valid_left_disconnect_type''' '''(''' int type ''')'''Removes the possibility to disconnect nodes when dragging from the slot at the left if it has the specified type.=== remove_valid_right_disconnect_type ===*  void '''remove_valid_right_disconnect_type''' '''(''' int type ''')'''Removes the possibility to disconnect nodes when dragging from the slot at the right if it has the specified type.=== set_connection_activity ===*  void '''set_connection_activity''' '''(''' [[StringName GD|StringName]] from, int from_port, [[StringName GD|StringName]] to, int to_port, float amount ''')'''Sets the coloration of the connection between {{Span|from}}'s {{Span|from_port}} and {{Span|to}}'s {{Span|to_port}} with the color provided in the {{Span|activity}} theme property.=== set_selected ===*  void '''set_selected''' '''(''' [[Node GD|Node]] node ''')'''Sets the specified {{Span|node}} as the one selected.