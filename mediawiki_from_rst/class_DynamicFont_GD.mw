__NOTOC__'''Inherits:''' [[Font GD|Font]] '''<''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]DynamicFont renders vector font files at runtime.== Description ==DynamicFont renders vector font files (such as TTF or OTF) dynamically at runtime instead of using a prerendered texture atlas like [[BitmapFont GD|BitmapFont]]. This trades the faster loading time of [[BitmapFont GD|BitmapFont]]\ s for the ability to change font parameters like size and spacing during runtime. [[DynamicFontData GD|DynamicFontData]] is used for referencing the font file paths. DynamicFont also supports defining one or more fallbacks fonts, which will be used when displaying a character not supported by the main font.DynamicFont uses the [https://www.freetype.org/ FreeType] library for rasterization.::    var dynamic_font = DynamicFont.new()    dynamic_font.font_data = load("res://BarlowCondensed-Bold.ttf")    dynamic_font.size = 64    $"Label".set("custom_fonts/font", dynamic_font)== Properties =={| class="wikitable | int|| [[#extra_spacing_bottom|extra_spacing_bottom]]|| {{Span|0}}                   |-| int|| [[#extra_spacing_char|extra_spacing_char]]|| {{Span|0}}                   |-| int|| [[#extra_spacing_space|extra_spacing_space]]|| {{Span|0}}                   |-| int|| [[#extra_spacing_top|extra_spacing_top]]|| {{Span|0}}                   |-| [[DynamicFontData GD|DynamicFontData]]|| [[#font_data|font_data]]||                         |-| [[Color GD|Color]]|| [[#outline_color|outline_color]]|| {{Span|Color( 1, 1, 1, 1 )}} |-| int|| [[#outline_size|outline_size]]|| {{Span|0}}                   |-| int|| [[#size|size]]|| {{Span|16}}                  |}== Methods =={| class="wikitable | void|| [[#add_fallback|add_fallback]] '''(''' [[DynamicFontData GD|DynamicFontData]] data ''')'''                            |-| [[DynamicFontData GD|DynamicFontData]]|| [[#get_fallback|get_fallback]] '''(''' int idx ''')''' const                                               |-| int|| [[#get_fallback_count|get_fallback_count]] '''(''' ''')''' const                                                             |-| int|| [[#get_spacing|get_spacing]] '''(''' int type ''')''' const                                                |-| void|| [[#remove_fallback|remove_fallback]] '''(''' int idx ''')'''                                               |-| void|| [[#set_fallback|set_fallback]] '''(''' int idx, [[DynamicFontData GD|DynamicFontData]] data ''')''' |-| void|| [[#set_spacing|set_spacing]] '''(''' int type, int value ''')'''                         |}== Enumerations ===== SpacingType ====== SPACING_TOP ====== SPACING_BOTTOM ====== SPACING_CHAR ====== SPACING_SPACE ===enum '''SpacingType''':*  '''SPACING_TOP''' = '''0'''  Spacing at the top.*  '''SPACING_BOTTOM''' = '''1'''  Spacing at the bottom.*  '''SPACING_CHAR''' = '''2'''  Character spacing.*  '''SPACING_SPACE''' = '''3'''  Space spacing.== Property Descriptions ===== extra_spacing_bottom ===*  int '''extra_spacing_bottom'''{| class="wikitable | ''Default''|| {{Span|0}}              |-| ''Setter''|| set_spacing(value) |-| ''Getter''|| get_spacing()      |}Extra spacing at the bottom in pixels.=== extra_spacing_char ===*  int '''extra_spacing_char'''{| class="wikitable | ''Default''|| {{Span|0}}              |-| ''Setter''|| set_spacing(value) |-| ''Getter''|| get_spacing()      |}Extra character spacing in pixels.=== extra_spacing_space ===*  int '''extra_spacing_space'''{| class="wikitable | ''Default''|| {{Span|0}}              |-| ''Setter''|| set_spacing(value) |-| ''Getter''|| get_spacing()      |}Extra space spacing in pixels.=== extra_spacing_top ===*  int '''extra_spacing_top'''{| class="wikitable | ''Default''|| {{Span|0}}              |-| ''Setter''|| set_spacing(value) |-| ''Getter''|| get_spacing()      |}Extra spacing at the top in pixels.=== font_data ===*  [[DynamicFontData GD|DynamicFontData]] '''font_data'''{| class="wikitable | ''Setter''|| set_font_data(value) |-| ''Getter''|| get_font_data()      |}The font data.=== outline_color ===*  [[Color GD|Color]] '''outline_color'''{| class="wikitable | ''Default''|| {{Span|Color( 1, 1, 1, 1 )}}  |-| ''Setter''|| set_outline_color(value) |-| ''Getter''|| get_outline_color()      |}The font outline's color.'''Note:''' It's recommended to leave this at the default value so that you can adjust it in individual controls. For example, if the outline is made black here, it won't be possible to change its color using a Label's font outline modulate theme item.=== outline_size ===*  int '''outline_size'''{| class="wikitable | ''Default''|| {{Span|0}}                   |-| ''Setter''|| set_outline_size(value) |-| ''Getter''|| get_outline_size()      |}The font outline's thickness in pixels (not relative to the font size).=== size ===*  int '''size'''{| class="wikitable | ''Default''|| {{Span|16}}          |-| ''Setter''|| set_size(value) |-| ''Getter''|| get_size()      |}The font size in pixels.== Method Descriptions ===== add_fallback ===*  void '''add_fallback''' '''(''' [[DynamicFontData GD|DynamicFontData]] data ''')'''Adds a fallback font.=== get_fallback ===*  [[DynamicFontData GD|DynamicFontData]] '''get_fallback''' '''(''' int idx ''')''' constReturns the fallback font at index {{Span|idx}}.=== get_fallback_count ===*  int '''get_fallback_count ( )''' constReturns the number of fallback fonts.=== get_spacing ===*  int '''get_spacing''' '''(''' int type ''')''' constReturns the spacing for the given {{Span|type}} (see [[#SpacingType|SpacingType]]).=== remove_fallback ===*  void '''remove_fallback''' '''(''' int idx ''')'''Removes the fallback font at index {{Span|idx}}.=== set_fallback ===*  void '''set_fallback''' '''(''' int idx, [[DynamicFontData GD|DynamicFontData]] data ''')'''Sets the fallback font at index {{Span|idx}}.=== set_spacing ===*  void '''set_spacing''' '''(''' int type, int value ''')'''Sets the spacing for {{Span|type}} (see [[#SpacingType|SpacingType]]) to {{Span|value}} in pixels (not relative to the font size).