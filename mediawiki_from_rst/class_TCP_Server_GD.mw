__NOTOC__'''Inherits:''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]A TCP server.== Description ==A TCP server. Listens to connections on a port and returns a [[StreamPeerTCP GD|StreamPeerTCP]] when it gets an incoming connection.== Methods =={| class="wikitable | bool|| [[#is_connection_available|is_connection_available]] '''(''' ''')''' const                                  |-| bool|| [[#is_listening|is_listening]] '''(''' ''')''' const                                                        |-| [[@GlobalScope GD#Error|Error]]|| [[#listen|listen]] '''(''' int port, [[String GD|String]] bind_address="*" ''')''' |-| void|| [[#stop|stop]] '''(''' ''')'''                                                                              |-| [[StreamPeerTCP GD|StreamPeerTCP]]|| [[#take_connection|take_connection]] '''(''' ''')'''                                                        |}== Method Descriptions ===== is_connection_available ===*  bool '''is_connection_available ( )''' constReturns {{Span|true}} if a connection is available for taking.=== is_listening ===*  bool '''is_listening ( )''' constReturns {{Span|true}} if the server is currently listening for connections.=== listen ===*  [[@GlobalScope GD#Error|Error]] '''listen''' '''(''' int port, [[String GD|String]] bind_address="*" ''')'''Listen on the {{Span|port}} binding to {{Span|bind_address}}.If {{Span|bind_address}} is set as {{Span|"*"}} (default), the server will listen on all available addresses (both IPv4 and IPv6).If {{Span|bind_address}} is set as {{Span|"0.0.0.0"}} (for IPv4) or {{Span|"::"}} (for IPv6), the server will listen on all available addresses matching that IP type.If {{Span|bind_address}} is set to any valid address (e.g. {{Span|"192.168.1.101"}}, {{Span|"::1"}}, etc), the server will only listen on the interface with that addresses (or fail if no interface with the given address exists).=== stop ===*  void '''stop ( )'''Stops listening.=== take_connection ===*  [[StreamPeerTCP GD|StreamPeerTCP]] '''take_connection ( )'''If a connection is available, returns a StreamPeerTCP with the connection.