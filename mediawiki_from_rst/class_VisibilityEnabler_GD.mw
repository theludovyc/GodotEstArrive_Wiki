__NOTOC__'''Inherits:''' [[VisibilityNotifier GD|VisibilityNotifier]] '''<''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Enables certain nodes only when visible.== Description ==The VisibilityEnabler will disable [[RigidBody GD|RigidBody]] and [[AnimationPlayer GD|AnimationPlayer]] nodes when they are not visible. It will only affect other nodes within the same scene as the VisibilityEnabler itself.Note that VisibilityEnabler will not affect nodes added after scene initialization.== Properties =={| class="wikitable | bool|| [[#freeze_bodies|freeze_bodies]]|| {{Span|true}} |-| bool|| [[#pause_animations|pause_animations]]|| {{Span|true}} |}== Methods =={| class="wikitable | bool|| [[#is_enabler_enabled|is_enabler_enabled]] '''(''' [[#Enabler|Enabler]] enabler ''')''' const              |-| void|| [[#set_enabler|set_enabler]] '''(''' [[#Enabler|Enabler]] enabler, bool enabled ''')''' |}== Enumerations ===== Enabler ====== ENABLER_PAUSE_ANIMATIONS ====== ENABLER_FREEZE_BODIES ====== ENABLER_MAX ===enum '''Enabler''':*  '''ENABLER_PAUSE_ANIMATIONS''' = '''0'''  This enabler will pause [[AnimationPlayer GD|AnimationPlayer]] nodes.*  '''ENABLER_FREEZE_BODIES''' = '''1'''  This enabler will freeze [[RigidBody GD|RigidBody]] nodes.*  '''ENABLER_MAX''' = '''2'''  Represents the size of the [[#Enabler|Enabler]] enum.== Property Descriptions ===== freeze_bodies ===*  bool '''freeze_bodies'''{| class="wikitable | ''Default''|| {{Span|true}}             |-| ''Setter''|| set_enabler(value)   |-| ''Getter''|| is_enabler_enabled() |}If {{Span|true}}, [[RigidBody GD|RigidBody]] nodes will be paused.=== pause_animations ===*  bool '''pause_animations'''{| class="wikitable | ''Default''|| {{Span|true}}             |-| ''Setter''|| set_enabler(value)   |-| ''Getter''|| is_enabler_enabled() |}If {{Span|true}}, [[AnimationPlayer GD|AnimationPlayer]] nodes will be paused.== Method Descriptions ===== is_enabler_enabled ===*  bool '''is_enabler_enabled''' '''(''' [[#Enabler|Enabler]] enabler ''')''' constReturns whether the enabler identified by given [[#Enabler|Enabler]] constant is active.=== set_enabler ===*  void '''set_enabler''' '''(''' [[#Enabler|Enabler]] enabler, bool enabled ''')'''Sets active state of the enabler identified by given [[#Enabler|Enabler]] constant.