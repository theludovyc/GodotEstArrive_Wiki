__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Noise generator based on Open Simplex.== Description ==This resource allows you to configure and sample a fractal noise space. Here is a brief usage example that configures an OpenSimplexNoise and gets samples at various positions and dimensions:::    var noise = OpenSimplexNoise.new()        # Configure    noise.seed = randi()    noise.octaves = 4    noise.period = 20.0    noise.persistence = 0.8        # Sample    print("Values:")    print(noise.get_noise_2d(1.0, 1.0))    print(noise.get_noise_3d(0.5, 3.0, 15.0))    print(noise.get_noise_4d(0.5, 1.9, 4.7, 0.0))== Properties =={| class="wikitable | float|| [[#lacunarity|lacunarity]]|| {{Span|2.0}}  |-| int|| [[#octaves|octaves]]|| {{Span|3}}    |-| float|| [[#period|period]]|| {{Span|64.0}} |-| float|| [[#persistence|persistence]]|| {{Span|0.5}}  |-| int|| [[#seed|seed]]|| {{Span|0}}    |}== Methods =={| class="wikitable | [[Image GD|Image]]|| [[#get_image|get_image]] '''(''' int width, int height ''')'''                                                                |-| float|| [[#get_noise_1d|get_noise_1d]] '''(''' float x ''')'''                                                                                        |-| float|| [[#get_noise_2d|get_noise_2d]] '''(''' float x, float y ''')'''                                                           |-| float|| [[#get_noise_2dv|get_noise_2dv]] '''(''' [[Vector2 GD|Vector2]] pos ''')'''                                                                                |-| float|| [[#get_noise_3d|get_noise_3d]] '''(''' float x, float y, float z ''')'''                              |-| float|| [[#get_noise_3dv|get_noise_3dv]] '''(''' [[Vector3 GD|Vector3]] pos ''')'''                                                                                |-| float|| [[#get_noise_4d|get_noise_4d]] '''(''' float x, float y, float z, float w ''')''' |-| [[Image GD|Image]]|| [[#get_seamless_image|get_seamless_image]] '''(''' int size ''')'''                                                                             |}== Property Descriptions ===== lacunarity ===*  float '''lacunarity'''{| class="wikitable | ''Default''|| {{Span|2.0}}               |-| ''Setter''|| set_lacunarity(value) |-| ''Getter''|| get_lacunarity()      |}Difference in period between [[#octaves|octaves]].=== octaves ===*  int '''octaves'''{| class="wikitable | ''Default''|| {{Span|3}}              |-| ''Setter''|| set_octaves(value) |-| ''Getter''|| get_octaves()      |}Number of OpenSimplex noise layers that are sampled to get the fractal noise. Higher values result in more detailed noise but take more time to generate.'''Note:''' The maximum allowed value is 9.=== period ===*  float '''period'''{| class="wikitable | ''Default''|| {{Span|64.0}}          |-| ''Setter''|| set_period(value) |-| ''Getter''|| get_period()      |}Period of the base octave. A lower period results in a higher-frequency noise (more value changes across the same distance).=== persistence ===*  float '''persistence'''{| class="wikitable | ''Default''|| {{Span|0.5}}                |-| ''Setter''|| set_persistence(value) |-| ''Getter''|| get_persistence()      |}Contribution factor of the different octaves. A {{Span|persistence}} value of 1 means all the octaves have the same contribution, a value of 0.5 means each octave contributes half as much as the previous one.=== seed ===*  int '''seed'''{| class="wikitable | ''Default''|| {{Span|0}}           |-| ''Setter''|| set_seed(value) |-| ''Getter''|| get_seed()      |}Seed used to generate random values, different seeds will generate different noise maps.== Method Descriptions ===== get_image ===*  [[Image GD|Image]] '''get_image''' '''(''' int width, int height ''')'''Generate a noise image with the requested {{Span|width}} and {{Span|height}}, based on the current noise parameters.=== get_noise_1d ===*  float '''get_noise_1d''' '''(''' float x ''')'''Returns the 1D noise value {{Span|[-1,1]}} at the given x-coordinate.'''Note:''' This method actually returns the 2D noise value {{Span|[-1,1]}} with fixed y-coordinate value 0.0.=== get_noise_2d ===*  float '''get_noise_2d''' '''(''' float x, float y ''')'''Returns the 2D noise value {{Span|[-1,1]}} at the given position.=== get_noise_2dv ===*  float '''get_noise_2dv''' '''(''' [[Vector2 GD|Vector2]] pos ''')'''Returns the 2D noise value {{Span|[-1,1]}} at the given position.=== get_noise_3d ===*  float '''get_noise_3d''' '''(''' float x, float y, float z ''')'''Returns the 3D noise value {{Span|[-1,1]}} at the given position.=== get_noise_3dv ===*  float '''get_noise_3dv''' '''(''' [[Vector3 GD|Vector3]] pos ''')'''Returns the 3D noise value {{Span|[-1,1]}} at the given position.=== get_noise_4d ===*  float '''get_noise_4d''' '''(''' float x, float y, float z, float w ''')'''Returns the 4D noise value {{Span|[-1,1]}} at the given position.=== get_seamless_image ===*  [[Image GD|Image]] '''get_seamless_image''' '''(''' int size ''')'''Generate a tileable noise image, based on the current noise parameters. Generated seamless images are always square ({{Span|size}} Ã— {{Span|size}}).