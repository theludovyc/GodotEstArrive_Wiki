__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Contains data used to animate everything in the engine.== Description ==An Animation resource contains data used to animate everything in the engine. Animations are divided into tracks, and each track must be linked to a node. The state of that node can be changed through time, by adding timed keys (events) to the track.::    # This creates an animation that makes the node "Enemy" move to the right by    # 100 pixels in 1 second.    var animation = Animation.new()    var track_index = animation.add_track(Animation.TYPE_VALUE)    animation.track_set_path(track_index, "Enemy:position:x")    animation.track_insert_key(track_index, 0.0, 0)    animation.track_insert_key(track_index, 0.5, 100)Animations are just data containers, and must be added to nodes such as an [[AnimationPlayer GD|AnimationPlayer]] to be played back. Animation tracks have different types, each with its own set of dedicated methods. Check [[#TrackType|TrackType]] to see available types.== Tutorials ==*  :doc:`../tutorials/animation/index`== Properties =={| class="wikitable | float|| [[#length|length]]|| {{Span|1.0}}   |-| bool|| [[#loop|loop]]|| {{Span|false}} |-| float|| [[#step|step]]|| {{Span|0.1}}   |}== Methods =={| class="wikitable | int|| [[#add_track|add_track]] '''(''' [[#TrackType|TrackType]] type, int at_position=-1 ''')'''                                                                                                                                                           |-| [[StringName GD|StringName]]|| [[#animation_track_get_key_animation|animation_track_get_key_animation]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                            |-| int|| [[#animation_track_insert_key|animation_track_insert_key]] '''(''' int track_idx, float time, [[StringName GD|StringName]] animation ''')'''                                                                                                |-| void|| [[#animation_track_set_key_animation|animation_track_set_key_animation]] '''(''' int track_idx, int key_idx, [[StringName GD|StringName]] animation ''')'''                                                                                   |-| float|| [[#audio_track_get_key_end_offset|audio_track_get_key_end_offset]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                  |-| float|| [[#audio_track_get_key_start_offset|audio_track_get_key_start_offset]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                              |-| [[Resource GD|Resource]]|| [[#audio_track_get_key_stream|audio_track_get_key_stream]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                          |-| int|| [[#audio_track_insert_key|audio_track_insert_key]] '''(''' int track_idx, float time, [[Resource GD|Resource]] stream, float start_offset=0, float end_offset=0 ''')'''                             |-| void|| [[#audio_track_set_key_end_offset|audio_track_set_key_end_offset]] '''(''' int track_idx, int key_idx, float offset ''')'''                                                                                                      |-| void|| [[#audio_track_set_key_start_offset|audio_track_set_key_start_offset]] '''(''' int track_idx, int key_idx, float offset ''')'''                                                                                                  |-| void|| [[#audio_track_set_key_stream|audio_track_set_key_stream]] '''(''' int track_idx, int key_idx, [[Resource GD|Resource]] stream ''')'''                                                                                                        |-| [[Vector2 GD|Vector2]]|| [[#bezier_track_get_key_in_handle|bezier_track_get_key_in_handle]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                  |-| [[Vector2 GD|Vector2]]|| [[#bezier_track_get_key_out_handle|bezier_track_get_key_out_handle]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                |-| float|| [[#bezier_track_get_key_value|bezier_track_get_key_value]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                          |-| int|| [[#bezier_track_insert_key|bezier_track_insert_key]] '''(''' int track_idx, float time, float value, [[Vector2 GD|Vector2]] in_handle=Vector2( 0, 0 ), [[Vector2 GD|Vector2]] out_handle=Vector2( 0, 0 ) ''')''' |-| float|| [[#bezier_track_interpolate|bezier_track_interpolate]] '''(''' int track_idx, float time ''')''' const                                                                                                                                             |-| void|| [[#bezier_track_set_key_in_handle|bezier_track_set_key_in_handle]] '''(''' int track_idx, int key_idx, [[Vector2 GD|Vector2]] in_handle ''')'''                                                                                               |-| void|| [[#bezier_track_set_key_out_handle|bezier_track_set_key_out_handle]] '''(''' int track_idx, int key_idx, [[Vector2 GD|Vector2]] out_handle ''')'''                                                                                            |-| void|| [[#bezier_track_set_key_value|bezier_track_set_key_value]] '''(''' int track_idx, int key_idx, float value ''')'''                                                                                                               |-| void|| [[#clear|clear]] '''(''' ''')'''                                                                                                                                                                                                                                                         |-| void|| [[#copy_track|copy_track]] '''(''' int track_idx, [[Animation GD|Animation]] to_animation ''')'''                                                                                                                                                               |-| int|| [[#find_track|find_track]] '''(''' [[NodePath GD|NodePath]] path ''')''' const                                                                                                                                                                                                    |-| int|| [[#get_track_count|get_track_count]] '''(''' ''')''' const                                                                                                                                                                                                                               |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#method_track_get_key_indices|method_track_get_key_indices]] '''(''' int track_idx, float time_sec, float delta ''')''' const                                                                                                |-| [[StringName GD|StringName]]|| [[#method_track_get_name|method_track_get_name]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                                    |-| [[Array GD|Array]]|| [[#method_track_get_params|method_track_get_params]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                                |-| void|| [[#remove_track|remove_track]] '''(''' int track_idx ''')'''                                                                                                                                                                                                           |-| int|| [[#track_find_key|track_find_key]] '''(''' int track_idx, float time, bool exact=false ''')''' const                                                                                                                            |-| bool|| [[#track_get_interpolation_loop_wrap|track_get_interpolation_loop_wrap]] '''(''' int track_idx ''')''' const                                                                                                                                                           |-| [[#InterpolationType|InterpolationType]]|| [[#track_get_interpolation_type|track_get_interpolation_type]] '''(''' int track_idx ''')''' const                                                                                                                                                                     |-| int|| [[#track_get_key_count|track_get_key_count]] '''(''' int track_idx ''')''' const                                                                                                                                                                                       |-| float|| [[#track_get_key_time|track_get_key_time]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                                          |-| float|| [[#track_get_key_transition|track_get_key_transition]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                              |-| [[Variant GD|Variant]]|| [[#track_get_key_value|track_get_key_value]] '''(''' int track_idx, int key_idx ''')''' const                                                                                                                                                        |-| [[NodePath GD|NodePath]]|| [[#track_get_path|track_get_path]] '''(''' int track_idx ''')''' const                                                                                                                                                                                                 |-| [[#TrackType|TrackType]]|| [[#track_get_type|track_get_type]] '''(''' int track_idx ''')''' const                                                                                                                                                                                                 |-| void|| [[#track_insert_key|track_insert_key]] '''(''' int track_idx, float time, [[Variant GD|Variant]] key, float transition=1 ''')'''                                                                                        |-| bool|| [[#track_is_enabled|track_is_enabled]] '''(''' int track_idx ''')''' const                                                                                                                                                                                             |-| bool|| [[#track_is_imported|track_is_imported]] '''(''' int track_idx ''')''' const                                                                                                                                                                                           |-| void|| [[#track_move_down|track_move_down]] '''(''' int track_idx ''')'''                                                                                                                                                                                                     |-| void|| [[#track_move_to|track_move_to]] '''(''' int track_idx, int to_idx ''')'''                                                                                                                                                                           |-| void|| [[#track_move_up|track_move_up]] '''(''' int track_idx ''')'''                                                                                                                                                                                                         |-| void|| [[#track_remove_key|track_remove_key]] '''(''' int track_idx, int key_idx ''')'''                                                                                                                                                                    |-| void|| [[#track_remove_key_at_position|track_remove_key_at_position]] '''(''' int track_idx, float position ''')'''                                                                                                                                       |-| void|| [[#track_set_enabled|track_set_enabled]] '''(''' int track_idx, bool enabled ''')'''                                                                                                                                                                |-| void|| [[#track_set_imported|track_set_imported]] '''(''' int track_idx, bool imported ''')'''                                                                                                                                                             |-| void|| [[#track_set_interpolation_loop_wrap|track_set_interpolation_loop_wrap]] '''(''' int track_idx, bool interpolation ''')'''                                                                                                                          |-| void|| [[#track_set_interpolation_type|track_set_interpolation_type]] '''(''' int track_idx, [[#InterpolationType|InterpolationType]] interpolation ''')'''                                                                                                 |-| void|| [[#track_set_key_time|track_set_key_time]] '''(''' int track_idx, int key_idx, float time ''')'''                                                                                                                                |-| void|| [[#track_set_key_transition|track_set_key_transition]] '''(''' int track_idx, int key_idx, float transition ''')'''                                                                                                              |-| void|| [[#track_set_key_value|track_set_key_value]] '''(''' int track_idx, int key, [[Variant GD|Variant]] value ''')'''                                                                                                                             |-| void|| [[#track_set_path|track_set_path]] '''(''' int track_idx, [[NodePath GD|NodePath]] path ''')'''                                                                                                                                                                 |-| void|| [[#track_swap|track_swap]] '''(''' int track_idx, int with_idx ''')'''                                                                                                                                                                               |-| int|| [[#transform_track_insert_key|transform_track_insert_key]] '''(''' int track_idx, float time, [[Vector3 GD|Vector3]] location, [[Quat GD|Quat]] rotation, [[Vector3 GD|Vector3]] scale ''')'''                                |-| [[Array GD|Array]]|| [[#transform_track_interpolate|transform_track_interpolate]] '''(''' int track_idx, float time_sec ''')''' const                                                                                                                                   |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#value_track_get_key_indices|value_track_get_key_indices]] '''(''' int track_idx, float time_sec, float delta ''')''' const                                                                                                  |-| [[#UpdateMode|UpdateMode]]|| [[#value_track_get_update_mode|value_track_get_update_mode]] '''(''' int track_idx ''')''' const                                                                                                                                                                       |-| void|| [[#value_track_set_update_mode|value_track_set_update_mode]] '''(''' int track_idx, [[#UpdateMode|UpdateMode]] mode ''')'''                                                                                                                          |}== Signals ===== tracks_changed ===*  '''tracks_changed ( )'''Emitted when there's a change in the list of tracks, e.g. tracks are added, moved or have changed paths.== Enumerations ===== TrackType ====== TYPE_VALUE ====== TYPE_TRANSFORM ====== TYPE_METHOD ====== TYPE_BEZIER ====== TYPE_AUDIO ====== TYPE_ANIMATION ===enum '''TrackType''':*  '''TYPE_VALUE''' = '''0'''  Value tracks set values in node properties, but only those which can be Interpolated.*  '''TYPE_TRANSFORM''' = '''1'''  Transform tracks are used to change node local transforms or skeleton pose bones. Transitions are interpolated.*  '''TYPE_METHOD''' = '''2'''  Method tracks call functions with given arguments per key.*  '''TYPE_BEZIER''' = '''3'''  Bezier tracks are used to interpolate a value using custom curves. They can also be used to animate sub-properties of vectors and colors (e.g. alpha value of a [[Color GD|Color]]).*  '''TYPE_AUDIO''' = '''4'''  Audio tracks are used to play an audio stream with either type of [[AudioStreamPlayer GD|AudioStreamPlayer]]. The stream can be trimmed and previewed in the animation.*  '''TYPE_ANIMATION''' = '''5'''  Animation tracks play animations in other [[AnimationPlayer GD|AnimationPlayer]] nodes.=== InterpolationType ====== INTERPOLATION_NEAREST ====== INTERPOLATION_LINEAR ====== INTERPOLATION_CUBIC ===enum '''InterpolationType''':*  '''INTERPOLATION_NEAREST''' = '''0'''  No interpolation (nearest value).*  '''INTERPOLATION_LINEAR''' = '''1'''  Linear interpolation.*  '''INTERPOLATION_CUBIC''' = '''2'''  Cubic interpolation.=== UpdateMode ====== UPDATE_CONTINUOUS ====== UPDATE_DISCRETE ====== UPDATE_TRIGGER ====== UPDATE_CAPTURE ===enum '''UpdateMode''':*  '''UPDATE_CONTINUOUS''' = '''0'''  Update between keyframes.*  '''UPDATE_DISCRETE''' = '''1'''  Update at the keyframes and hold the value.*  '''UPDATE_TRIGGER''' = '''2'''  Update at the keyframes.*  '''UPDATE_CAPTURE''' = '''3'''  Same as linear interpolation, but also interpolates from the current value (i.e. dynamically at runtime) if the first key isn't at 0 seconds.== Property Descriptions ===== length ===*  float '''length'''{| class="wikitable | ''Default''|| {{Span|1.0}}           |-| ''Setter''|| set_length(value) |-| ''Getter''|| get_length()      |}The total length of the animation (in seconds).'''Note:''' Length is not delimited by the last key, as this one may be before or after the end to ensure correct interpolation and looping.=== loop ===*  bool '''loop'''{| class="wikitable | ''Default''|| {{Span|false}}       |-| ''Setter''|| set_loop(value) |-| ''Getter''|| has_loop()      |}A flag indicating that the animation must loop. This is uses for correct interpolation of animation cycles, and for hinting the player that it must restart the animation.=== step ===*  float '''step'''{| class="wikitable | ''Default''|| {{Span|0.1}}         |-| ''Setter''|| set_step(value) |-| ''Getter''|| get_step()      |}The animation step value.== Method Descriptions ===== add_track ===*  int '''add_track''' '''(''' [[#TrackType|TrackType]] type, int at_position=-1 ''')'''Adds a track to the Animation.=== animation_track_get_key_animation ===*  [[StringName GD|StringName]] '''animation_track_get_key_animation''' '''(''' int track_idx, int key_idx ''')''' constReturns the animation name at the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of an Animation Track.=== animation_track_insert_key ===*  int '''animation_track_insert_key''' '''(''' int track_idx, float time, [[StringName GD|StringName]] animation ''')'''Inserts a key with value {{Span|animation}} at the given {{Span|time}} (in seconds). The {{Span|track_idx}} must be the index of an Animation Track.=== animation_track_set_key_animation ===*  void '''animation_track_set_key_animation''' '''(''' int track_idx, int key_idx, [[StringName GD|StringName]] animation ''')'''Sets the key identified by {{Span|key_idx}} to value {{Span|animation}}. The {{Span|track_idx}} must be the index of an Animation Track.=== audio_track_get_key_end_offset ===*  float '''audio_track_get_key_end_offset''' '''(''' int track_idx, int key_idx ''')''' constReturns the end offset of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of an Audio Track.End offset is the number of seconds cut off at the ending of the audio stream.=== audio_track_get_key_start_offset ===*  float '''audio_track_get_key_start_offset''' '''(''' int track_idx, int key_idx ''')''' constReturns the start offset of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of an Audio Track.Start offset is the number of seconds cut off at the beginning of the audio stream.=== audio_track_get_key_stream ===*  [[Resource GD|Resource]] '''audio_track_get_key_stream''' '''(''' int track_idx, int key_idx ''')''' constReturns the audio stream of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of an Audio Track.=== audio_track_insert_key ===*  int '''audio_track_insert_key''' '''(''' int track_idx, float time, [[Resource GD|Resource]] stream, float start_offset=0, float end_offset=0 ''')'''Inserts an Audio Track key at the given {{Span|time}} in seconds. The {{Span|track_idx}} must be the index of an Audio Track.{{Span|stream}} is the [[AudioStream GD|AudioStream]] resource to play. {{Span|start_offset}} is the number of seconds cut off at the beginning of the audio stream, while {{Span|end_offset}} is at the ending.=== audio_track_set_key_end_offset ===*  void '''audio_track_set_key_end_offset''' '''(''' int track_idx, int key_idx, float offset ''')'''Sets the end offset of the key identified by {{Span|key_idx}} to value {{Span|offset}}. The {{Span|track_idx}} must be the index of an Audio Track.=== audio_track_set_key_start_offset ===*  void '''audio_track_set_key_start_offset''' '''(''' int track_idx, int key_idx, float offset ''')'''Sets the start offset of the key identified by {{Span|key_idx}} to value {{Span|offset}}. The {{Span|track_idx}} must be the index of an Audio Track.=== audio_track_set_key_stream ===*  void '''audio_track_set_key_stream''' '''(''' int track_idx, int key_idx, [[Resource GD|Resource]] stream ''')'''Sets the stream of the key identified by {{Span|key_idx}} to value {{Span|offset}}. The {{Span|track_idx}} must be the index of an Audio Track.=== bezier_track_get_key_in_handle ===*  [[Vector2 GD|Vector2]] '''bezier_track_get_key_in_handle''' '''(''' int track_idx, int key_idx ''')''' constReturns the in handle of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_get_key_out_handle ===*  [[Vector2 GD|Vector2]] '''bezier_track_get_key_out_handle''' '''(''' int track_idx, int key_idx ''')''' constReturns the out handle of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_get_key_value ===*  float '''bezier_track_get_key_value''' '''(''' int track_idx, int key_idx ''')''' constReturns the value of the key identified by {{Span|key_idx}}. The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_insert_key ===*  int '''bezier_track_insert_key''' '''(''' int track_idx, float time, float value, [[Vector2 GD|Vector2]] in_handle=Vector2( 0, 0 ), [[Vector2 GD|Vector2]] out_handle=Vector2( 0, 0 ) ''')'''Inserts a Bezier Track key at the given {{Span|time}} in seconds. The {{Span|track_idx}} must be the index of a Bezier Track.{{Span|in_handle}} is the left-side weight of the added Bezier curve point, {{Span|out_handle}} is the right-side one, while {{Span|value}} is the actual value at this point.=== bezier_track_interpolate ===*  float '''bezier_track_interpolate''' '''(''' int track_idx, float time ''')''' constReturns the interpolated value at the given {{Span|time}} (in seconds). The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_set_key_in_handle ===*  void '''bezier_track_set_key_in_handle''' '''(''' int track_idx, int key_idx, [[Vector2 GD|Vector2]] in_handle ''')'''Sets the in handle of the key identified by {{Span|key_idx}} to value {{Span|in_handle}}. The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_set_key_out_handle ===*  void '''bezier_track_set_key_out_handle''' '''(''' int track_idx, int key_idx, [[Vector2 GD|Vector2]] out_handle ''')'''Sets the out handle of the key identified by {{Span|key_idx}} to value {{Span|out_handle}}. The {{Span|track_idx}} must be the index of a Bezier Track.=== bezier_track_set_key_value ===*  void '''bezier_track_set_key_value''' '''(''' int track_idx, int key_idx, float value ''')'''Sets the value of the key identified by {{Span|key_idx}} to the given value. The {{Span|track_idx}} must be the index of a Bezier Track.=== clear ===*  void '''clear ( )'''Clear the animation (clear all tracks and reset all).=== copy_track ===*  void '''copy_track''' '''(''' int track_idx, [[Animation GD|Animation]] to_animation ''')'''Adds a new track that is a copy of the given track from {{Span|to_animation}}.=== find_track ===*  int '''find_track''' '''(''' [[NodePath GD|NodePath]] path ''')''' constReturns the index of the specified track. If the track is not found, return -1.=== get_track_count ===*  int '''get_track_count ( )''' constReturns the amount of tracks in the animation.=== track_get_key_indices ===*  [[PackedInt32Array GD|PackedInt32Array]] '''method_track_get_key_indices''' '''(''' int track_idx, float time_sec, float delta ''')''' constReturns all the key indices of a method track, given a position and delta time.=== track_get_name ===*  [[StringName GD|StringName]] '''method_track_get_name''' '''(''' int track_idx, int key_idx ''')''' constReturns the method name of a method track.=== track_get_params ===*  [[Array GD|Array]] '''method_track_get_params''' '''(''' int track_idx, int key_idx ''')''' constReturns the arguments values to be called on a method track for a given key in a given track.=== remove_track ===*  void '''remove_track''' '''(''' int track_idx ''')'''Removes a track by specifying the track index.=== track_find_key ===*  int '''track_find_key''' '''(''' int track_idx, float time, bool exact=false ''')''' constFinds the key index by time in a given track. Optionally, only find it if the exact time is given.=== track_get_interpolation_loop_wrap ===*  bool '''track_get_interpolation_loop_wrap''' '''(''' int track_idx ''')''' constReturns {{Span|true}} if the track at {{Span|idx}} wraps the interpolation loop. New tracks wrap the interpolation loop by default.=== track_get_interpolation_type ===*  [[#InterpolationType|InterpolationType]] '''track_get_interpolation_type''' '''(''' int track_idx ''')''' constReturns the interpolation type of a given track.=== track_get_key_count ===*  int '''track_get_key_count''' '''(''' int track_idx ''')''' constReturns the amount of keys in a given track.=== track_get_key_time ===*  float '''track_get_key_time''' '''(''' int track_idx, int key_idx ''')''' constReturns the time at which the key is located.=== track_get_key_transition ===*  float '''track_get_key_transition''' '''(''' int track_idx, int key_idx ''')''' constReturns the transition curve (easing) for a specific key (see the built-in math function [[@GDScript GD#ease|@GDScript.ease()]]).=== track_get_key_value ===*  [[Variant GD|Variant]] '''track_get_key_value''' '''(''' int track_idx, int key_idx ''')''' constReturns the value of a given key in a given track.=== track_get_path ===*  [[NodePath GD|NodePath]] '''track_get_path''' '''(''' int track_idx ''')''' constGets the path of a track. For more information on the path format, see [[#track_set_path|track_set_path]].=== track_get_type ===*  [[#TrackType|TrackType]] '''track_get_type''' '''(''' int track_idx ''')''' constGets the type of a track.=== track_insert_key ===*  void '''track_insert_key''' '''(''' int track_idx, float time, [[Variant GD|Variant]] key, float transition=1 ''')'''Insert a generic key in a given track.=== track_is_enabled ===*  bool '''track_is_enabled''' '''(''' int track_idx ''')''' constReturns {{Span|true}} if the track at index {{Span|idx}} is enabled.=== track_is_imported ===*  bool '''track_is_imported''' '''(''' int track_idx ''')''' constReturns {{Span|true}} if the given track is imported. Else, return {{Span|false}}.=== track_move_down ===*  void '''track_move_down''' '''(''' int track_idx ''')'''Moves a track down.=== track_move_to ===*  void '''track_move_to''' '''(''' int track_idx, int to_idx ''')'''Changes the index position of track {{Span|idx}} to the one defined in {{Span|to_idx}}.=== track_move_up ===*  void '''track_move_up''' '''(''' int track_idx ''')'''Moves a track up.=== track_remove_key ===*  void '''track_remove_key''' '''(''' int track_idx, int key_idx ''')'''Removes a key by index in a given track.=== track_remove_key_at_position ===*  void '''track_remove_key_at_position''' '''(''' int track_idx, float position ''')'''Removes a key by position (seconds) in a given track.=== track_set_enabled ===*  void '''track_set_enabled''' '''(''' int track_idx, bool enabled ''')'''Enables/disables the given track. Tracks are enabled by default.=== track_set_imported ===*  void '''track_set_imported''' '''(''' int track_idx, bool imported ''')'''Sets the given track as imported or not.=== track_set_interpolation_loop_wrap ===*  void '''track_set_interpolation_loop_wrap''' '''(''' int track_idx, bool interpolation ''')'''If {{Span|true}}, the track at {{Span|idx}} wraps the interpolation loop.=== track_set_interpolation_type ===*  void '''track_set_interpolation_type''' '''(''' int track_idx, [[#InterpolationType|InterpolationType]] interpolation ''')'''Sets the interpolation type of a given track.=== track_set_key_time ===*  void '''track_set_key_time''' '''(''' int track_idx, int key_idx, float time ''')'''Sets the time of an existing key.=== track_set_key_transition ===*  void '''track_set_key_transition''' '''(''' int track_idx, int key_idx, float transition ''')'''Sets the transition curve (easing) for a specific key (see the built-in math function [[@GDScript GD#ease|@GDScript.ease()]]).=== track_set_key_value ===*  void '''track_set_key_value''' '''(''' int track_idx, int key, [[Variant GD|Variant]] value ''')'''Sets the value of an existing key.=== track_set_path ===*  void '''track_set_path''' '''(''' int track_idx, [[NodePath GD|NodePath]] path ''')'''Sets the path of a track. Paths must be valid scene-tree paths to a node, and must be specified starting from the parent node of the node that will reproduce the animation. Tracks that control properties or bones must append their name after the path, separated by {{Span|":"}}.For example, {{Span|"character/skeleton:ankle"}} or {{Span|"character/mesh:transform/local"}}.=== track_swap ===*  void '''track_swap''' '''(''' int track_idx, int with_idx ''')'''Swaps the track {{Span|idx}}'s index position with the track {{Span|with_idx}}.=== transform_track_insert_key ===*  int '''transform_track_insert_key''' '''(''' int track_idx, float time, [[Vector3 GD|Vector3]] location, [[Quat GD|Quat]] rotation, [[Vector3 GD|Vector3]] scale ''')'''Insert a transform key for a transform track.=== transform_track_interpolate ===*  [[Array GD|Array]] '''transform_track_interpolate''' '''(''' int track_idx, float time_sec ''')''' constReturns the interpolated value of a transform track at a given time (in seconds). An array consisting of 3 elements: position ([[Vector3 GD|Vector3]]), rotation ([[Quat GD|Quat]]) and scale ([[Vector3 GD|Vector3]]).=== value_track_get_key_indices ===*  [[PackedInt32Array GD|PackedInt32Array]] '''value_track_get_key_indices''' '''(''' int track_idx, float time_sec, float delta ''')''' constReturns all the key indices of a value track, given a position and delta time.=== value_track_get_update_mode ===*  [[#UpdateMode|UpdateMode]] '''value_track_get_update_mode''' '''(''' int track_idx ''')''' constReturns the update mode of a value track.=== value_track_set_update_mode ===*  void '''value_track_set_update_mode''' '''(''' int track_idx, [[#UpdateMode|UpdateMode]] mode ''')'''Sets the update mode (see [[#UpdateMode|UpdateMode]]) of a value track.