__NOTOC__'''Inherits:''' [[PacketPeer GD|PacketPeer]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]DTLS packet peer.== Description ==This class represents a DTLS peer connection. It can be used to connect to a DTLS server, and is returned by [[DTLSServer GD#take_connection|DTLSServer.take_connection()]].== Methods =={| class="wikitable | [[@GlobalScope GD#Error|Error]]|| [[#connect_to_peer|connect_to_peer]] '''(''' [[PacketPeerUDP GD|PacketPeerUDP]] packet_peer, bool validate_certs=true, [[String GD|String]] for_hostname="", [[X509Certificate GD|X509Certificate]] valid_certificate=null ''')''' |-| void|| [[#disconnect_from_peer|disconnect_from_peer]] '''(''' ''')'''                                                                                                                                                                                                             |-| [[#Status|Status]]|| [[#get_status|get_status]] '''(''' ''')''' const                                                                                                                                                                                                                           |-| void|| [[#poll|poll]] '''(''' ''')'''                                                                                                                                                                                                                                             |}== Enumerations ===== Status ====== STATUS_DISCONNECTED ====== STATUS_HANDSHAKING ====== STATUS_CONNECTED ====== STATUS_ERROR ====== STATUS_ERROR_HOSTNAME_MISMATCH ===enum '''Status''':*  '''STATUS_DISCONNECTED''' = '''0'''  A status representing a {{Span|PacketPeerDTLS}} that is disconnected.*  '''STATUS_HANDSHAKING''' = '''1'''  A status representing a {{Span|PacketPeerDTLS}} that is currently performing the handshake with a remote peer.*  '''STATUS_CONNECTED''' = '''2'''  A status representing a {{Span|PacketPeerDTLS}} that is connected to a remote peer.*  '''STATUS_ERROR''' = '''3'''  A status representing a {{Span|PacketPeerDTLS}} in a generic error state.*  '''STATUS_ERROR_HOSTNAME_MISMATCH''' = '''4'''  An error status that shows a mismatch in the DTLS certificate domain presented by the host and the domain requested for validation.== Method Descriptions ===== connect_to_peer ===*  [[@GlobalScope GD#Error|Error]] '''connect_to_peer''' '''(''' [[PacketPeerUDP GD|PacketPeerUDP]] packet_peer, bool validate_certs=true, [[String GD|String]] for_hostname="", [[X509Certificate GD|X509Certificate]] valid_certificate=null ''')'''Connects a {{Span|peer}} beginning the DTLS handshake using the underlying [[PacketPeerUDP GD|PacketPeerUDP]] which must be connected (see [[PacketPeerUDP GD#connect_to_host|PacketPeerUDP.connect_to_host()]]). If {{Span|validate_certs}} is {{Span|true}}, {{Span|PacketPeerDTLS}} will validate that the certificate presented by the remote peer and match it with the {{Span|for_hostname}} argument. You can specify a custom [[X509Certificate GD|X509Certificate]] to use for validation via the {{Span|valid_certificate}} argument.=== disconnect_from_peer ===*  void '''disconnect_from_peer ( )'''Disconnects this peer, terminating the DTLS session.=== get_status ===*  [[#Status|Status]] '''get_status ( )''' constReturns the status of the connection. See [[#Status|Status]] for values.=== poll ===*  void '''poll ( )'''Poll the connection to check for incoming packets. Call this frequently to update the status and keep the connection working.