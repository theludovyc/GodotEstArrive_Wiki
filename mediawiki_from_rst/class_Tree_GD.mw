__NOTOC__'''Inherits:''' [[Control GD|Control]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Control to show a tree of items.== Description ==This shows a tree of items that can be selected, expanded and collapsed. The tree can have multiple columns with custom controls like text editing, buttons and popups. It can be useful for structured displays and interactions.Trees are built via code, using [[TreeItem GD|TreeItem]] objects to create the structure. They have a single root but multiple roots can be simulated if a dummy hidden root is added.::    func _ready():        var tree = Tree.new()        var root = tree.create_item()        tree.set_hide_root(true)        var child1 = tree.create_item(root)        var child2 = tree.create_item(root)        var subchild1 = tree.create_item(child1)        subchild1.set_text(0, "Subchild1")To iterate over all the [[TreeItem GD|TreeItem]] objects in a {{Span|Tree}} object, use [[TreeItem GD#get_next|TreeItem.get_next()]] and [[TreeItem GD#get_children|TreeItem.get_children()]] after getting the root through [[#get_root|get_root]].== Properties =={| class="wikitable | bool|| [[#allow_reselect|allow_reselect]]|| {{Span|false}}       |-| bool|| [[#allow_rmb_select|allow_rmb_select]]|| {{Span|false}}       |-| int|| [[#columns|columns]]|| {{Span|1}}           |-| int|| [[#drop_mode_flags|drop_mode_flags]]|| {{Span|0}}           |-| [[#FocusMode|FocusMode]]|| focus_mode|| {{Span|2}} (parent override)    |-| bool|| [[#hide_folding|hide_folding]]|| {{Span|false}}       |-| bool|| [[#hide_root|hide_root]]|| {{Span|false}}       |-| bool|| rect_clip_content|| {{Span|true}} (parent override) |-| [[#SelectMode|SelectMode]]|| [[#select_mode|select_mode]]|| {{Span|0}}           |}== Methods =={| class="wikitable | bool|| [[#are_column_titles_visible|are_column_titles_visible]] '''(''' ''')''' const                                                     |-| void|| [[#clear|clear]] '''(''' ''')'''                                                                                                   |-| [[TreeItem GD|TreeItem]]|| [[#create_item|create_item]] '''(''' [[Object GD|Object]] parent=null, int idx=-1 ''')'''                 |-| void|| [[#ensure_cursor_is_visible|ensure_cursor_is_visible]] '''(''' ''')'''                                                             |-| int|| [[#get_column_at_position|get_column_at_position]] '''(''' [[Vector2 GD|Vector2]] position ''')''' const                    |-| [[String GD|String]]|| [[#get_column_title|get_column_title]] '''(''' int column ''')''' const                                          |-| int|| [[#get_column_width|get_column_width]] '''(''' int column ''')''' const                                          |-| [[Rect2 GD|Rect2]]|| [[#get_custom_popup_rect|get_custom_popup_rect]] '''(''' ''')''' const                                                             |-| int|| [[#get_drop_section_at_position|get_drop_section_at_position]] '''(''' [[Vector2 GD|Vector2]] position ''')''' const        |-| [[TreeItem GD|TreeItem]]|| [[#get_edited|get_edited]] '''(''' ''')''' const                                                                                   |-| int|| [[#get_edited_column|get_edited_column]] '''(''' ''')''' const                                                                     |-| [[Rect2 GD|Rect2]]|| [[#get_item_area_rect|get_item_area_rect]] '''(''' [[Object GD|Object]] item, int column=-1 ''')''' const |-| [[TreeItem GD|TreeItem]]|| [[#get_item_at_position|get_item_at_position]] '''(''' [[Vector2 GD|Vector2]] position ''')''' const                        |-| [[TreeItem GD|TreeItem]]|| [[#get_next_selected|get_next_selected]] '''(''' [[Object GD|Object]] from ''')'''                                          |-| int|| [[#get_pressed_button|get_pressed_button]] '''(''' ''')''' const                                                                   |-| [[TreeItem GD|TreeItem]]|| [[#get_root|get_root]] '''(''' ''')'''                                                                                             |-| [[Vector2 GD|Vector2]]|| [[#get_scroll|get_scroll]] '''(''' ''')''' const                                                                                   |-| [[TreeItem GD|TreeItem]]|| [[#get_selected|get_selected]] '''(''' ''')''' const                                                                               |-| int|| [[#get_selected_column|get_selected_column]] '''(''' ''')''' const                                                                 |-| void|| [[#set_column_expand|set_column_expand]] '''(''' int column, bool expand ''')'''              |-| void|| [[#set_column_min_width|set_column_min_width]] '''(''' int column, int min_width ''')'''       |-| void|| [[#set_column_title|set_column_title]] '''(''' int column, [[String GD|String]] title ''')'''             |-| void|| [[#set_column_titles_visible|set_column_titles_visible]] '''(''' bool visible ''')'''                           |}== Theme Properties =={| class="wikitable | [[Texture2D GD|Texture2D]]|| arrow||                              |-| [[Texture2D GD|Texture2D]]|| arrow_collapsed||                              |-| [[StyleBox GD|StyleBox]]|| bg||                              |-| [[StyleBox GD|StyleBox]]|| bg_focus||                              |-| int|| button_margin|| 4                            |-| [[StyleBox GD|StyleBox]]|| button_pressed||                              |-| [[Texture2D GD|Texture2D]]|| checked||                              |-| [[StyleBox GD|StyleBox]]|| cursor||                              |-| [[StyleBox GD|StyleBox]]|| cursor_unfocused||                              |-| [[StyleBox GD|StyleBox]]|| custom_button||                              |-| [[Color GD|Color]]|| custom_button_font_highlight|| Color( 0.94, 0.94, 0.94, 1 ) |-| [[StyleBox GD|StyleBox]]|| custom_button_hover||                              |-| [[StyleBox GD|StyleBox]]|| custom_button_pressed||                              |-| int|| draw_guides|| 1                            |-| int|| draw_relationship_lines|| 0                            |-| [[Color GD|Color]]|| drop_position_color|| Color( 1, 0.3, 0.2, 1 )      |-| [[Font GD|Font]]|| font||                              |-| [[Color GD|Color]]|| font_color|| Color( 0.69, 0.69, 0.69, 1 ) |-| [[Color GD|Color]]|| font_color_selected|| Color( 1, 1, 1, 1 )          |-| [[Color GD|Color]]|| guide_color|| Color( 0, 0, 0, 0.1 )        |-| int|| hseparation|| 4                            |-| int|| item_margin|| 12                           |-| [[Color GD|Color]]|| relationship_line_color|| Color( 0.27, 0.27, 0.27, 1 ) |-| int|| scroll_border|| 4                            |-| int|| scroll_speed|| 12                           |-| [[Texture2D GD|Texture2D]]|| select_arrow||                              |-| [[StyleBox GD|StyleBox]]|| selected||                              |-| [[StyleBox GD|StyleBox]]|| selected_focus||                              |-| [[Color GD|Color]]|| title_button_color|| Color( 0.88, 0.88, 0.88, 1 ) |-| [[Font GD|Font]]|| title_button_font||                              |-| [[StyleBox GD|StyleBox]]|| title_button_hover||                              |-| [[StyleBox GD|StyleBox]]|| title_button_normal||                              |-| [[StyleBox GD|StyleBox]]|| title_button_pressed||                              |-| [[Texture2D GD|Texture2D]]|| unchecked||                              |-| [[Texture2D GD|Texture2D]]|| updown||                              |-| int|| vseparation|| 4                            |}== Signals ===== button_pressed ===*  '''button_pressed''' '''(''' [[TreeItem GD|TreeItem]] item, int column, int id ''')'''Emitted when a button on the tree was pressed (see [[TreeItem GD#add_button|TreeItem.add_button()]]).=== cell_selected ===*  '''cell_selected ( )'''Emitted when a cell is selected.=== column_title_pressed ===*  '''column_title_pressed''' '''(''' int column ''')'''Emitted when a column's title is pressed.=== custom_popup_edited ===*  '''custom_popup_edited''' '''(''' bool arrow_clicked ''')'''Emitted when a cell with the [[TreeItem GD#CELL_MODE_CUSTOM|TreeItem.CELL_MODE_CUSTOM()]] is clicked to be edited.=== empty_rmb ===*  '''empty_rmb''' '''(''' [[Vector2 GD|Vector2]] position ''')'''Emitted when the right mouse button is pressed in the empty space of the tree.=== empty_tree_rmb_selected ===*  '''empty_tree_rmb_selected''' '''(''' [[Vector2 GD|Vector2]] position ''')'''Emitted when the right mouse button is pressed if right mouse button selection is active and the tree is empty.=== item_activated ===*  '''item_activated ( )'''Emitted when an item's label is double-clicked.=== item_collapsed ===*  '''item_collapsed''' '''(''' [[TreeItem GD|TreeItem]] item ''')'''Emitted when an item is collapsed by a click on the folding arrow.=== item_custom_button_pressed ===*  '''item_custom_button_pressed ( )'''Emitted when a custom button is pressed (i.e. in a [[TreeItem GD#CELL_MODE_CUSTOM|TreeItem.CELL_MODE_CUSTOM()]] mode cell).=== item_double_clicked ===*  '''item_double_clicked ( )'''Emitted when an item's icon is double-clicked.=== item_edited ===*  '''item_edited ( )'''Emitted when an item is edited.=== item_rmb_edited ===*  '''item_rmb_edited ( )'''Emitted when an item is edited using the right mouse button.=== item_rmb_selected ===*  '''item_rmb_selected''' '''(''' [[Vector2 GD|Vector2]] position ''')'''Emitted when an item is selected with the right mouse button.=== item_selected ===*  '''item_selected ( )'''Emitted when an item is selected.=== multi_selected ===*  '''multi_selected''' '''(''' [[TreeItem GD|TreeItem]] item, int column, bool selected ''')'''Emitted instead of {{Span|item_selected}} if {{Span|select_mode}} is [[Tree GD#SELECT_MULTI|SELECT_MULTI]].=== nothing_selected ===*  '''nothing_selected ( )'''Emitted when a left mouse button click does not select any item.== Enumerations ===== SelectMode ====== SELECT_SINGLE ====== SELECT_ROW ====== SELECT_MULTI ===enum '''SelectMode''':*  '''SELECT_SINGLE''' = '''0'''  Allows selection of a single cell at a time. From the perspective of items, only a single item is allowed to be selected. And there is only one column selected in the selected item.The focus cursor is always hidden in this mode, but it is positioned at the current selection, making the currently selected item the currently focused item.*  '''SELECT_ROW''' = '''1'''  Allows selection of a single row at a time. From the perspective of items, only a single items is allowed to be selected. And all the columns are selected in the selected item.The focus cursor is always hidden in this mode, but it is positioned at the first column of the current selection, making the currently selected item the currently focused item.*  '''SELECT_MULTI''' = '''2'''  Allows selection of multiple cells at the same time. From the perspective of items, multiple items are allowed to be selected. And there can be multiple columns selected in each selected item.The focus cursor is visible in this mode, the item or column under the cursor is not necessarily selected.=== DropModeFlags ====== DROP_MODE_DISABLED ====== DROP_MODE_ON_ITEM ====== DROP_MODE_INBETWEEN ===enum '''DropModeFlags''':*  '''DROP_MODE_DISABLED''' = '''0'''  Disables all drop sections, but still allows to detect the "on item" drop section by [[#get_drop_section_at_position|get_drop_section_at_position]].'''Note:''' This is the default flag, it has no effect when combined with other flags.*  '''DROP_MODE_ON_ITEM''' = '''1'''  Enables the "on item" drop section. This drop section covers the entire item.When combined with [[Tree GD#DROP_MODE_INBETWEEN|DROP_MODE_INBETWEEN]], this drop section halves the height and stays centered vertically.*  '''DROP_MODE_INBETWEEN''' = '''2'''  Enables "above item" and "below item" drop sections. The "above item" drop section covers the top half of the item, and the "below item" drop section covers the bottom half.When combined with [[Tree GD#DROP_MODE_ON_ITEM|DROP_MODE_ON_ITEM]], these drop sections halves the height and stays on top / bottom accordingly.== Property Descriptions ===== allow_reselect ===*  bool '''allow_reselect'''{| class="wikitable | ''Default''|| {{Span|false}}                 |-| ''Setter''|| set_allow_reselect(value) |-| ''Getter''|| get_allow_reselect()      |}If {{Span|true}}, the currently selected cell may be selected again.=== allow_rmb_select ===*  bool '''allow_rmb_select'''{| class="wikitable | ''Default''|| {{Span|false}}                   |-| ''Setter''|| set_allow_rmb_select(value) |-| ''Getter''|| get_allow_rmb_select()      |}If {{Span|true}}, a right mouse button click can select items.=== columns ===*  int '''columns'''{| class="wikitable | ''Default''|| {{Span|1}}              |-| ''Setter''|| set_columns(value) |-| ''Getter''|| get_columns()      |}The number of columns.=== drop_mode_flags ===*  int '''drop_mode_flags'''{| class="wikitable | ''Default''|| {{Span|0}}                      |-| ''Setter''|| set_drop_mode_flags(value) |-| ''Getter''|| get_drop_mode_flags()      |}The drop mode as an OR combination of flags. See [[#DropModeFlags|DropModeFlags]] constants. Once dropping is done, reverts to [[Tree GD#DROP_MODE_DISABLED|DROP_MODE_DISABLED]]. Setting this during [[Control GD#can_drop_data|Control.can_drop_data()]] is recommended.This controls the drop sections, i.e. the decision and drawing of possible drop locations based on the mouse position.=== hide_folding ===*  bool '''hide_folding'''{| class="wikitable | ''Default''|| {{Span|false}}               |-| ''Setter''|| set_hide_folding(value) |-| ''Getter''|| is_folding_hidden()     |}If {{Span|true}}, the folding arrow is hidden.=== hide_root ===*  bool '''hide_root'''{| class="wikitable | ''Default''|| {{Span|false}}            |-| ''Setter''|| set_hide_root(value) |-| ''Getter''|| is_root_hidden()     |}If {{Span|true}}, the tree's root is hidden.=== select_mode ===*  [[#SelectMode|SelectMode]] '''select_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                  |-| ''Setter''|| set_select_mode(value) |-| ''Getter''|| get_select_mode()      |}Allows single or multiple selection. See the [[#SelectMode|SelectMode]] constants.== Method Descriptions ===== are_column_titles_visible ===*  bool '''are_column_titles_visible ( )''' constReturns {{Span|true}} if the column titles are being shown.=== clear ===*  void '''clear ( )'''Clears the tree. This removes all items.=== create_item ===*  [[TreeItem GD|TreeItem]] '''create_item''' '''(''' [[Object GD|Object]] parent=null, int idx=-1 ''')'''Creates an item in the tree and adds it as a child of {{Span|parent}}.If {{Span|parent}} is {{Span|null}}, the root item will be the parent, or the new item will be the root itself if the tree is empty.The new item will be the {{Span|idx}}\ th child of parent, or it will be the last child if there are not enough siblings.=== ensure_cursor_is_visible ===*  void '''ensure_cursor_is_visible ( )'''Makes the currently focused cell visible.This will scroll the tree if necessary. In [[Tree GD#SELECT_ROW|SELECT_ROW]] mode, this will not do horizontal scrolling, as all the cells in the selected row is focused logically.'''Note:''' Despite the name of this method, the focus cursor itself is only visible in [[Tree GD#SELECT_MULTI|SELECT_MULTI]] mode.=== get_column_at_position ===*  int '''get_column_at_position''' '''(''' [[Vector2 GD|Vector2]] position ''')''' constReturns the column index at {{Span|position}}, or -1 if no item is there.=== get_column_title ===*  [[String GD|String]] '''get_column_title''' '''(''' int column ''')''' constReturns the column's title.=== get_column_width ===*  int '''get_column_width''' '''(''' int column ''')''' constReturns the column's width in pixels.=== get_custom_popup_rect ===*  [[Rect2 GD|Rect2]] '''get_custom_popup_rect ( )''' constReturns the rectangle for custom popups. Helper to create custom cell controls that display a popup. See [[TreeItem GD#set_cell_mode|TreeItem.set_cell_mode()]].=== get_drop_section_at_position ===*  int '''get_drop_section_at_position''' '''(''' [[Vector2 GD|Vector2]] position ''')''' constReturns the drop section at {{Span|position}}, or -100 if no item is there.Values -1, 0, or 1 will be returned for the "above item", "on item", and "below item" drop sections, respectively. See [[#DropModeFlags|DropModeFlags]] for a description of each drop section.To get the item which the returned drop section is relative to, use [[#get_item_at_position|get_item_at_position]].=== get_edited ===*  [[TreeItem GD|TreeItem]] '''get_edited ( )''' constReturns the currently edited item. This is only available for custom cell mode.=== get_edited_column ===*  int '''get_edited_column ( )''' constReturns the column for the currently edited item. This is only available for custom cell mode.=== get_item_area_rect ===*  [[Rect2 GD|Rect2]] '''get_item_area_rect''' '''(''' [[Object GD|Object]] item, int column=-1 ''')''' constReturns the rectangle area for the specified item. If {{Span|column}} is specified, only get the position and size of that column, otherwise get the rectangle containing all columns.=== get_item_at_position ===*  [[TreeItem GD|TreeItem]] '''get_item_at_position''' '''(''' [[Vector2 GD|Vector2]] position ''')''' constReturns the tree item at the specified position (relative to the tree origin position).=== get_next_selected ===*  [[TreeItem GD|TreeItem]] '''get_next_selected''' '''(''' [[Object GD|Object]] from ''')'''Returns the next selected item after the given one, or {{Span|null}} if the end is reached.If {{Span|from}} is {{Span|null}}, this returns the first selected item.=== get_pressed_button ===*  int '''get_pressed_button ( )''' constReturns the last pressed button's index.=== get_root ===*  [[TreeItem GD|TreeItem]] '''get_root ( )'''Returns the tree's root item, or {{Span|null}} if the tree is empty.=== get_scroll ===*  [[Vector2 GD|Vector2]] '''get_scroll ( )''' constReturns the current scrolling position.=== get_selected ===*  [[TreeItem GD|TreeItem]] '''get_selected ( )''' constReturns the currently focused item, or {{Span|null}} if no item is focused.In [[Tree GD#SELECT_ROW|SELECT_ROW]] and [[Tree GD#SELECT_SINGLE|SELECT_SINGLE]] modes, the focused item is same as the selected item. In [[Tree GD#SELECT_MULTI|SELECT_MULTI]] mode, the focused item is the item under the focus cursor, not necessarily selected.To get the currently selected item(s), use [[#get_next_selected|get_next_selected]].=== get_selected_column ===*  int '''get_selected_column ( )''' constReturns the currently focused column, or -1 if no column is focused.In [[Tree GD#SELECT_SINGLE|SELECT_SINGLE]] mode, the focused column is the selected column. In [[Tree GD#SELECT_ROW|SELECT_ROW]] mode, the focused column is always 0 if any item is selected. In [[Tree GD#SELECT_MULTI|SELECT_MULTI]] mode, the focused column is the column under the focus cursor, and there are not necessarily any column selected.To tell whether a column of an item is selected, use [[TreeItem GD#is_selected|TreeItem.is_selected()]].=== set_column_expand ===*  void '''set_column_expand''' '''(''' int column, bool expand ''')'''If {{Span|true}}, the column will have the "Expand" flag of [[Control GD|Control]]. Columns that have the "Expand" flag will use their "min_width" in a similar fashion to [[Control GD#size_flags_stretch_ratio|Control.size_flags_stretch_ratio()]].=== set_column_min_width ===*  void '''set_column_min_width''' '''(''' int column, int min_width ''')'''Sets the minimum width of a column. Columns that have the "Expand" flag will use their "min_width" in a similar fashion to [[Control GD#size_flags_stretch_ratio|Control.size_flags_stretch_ratio()]].=== set_column_title ===*  void '''set_column_title''' '''(''' int column, [[String GD|String]] title ''')'''Sets the title of a column.=== set_column_titles_visible ===*  void '''set_column_titles_visible''' '''(''' bool visible ''')'''If {{Span|true}}, column titles are visible.