__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Provides high-performance mesh instancing.== Description ==MultiMesh provides low-level mesh instancing. Drawing thousands of [[MeshInstance GD|MeshInstance]] nodes can be slow, since each object is submitted to the GPU then drawn individually.MultiMesh is much faster as it can draw thousands of instances with a single draw call, resulting in less API overhead.As a drawback, if the instances are too far away of each other, performance may be reduced as every single instance will always rendered (they are spatially indexed as one, for the whole object).Since instances may have any behavior, the AABB used for visibility must be provided by the user.== Tutorials ==*  :doc:`../tutorials/3d/vertex_animation/animating_thousands_of_fish`*  :doc:`../tutorials/optimization/using_multimesh`== Properties =={| class="wikitable | [[PackedFloat32Array GD|PackedFloat32Array]]|| [[#buffer|buffer]]|| {{Span|PackedFloat32Array(  )}} |-| [[PackedColorArray GD|PackedColorArray]]|| [[#color_array|color_array]]||                            |-| [[PackedColorArray GD|PackedColorArray]]|| [[#custom_data_array|custom_data_array]]||                            |-| int|| [[#instance_count|instance_count]]|| {{Span|0}}                      |-| [[Mesh GD|Mesh]]|| [[#mesh|mesh]]||                            |-| [[PackedVector2Array GD|PackedVector2Array]]|| [[#transform_2d_array|transform_2d_array]]||                            |-| [[PackedVector3Array GD|PackedVector3Array]]|| [[#transform_array|transform_array]]||                            |-| [[#TransformFormat|TransformFormat]]|| [[#transform_format|transform_format]]|| {{Span|0}}                      |-| bool|| [[#use_colors|use_colors]]|| {{Span|false}}                  |-| bool|| [[#use_custom_data|use_custom_data]]|| {{Span|false}}                  |-| int|| [[#visible_instance_count|visible_instance_count]]|| {{Span|-1}}                     |}== Methods =={| class="wikitable | [[AABB GD|AABB]]|| [[#get_aabb|get_aabb]] '''(''' ''')''' const                                                                                                             |-| [[Color GD|Color]]|| [[#get_instance_color|get_instance_color]] '''(''' int instance ''')''' const                                                          |-| [[Color GD|Color]]|| [[#get_instance_custom_data|get_instance_custom_data]] '''(''' int instance ''')''' const                                              |-| [[Transform GD|Transform]]|| [[#get_instance_transform|get_instance_transform]] '''(''' int instance ''')''' const                                                  |-| [[Transform2D GD|Transform2D]]|| [[#get_instance_transform_2d|get_instance_transform_2d]] '''(''' int instance ''')''' const                                            |-| void|| [[#set_instance_color|set_instance_color]] '''(''' int instance, [[Color GD|Color]] color ''')'''                               |-| void|| [[#set_instance_custom_data|set_instance_custom_data]] '''(''' int instance, [[Color GD|Color]] custom_data ''')'''             |-| void|| [[#set_instance_transform|set_instance_transform]] '''(''' int instance, [[Transform GD|Transform]] transform ''')'''           |-| void|| [[#set_instance_transform_2d|set_instance_transform_2d]] '''(''' int instance, [[Transform2D GD|Transform2D]] transform ''')''' |}== Enumerations ===== TransformFormat ====== TRANSFORM_2D ====== TRANSFORM_3D ===enum '''TransformFormat''':*  '''TRANSFORM_2D''' = '''0'''  Use this when using 2D transforms.*  '''TRANSFORM_3D''' = '''1'''  Use this when using 3D transforms.== Property Descriptions ===== buffer ===*  [[PackedFloat32Array GD|PackedFloat32Array]] '''buffer'''{| class="wikitable | ''Default''|| {{Span|PackedFloat32Array(  )}} |-| ''Setter''|| set_buffer(value)          |-| ''Getter''|| get_buffer()               |}=== color_array ===*  [[PackedColorArray GD|PackedColorArray]] '''color_array'''=== custom_data_array ===*  [[PackedColorArray GD|PackedColorArray]] '''custom_data_array'''=== instance_count ===*  int '''instance_count'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_instance_count(value) |-| ''Getter''|| get_instance_count()      |}Number of instances that will get drawn. This clears and (re)sizes the buffers. By default, all instances are drawn but you can limit this with [[#visible_instance_count|visible_instance_count]].=== mesh ===*  [[Mesh GD|Mesh]] '''mesh'''{| class="wikitable | ''Setter''|| set_mesh(value) |-| ''Getter''|| get_mesh()      |}Mesh to be drawn.=== transform_2d_array ===*  [[PackedVector2Array GD|PackedVector2Array]] '''transform_2d_array'''=== transform_array ===*  [[PackedVector3Array GD|PackedVector3Array]] '''transform_array'''=== transform_format ===*  [[#TransformFormat|TransformFormat]] '''transform_format'''{| class="wikitable | ''Default''|| {{Span|0}}                       |-| ''Setter''|| set_transform_format(value) |-| ''Getter''|| get_transform_format()      |}Format of transform used to transform mesh, either 2D or 3D.=== use_colors ===*  bool '''use_colors'''{| class="wikitable | ''Default''|| {{Span|false}}             |-| ''Setter''|| set_use_colors(value) |-| ''Getter''|| is_using_colors()     |}If {{Span|true}}, the {{Span|MultiMesh}} will use color data (see [[#color_array|color_array]]).=== use_custom_data ===*  bool '''use_custom_data'''{| class="wikitable | ''Default''|| {{Span|false}}                  |-| ''Setter''|| set_use_custom_data(value) |-| ''Getter''|| is_using_custom_data()     |}If {{Span|true}}, the {{Span|MultiMesh}} will use custom data (see [[#custom_data_array|custom_data_array]]).=== visible_instance_count ===*  int '''visible_instance_count'''{| class="wikitable | ''Default''|| {{Span|-1}}                            |-| ''Setter''|| set_visible_instance_count(value) |-| ''Getter''|| get_visible_instance_count()      |}Limits the number of instances drawn, -1 draws all instances. Changing this does not change the sizes of the buffers.== Method Descriptions ===== get_aabb ===*  [[AABB GD|AABB]] '''get_aabb ( )''' constReturns the visibility axis-aligned bounding box.=== get_instance_color ===*  [[Color GD|Color]] '''get_instance_color''' '''(''' int instance ''')''' constGets a specific instance's color.=== get_instance_custom_data ===*  [[Color GD|Color]] '''get_instance_custom_data''' '''(''' int instance ''')''' constReturns the custom data that has been set for a specific instance.=== get_instance_transform ===*  [[Transform GD|Transform]] '''get_instance_transform''' '''(''' int instance ''')''' constReturns the [[Transform GD|Transform]] of a specific instance.=== get_instance_transform_2d ===*  [[Transform2D GD|Transform2D]] '''get_instance_transform_2d''' '''(''' int instance ''')''' constReturns the [[Transform2D GD|Transform2D]] of a specific instance.=== set_instance_color ===*  void '''set_instance_color''' '''(''' int instance, [[Color GD|Color]] color ''')'''Sets the color of a specific instance.For the color to take effect, ensure that [[#use_colors|use_colors]] is {{Span|true}} on the {{Span|MultiMesh}} and [[BaseMaterial3D GD#vertex_color_use_as_albedo|BaseMaterial3D.vertex_color_use_as_albedo()]] is {{Span|true}} on the material.=== set_instance_custom_data ===*  void '''set_instance_custom_data''' '''(''' int instance, [[Color GD|Color]] custom_data ''')'''Sets custom data for a specific instance. Although [[Color GD|Color]] is used, it is just a container for 4 floating point numbers.For the custom data to be used, ensure that [[#use_custom_data|use_custom_data]] is {{Span|true}}.=== set_instance_transform ===*  void '''set_instance_transform''' '''(''' int instance, [[Transform GD|Transform]] transform ''')'''Sets the [[Transform GD|Transform]] for a specific instance.=== set_instance_transform_2d ===*  void '''set_instance_transform_2d''' '''(''' int instance, [[Transform2D GD|Transform2D]] transform ''')'''Sets the [[Transform2D GD|Transform2D]] for a specific instance.