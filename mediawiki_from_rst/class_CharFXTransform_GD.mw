__NOTOC__'''Inherits:''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Controls how an individual character will be displayed in a [[RichTextEffect GD|RichTextEffect]].== Description ==By setting various properties on this object, you can control how individual characters will be displayed in a [[RichTextEffect GD|RichTextEffect]].== Tutorials ==*  :doc:`../tutorials/gui/bbcode_in_richtextlabel`*  `https://github.com/Eoin-ONeill-Yokai/Godot-Rich-Text-Effect-Test-Project <https://github.com/Eoin-ONeill-Yokai/Godot-Rich-Text-Effect-Test-Project>`_== Properties =={| class="wikitable | int|| [[#absolute_index|absolute_index]]|| {{Span|0}}                   |-| int|| [[#character|character]]|| {{Span|0}}                   |-| [[Color GD|Color]]|| [[#color|color]]|| {{Span|Color( 0, 0, 0, 1 )}} |-| float|| [[#elapsed_time|elapsed_time]]|| {{Span|0.0}}                 |-| [[Dictionary GD|Dictionary]]|| [[#env|env]]|| {{Span|{}}}                  |-| [[Vector2 GD|Vector2]]|| [[#offset|offset]]|| {{Span|Vector2( 0, 0 )}}     |-| int|| [[#relative_index|relative_index]]|| {{Span|0}}                   |-| bool|| [[#visible|visible]]|| {{Span|true}}                |}== Property Descriptions ===== absolute_index ===*  int '''absolute_index'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_absolute_index(value) |-| ''Getter''|| get_absolute_index()      |}The index of the current character (starting from 0). Setting this property won't affect drawing.=== character ===*  int '''character'''{| class="wikitable | ''Default''|| {{Span|0}}                |-| ''Setter''|| set_character(value) |-| ''Getter''|| get_character()      |}The Unicode codepoint the character will use. This only affects non-whitespace characters. [[@GDScript GD#ord|@GDScript.ord()]] can be useful here. For example, the following will replace all characters with asterisks:::    # `char_fx` is the CharFXTransform parameter from `_process_custom_fx()`.    # See the RichTextEffect documentation for details.    char_fx.character = ord("*")=== color ===*  [[Color GD|Color]] '''color'''{| class="wikitable | ''Default''|| {{Span|Color( 0, 0, 0, 1 )}} |-| ''Setter''|| set_color(value)        |-| ''Getter''|| get_color()             |}The color the character will be drawn with.=== elapsed_time ===*  float '''elapsed_time'''{| class="wikitable | ''Default''|| {{Span|0.0}}                 |-| ''Setter''|| set_elapsed_time(value) |-| ''Getter''|| get_elapsed_time()      |}The time elapsed since the [[RichTextLabel GD|RichTextLabel]] was added to the scene tree (in seconds). Time stops when the project is paused, unless the [[RichTextLabel GD|RichTextLabel]]'s [[Node GD#pause_mode|Node.pause_mode()]] is set to [[Node GD#PAUSE_MODE_PROCESS|Node.PAUSE_MODE_PROCESS()]].'''Note:''' Time still passes while the [[RichTextLabel GD|RichTextLabel]] is hidden.=== env ===*  [[Dictionary GD|Dictionary]] '''env'''{| class="wikitable | ''Default''|| {{Span|{}}}                 |-| ''Setter''|| set_environment(value) |-| ''Getter''|| get_environment()      |}Contains the arguments passed in the opening BBCode tag. By default, arguments are strings; if their contents match a type such as bool, int or float, they will be converted automatically. Color codes in the form {{Span|#rrggbb}} or {{Span|#rgb}} will be converted to an opaque [[Color GD|Color]]. String arguments may not contain spaces, even if they're quoted. If present, quotes will also be present in the final string.For example, the opening BBCode tag {{Span|[example foo=hello bar=true baz=42 color=#ffffff]}} will map to the following [[Dictionary GD|Dictionary]]:::    {"foo": "hello", "bar": true, "baz": 42, "color": Color(1, 1, 1, 1)}=== offset ===*  [[Vector2 GD|Vector2]] '''offset'''{| class="wikitable | ''Default''|| {{Span|Vector2( 0, 0 )}} |-| ''Setter''|| set_offset(value)   |-| ''Getter''|| get_offset()        |}The position offset the character will be drawn with (in pixels).=== relative_index ===*  int '''relative_index'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_relative_index(value) |-| ''Getter''|| get_relative_index()      |}The index of the current character (starting from 0). Setting this property won't affect drawing.=== visible ===*  bool '''visible'''{| class="wikitable | ''Default''|| {{Span|true}}              |-| ''Setter''|| set_visibility(value) |-| ''Getter''|| is_visible()          |}If {{Span|true}}, the character will be drawn. If {{Span|false}}, the character will be hidden. Characters around hidden characters will reflow to take the space of hidden characters. If this is not desired, set their [[#color|color]] to {{Span|Color(1, 1, 1, 0)}} instead.