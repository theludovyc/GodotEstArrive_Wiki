__NOTOC__'''Inherits:''' [[Node2D GD|Node2D]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[Area2D GD|Area2D]], [[PhysicsBody2D GD|PhysicsBody2D]]Base node for 2D collision objects.== Description ==CollisionObject2D is the base class for 2D physics objects. It can hold any number of 2D collision [[Shape2D GD|Shape2D]]\ s. Each shape must be assigned to a *shape owner*. The CollisionObject2D can have any number of shape owners. Shape owners are not nodes and do not appear in the editor, but are accessible through code using the {{Span|shape_owner_*}} methods.== Properties =={| class="wikitable | bool|| [[#input_pickable|input_pickable]]|| {{Span|true}} |}== Methods =={| class="wikitable | void|| [[CollisionObject2D GD#_input_event|_input_event]] '''(''' [[Object GD|Object]] viewport, [[InputEvent GD|InputEvent]] event, int shape_idx ''')''' virtual |-| int|| [[#create_shape_owner|create_shape_owner]] '''(''' [[Object GD|Object]] owner ''')'''                                                                            |-| [[RID GD|RID]]|| [[#get_rid|get_rid]] '''(''' ''')''' const                                                                                                                              |-| float|| [[#get_shape_owner_one_way_collision_margin|get_shape_owner_one_way_collision_margin]] '''(''' int owner_id ''')''' const                             |-| [[Array GD|Array]]|| [[#get_shape_owners|get_shape_owners]] '''(''' ''')'''                                                                                                                  |-| bool|| [[#is_shape_owner_disabled|is_shape_owner_disabled]] '''(''' int owner_id ''')''' const                                                               |-| bool|| [[#is_shape_owner_one_way_collision_enabled|is_shape_owner_one_way_collision_enabled]] '''(''' int owner_id ''')''' const                             |-| void|| [[#remove_shape_owner|remove_shape_owner]] '''(''' int owner_id ''')'''                                                                               |-| int|| [[#shape_find_owner|shape_find_owner]] '''(''' int shape_index ''')''' const                                                                          |-| void|| [[#shape_owner_add_shape|shape_owner_add_shape]] '''(''' int owner_id, [[Shape2D GD|Shape2D]] shape ''')'''                                    |-| void|| [[#shape_owner_clear_shapes|shape_owner_clear_shapes]] '''(''' int owner_id ''')'''                                                                   |-| [[Object GD|Object]]|| [[#shape_owner_get_owner|shape_owner_get_owner]] '''(''' int owner_id ''')''' const                                                                   |-| [[Shape2D GD|Shape2D]]|| [[#shape_owner_get_shape|shape_owner_get_shape]] '''(''' int owner_id, int shape_id ''')''' const                                   |-| int|| [[#shape_owner_get_shape_count|shape_owner_get_shape_count]] '''(''' int owner_id ''')''' const                                                       |-| int|| [[#shape_owner_get_shape_index|shape_owner_get_shape_index]] '''(''' int owner_id, int shape_id ''')''' const                       |-| [[Transform2D GD|Transform2D]]|| [[#shape_owner_get_transform|shape_owner_get_transform]] '''(''' int owner_id ''')''' const                                                           |-| void|| [[#shape_owner_remove_shape|shape_owner_remove_shape]] '''(''' int owner_id, int shape_id ''')'''                                   |-| void|| [[#shape_owner_set_disabled|shape_owner_set_disabled]] '''(''' int owner_id, bool disabled ''')'''                                 |-| void|| [[#shape_owner_set_one_way_collision|shape_owner_set_one_way_collision]] '''(''' int owner_id, bool enable ''')'''                 |-| void|| [[#shape_owner_set_one_way_collision_margin|shape_owner_set_one_way_collision_margin]] '''(''' int owner_id, float margin ''')''' |-| void|| [[#shape_owner_set_transform|shape_owner_set_transform]] '''(''' int owner_id, [[Transform2D GD|Transform2D]] transform ''')'''                |}== Signals ===== input_event ===*  '''input_event''' '''(''' [[Node GD|Node]] viewport, [[InputEvent GD|InputEvent]] event, int shape_idx ''')'''Emitted when an input event occurs. Requires [[#input_pickable|input_pickable]] to be {{Span|true}} and at least one {{Span|collision_layer}} bit to be set. See [[CollisionObject2D GD#_input_event|_input_event]] for details.=== mouse_entered ===*  '''mouse_entered ( )'''Emitted when the mouse pointer enters any of this object's shapes. Requires [[#input_pickable|input_pickable]] to be {{Span|true}} and at least one {{Span|collision_layer}} bit to be set.=== mouse_exited ===*  '''mouse_exited ( )'''Emitted when the mouse pointer exits all this object's shapes. Requires [[#input_pickable|input_pickable]] to be {{Span|true}} and at least one {{Span|collision_layer}} bit to be set.== Property Descriptions ===== input_pickable ===*  bool '''input_pickable'''{| class="wikitable | ''Default''|| {{Span|true}}            |-| ''Setter''|| set_pickable(value) |-| ''Getter''|| is_pickable()       |}If {{Span|true}}, this object is pickable. A pickable object can detect the mouse pointer entering/leaving, and if the mouse is inside it, report input events. Requires at least one {{Span|collision_layer}} bit to be set.== Method Descriptions ===== _input_event ===*  void '''_input_event''' '''(''' [[Object GD|Object]] viewport, [[InputEvent GD|InputEvent]] event, int shape_idx ''')''' virtualAccepts unhandled [[InputEvent GD|InputEvent]]\ s. Requires [[#input_pickable|input_pickable]] to be {{Span|true}}. {{Span|shape_idx}} is the child index of the clicked [[Shape2D GD|Shape2D]]. Connect to the {{Span|input_event}} signal to easily pick up these events.=== create_shape_owner ===*  int '''create_shape_owner''' '''(''' [[Object GD|Object]] owner ''')'''Creates a new shape owner for the given object. Returns {{Span|owner_id}} of the new owner for future reference.=== get_rid ===*  [[RID GD|RID]] '''get_rid ( )''' constReturns the object's [[RID GD|RID]].=== get_shape_owner_one_way_collision_margin ===*  float '''get_shape_owner_one_way_collision_margin''' '''(''' int owner_id ''')''' constReturns the {{Span|one_way_collision_margin}} of the shape owner identified by given {{Span|owner_id}}.=== get_shape_owners ===*  [[Array GD|Array]] '''get_shape_owners ( )'''Returns an [[Array GD|Array]] of {{Span|owner_id}} identifiers. You can use these ids in other methods that take {{Span|owner_id}} as an argument.=== is_shape_owner_disabled ===*  bool '''is_shape_owner_disabled''' '''(''' int owner_id ''')''' constIf {{Span|true}}, the shape owner and its shapes are disabled.=== is_shape_owner_one_way_collision_enabled ===*  bool '''is_shape_owner_one_way_collision_enabled''' '''(''' int owner_id ''')''' constReturns {{Span|true}} if collisions for the shape owner originating from this {{Span|CollisionObject2D}} will not be reported to collided with {{Span|CollisionObject2D}}\ s.=== remove_shape_owner ===*  void '''remove_shape_owner''' '''(''' int owner_id ''')'''Removes the given shape owner.=== shape_find_owner ===*  int '''shape_find_owner''' '''(''' int shape_index ''')''' constReturns the {{Span|owner_id}} of the given shape.=== shape_owner_add_shape ===*  void '''shape_owner_add_shape''' '''(''' int owner_id, [[Shape2D GD|Shape2D]] shape ''')'''Adds a [[Shape2D GD|Shape2D]] to the shape owner.=== shape_owner_clear_shapes ===*  void '''shape_owner_clear_shapes''' '''(''' int owner_id ''')'''Removes all shapes from the shape owner.=== shape_owner_get_owner ===*  [[Object GD|Object]] '''shape_owner_get_owner''' '''(''' int owner_id ''')''' constReturns the parent object of the given shape owner.=== shape_owner_get_shape ===*  [[Shape2D GD|Shape2D]] '''shape_owner_get_shape''' '''(''' int owner_id, int shape_id ''')''' constReturns the [[Shape2D GD|Shape2D]] with the given id from the given shape owner.=== shape_owner_get_shape_count ===*  int '''shape_owner_get_shape_count''' '''(''' int owner_id ''')''' constReturns the number of shapes the given shape owner contains.=== shape_owner_get_shape_index ===*  int '''shape_owner_get_shape_index''' '''(''' int owner_id, int shape_id ''')''' constReturns the child index of the [[Shape2D GD|Shape2D]] with the given id from the given shape owner.=== shape_owner_get_transform ===*  [[Transform2D GD|Transform2D]] '''shape_owner_get_transform''' '''(''' int owner_id ''')''' constReturns the shape owner's [[Transform2D GD|Transform2D]].=== shape_owner_remove_shape ===*  void '''shape_owner_remove_shape''' '''(''' int owner_id, int shape_id ''')'''Removes a shape from the given shape owner.=== shape_owner_set_disabled ===*  void '''shape_owner_set_disabled''' '''(''' int owner_id, bool disabled ''')'''If {{Span|true}}, disables the given shape owner.=== shape_owner_set_one_way_collision ===*  void '''shape_owner_set_one_way_collision''' '''(''' int owner_id, bool enable ''')'''If {{Span|enable}} is {{Span|true}}, collisions for the shape owner originating from this {{Span|CollisionObject2D}} will not be reported to collided with {{Span|CollisionObject2D}}\ s.=== shape_owner_set_one_way_collision_margin ===*  void '''shape_owner_set_one_way_collision_margin''' '''(''' int owner_id, float margin ''')'''Sets the {{Span|one_way_collision_margin}} of the shape owner identified by given {{Span|owner_id}} to {{Span|margin}} pixels.=== shape_owner_set_transform ===*  void '''shape_owner_set_transform''' '''(''' int owner_id, [[Transform2D GD|Transform2D]] transform ''')'''Sets the [[Transform2D GD|Transform2D]] of the given shape owner.