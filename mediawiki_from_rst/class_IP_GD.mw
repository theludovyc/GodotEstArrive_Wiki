__NOTOC__'''Inherits:''' [[Object GD|Object]]'''Inherited By:''' [[IP_Unix GD|IP_Unix]]Internet protocol (IP) support functions such as DNS resolution.== Description ==IP contains support functions for the Internet Protocol (IP). TCP/IP support is in different classes (see [[StreamPeerTCP GD|StreamPeerTCP]] and [[TCP_Server GD|TCP_Server]]). IP provides DNS hostname resolution support, both blocking and threaded.== Methods =={| class="wikitable | void|| [[#clear_cache|clear_cache]] '''(''' [[String GD|String]] hostname="" ''')'''                                                               |-| void|| [[#erase_resolve_item|erase_resolve_item]] '''(''' int id ''')'''                                                                |-| [[Array GD|Array]]|| [[#get_local_addresses|get_local_addresses]] '''(''' ''')''' const                                                                                 |-| [[Array GD|Array]]|| [[#get_local_interfaces|get_local_interfaces]] '''(''' ''')''' const                                                                               |-| [[String GD|String]]|| [[#get_resolve_item_address|get_resolve_item_address]] '''(''' int id ''')''' const                                              |-| [[#ResolverStatus|ResolverStatus]]|| [[#get_resolve_item_status|get_resolve_item_status]] '''(''' int id ''')''' const                                                |-| [[String GD|String]]|| [[#resolve_hostname|resolve_hostname]] '''(''' [[String GD|String]] host, [[#Type|Type]] ip_type=3 ''')'''                       |-| int|| [[#resolve_hostname_queue_item|resolve_hostname_queue_item]] '''(''' [[String GD|String]] host, [[#Type|Type]] ip_type=3 ''')''' |}== Enumerations ===== ResolverStatus ====== RESOLVER_STATUS_NONE ====== RESOLVER_STATUS_WAITING ====== RESOLVER_STATUS_DONE ====== RESOLVER_STATUS_ERROR ===enum '''ResolverStatus''':*  '''RESOLVER_STATUS_NONE''' = '''0'''  DNS hostname resolver status: No status.*  '''RESOLVER_STATUS_WAITING''' = '''1'''  DNS hostname resolver status: Waiting.*  '''RESOLVER_STATUS_DONE''' = '''2'''  DNS hostname resolver status: Done.*  '''RESOLVER_STATUS_ERROR''' = '''3'''  DNS hostname resolver status: Error.=== Type ====== TYPE_NONE ====== TYPE_IPV4 ====== TYPE_IPV6 ====== TYPE_ANY ===enum '''Type''':*  '''TYPE_NONE''' = '''0'''  Address type: None.*  '''TYPE_IPV4''' = '''1'''  Address type: Internet protocol version 4 (IPv4).*  '''TYPE_IPV6''' = '''2'''  Address type: Internet protocol version 6 (IPv6).*  '''TYPE_ANY''' = '''3'''  Address type: Any.== Constants ===== RESOLVER_MAX_QUERIES ====== RESOLVER_INVALID_ID ===*  '''RESOLVER_MAX_QUERIES''' = '''32'''  Maximum number of concurrent DNS resolver queries allowed, [[IP GD#RESOLVER_INVALID_ID|RESOLVER_INVALID_ID]] is returned if exceeded.*  '''RESOLVER_INVALID_ID''' = '''-1'''  Invalid ID constant. Returned if [[IP GD#RESOLVER_MAX_QUERIES|RESOLVER_MAX_QUERIES]] is exceeded.== Method Descriptions ===== clear_cache ===*  void '''clear_cache''' '''(''' [[String GD|String]] hostname="" ''')'''Removes all of a {{Span|hostname}}'s cached references. If no {{Span|hostname}} is given, all cached IP addresses are removed.=== erase_resolve_item ===*  void '''erase_resolve_item''' '''(''' int id ''')'''Removes a given item {{Span|id}} from the queue. This should be used to free a queue after it has completed to enable more queries to happen.=== get_local_addresses ===*  [[Array GD|Array]] '''get_local_addresses ( )''' constReturns all of the user's current IPv4 and IPv6 addresses as an array.=== get_local_interfaces ===*  [[Array GD|Array]] '''get_local_interfaces ( )''' constReturns all network adapters as an array.Each adapter is a dictionary of the form:::    {        "index": "1", # Interface index.        "name": "eth0", # Interface name.        "friendly": "Ethernet One", # A friendly name (might be empty).        "addresses": ["192.168.1.101"], # An array of IP addresses associated to this interface.    }=== get_resolve_item_address ===*  [[String GD|String]] '''get_resolve_item_address''' '''(''' int id ''')''' constReturns a queued hostname's IP address, given its queue {{Span|id}}. Returns an empty string on error or if resolution hasn't happened yet (see [[#get_resolve_item_status|get_resolve_item_status]]).=== get_resolve_item_status ===*  [[#ResolverStatus|ResolverStatus]] '''get_resolve_item_status''' '''(''' int id ''')''' constReturns a queued hostname's status as a [[#ResolverStatus|ResolverStatus]] constant, given its queue {{Span|id}}.=== resolve_hostname ===*  [[String GD|String]] '''resolve_hostname''' '''(''' [[String GD|String]] host, [[#Type|Type]] ip_type=3 ''')'''Returns a given hostname's IPv4 or IPv6 address when resolved (blocking-type method). The address type returned depends on the [[#Type|Type]] constant given as {{Span|ip_type}}.=== resolve_hostname_queue_item ===*  int '''resolve_hostname_queue_item''' '''(''' [[String GD|String]] host, [[#Type|Type]] ip_type=3 ''')'''Creates a queue item to resolve a hostname to an IPv4 or IPv6 address depending on the [[#Type|Type]] constant given as {{Span|ip_type}}. Returns the queue ID if successful, or [[IP GD#RESOLVER_INVALID_ID|RESOLVER_INVALID_ID]] on error.