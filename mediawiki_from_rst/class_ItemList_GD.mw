__NOTOC__'''Inherits:''' [[Control GD|Control]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Control that provides a list of selectable items (and/or icons) in a single column, or optionally in multiple columns.== Description ==This control provides a selectable list of items that may be in a single (or multiple columns) with option of text, icons, or both text and icon. Tooltips are supported and may be different for every item in the list.Selectable items in the list may be selected or deselected and multiple selection may be enabled. Selection with right mouse button may also be enabled to allow use of popup context menus. Items may also be "activated" by double-clicking them or by pressing Enter.Item text only supports single-line strings, newline characters (e.g. {{Span|\n}}) in the string won't produce a newline. Text wrapping is enabled in [[ItemList GD#ICON_MODE_TOP|ICON_MODE_TOP]] mode, but column's width is adjusted to fully fit its content by default. You need to set [[#fixed_column_width|fixed_column_width]] greater than zero to wrap the text.== Properties =={| class="wikitable | bool|| [[#allow_reselect|allow_reselect]]|| {{Span|false}}           |-| bool|| [[#allow_rmb_select|allow_rmb_select]]|| {{Span|false}}           |-| bool|| [[#auto_height|auto_height]]|| {{Span|false}}           |-| int|| [[#fixed_column_width|fixed_column_width]]|| {{Span|0}}               |-| [[Vector2 GD|Vector2]]|| [[#fixed_icon_size|fixed_icon_size]]|| {{Span|Vector2( 0, 0 )}} |-| [[#FocusMode|FocusMode]]|| focus_mode|| {{Span|2}} (parent override)        |-| [[#IconMode|IconMode]]|| [[#icon_mode|icon_mode]]|| {{Span|1}}               |-| float|| [[#icon_scale|icon_scale]]|| {{Span|1.0}}             |-| int|| [[#max_columns|max_columns]]|| {{Span|1}}               |-| int|| [[#max_text_lines|max_text_lines]]|| {{Span|1}}               |-| bool|| rect_clip_content|| {{Span|true}} (parent override)     |-| bool|| [[#same_column_width|same_column_width]]|| {{Span|false}}           |-| [[#SelectMode|SelectMode]]|| [[#select_mode|select_mode]]|| {{Span|0}}               |}== Methods =={| class="wikitable | void|| [[#add_icon_item|add_icon_item]] '''(''' [[Texture2D GD|Texture2D]] icon, bool selectable=true ''')'''                              |-| void|| [[#add_item|add_item]] '''(''' [[String GD|String]] text, [[Texture2D GD|Texture2D]] icon=null, bool selectable=true ''')''' |-| void|| [[#clear|clear]] '''(''' ''')'''                                                                                                                              |-| void|| [[#ensure_current_is_visible|ensure_current_is_visible]] '''(''' ''')'''                                                                                      |-| int|| [[#get_item_at_position|get_item_at_position]] '''(''' [[Vector2 GD|Vector2]] position, bool exact=false ''')''' const              |-| int|| [[#get_item_count|get_item_count]] '''(''' ''')''' const                                                                                                      |-| [[Color GD|Color]]|| [[#get_item_custom_bg_color|get_item_custom_bg_color]] '''(''' int idx ''')''' const                                                        |-| [[Color GD|Color]]|| [[#get_item_custom_fg_color|get_item_custom_fg_color]] '''(''' int idx ''')''' const                                                        |-| [[Texture2D GD|Texture2D]]|| [[#get_item_icon|get_item_icon]] '''(''' int idx ''')''' const                                                                              |-| [[Color GD|Color]]|| [[#get_item_icon_modulate|get_item_icon_modulate]] '''(''' int idx ''')''' const                                                            |-| [[Rect2 GD|Rect2]]|| [[#get_item_icon_region|get_item_icon_region]] '''(''' int idx ''')''' const                                                                |-| [[Variant GD|Variant]]|| [[#get_item_metadata|get_item_metadata]] '''(''' int idx ''')''' const                                                                      |-| [[String GD|String]]|| [[#get_item_text|get_item_text]] '''(''' int idx ''')''' const                                                                              |-| [[String GD|String]]|| [[#get_item_tooltip|get_item_tooltip]] '''(''' int idx ''')''' const                                                                        |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#get_selected_items|get_selected_items]] '''(''' ''')'''                                                                                                    |-| [[VScrollBar GD|VScrollBar]]|| [[#get_v_scroll|get_v_scroll]] '''(''' ''')'''                                                                                                                |-| bool|| [[#is_anything_selected|is_anything_selected]] '''(''' ''')'''                                                                                                |-| bool|| [[#is_item_disabled|is_item_disabled]] '''(''' int idx ''')''' const                                                                        |-| bool|| [[#is_item_icon_transposed|is_item_icon_transposed]] '''(''' int idx ''')''' const                                                          |-| bool|| [[#is_item_selectable|is_item_selectable]] '''(''' int idx ''')''' const                                                                    |-| bool|| [[#is_item_tooltip_enabled|is_item_tooltip_enabled]] '''(''' int idx ''')''' const                                                          |-| bool|| [[#is_selected|is_selected]] '''(''' int idx ''')''' const                                                                                  |-| void|| [[#move_item|move_item]] '''(''' int from_idx, int to_idx ''')'''                                                         |-| void|| [[#remove_item|remove_item]] '''(''' int idx ''')'''                                                                                        |-| void|| [[#select|select]] '''(''' int idx, bool single=true ''')'''                                                             |-| void|| [[#set_item_custom_bg_color|set_item_custom_bg_color]] '''(''' int idx, [[Color GD|Color]] custom_bg_color ''')'''                   |-| void|| [[#set_item_custom_fg_color|set_item_custom_fg_color]] '''(''' int idx, [[Color GD|Color]] custom_fg_color ''')'''                   |-| void|| [[#set_item_disabled|set_item_disabled]] '''(''' int idx, bool disabled ''')'''                                          |-| void|| [[#set_item_icon|set_item_icon]] '''(''' int idx, [[Texture2D GD|Texture2D]] icon ''')'''                                            |-| void|| [[#set_item_icon_modulate|set_item_icon_modulate]] '''(''' int idx, [[Color GD|Color]] modulate ''')'''                              |-| void|| [[#set_item_icon_region|set_item_icon_region]] '''(''' int idx, [[Rect2 GD|Rect2]] rect ''')'''                                      |-| void|| [[#set_item_icon_transposed|set_item_icon_transposed]] '''(''' int idx, bool transposed ''')'''                          |-| void|| [[#set_item_metadata|set_item_metadata]] '''(''' int idx, [[Variant GD|Variant]] metadata ''')'''                                    |-| void|| [[#set_item_selectable|set_item_selectable]] '''(''' int idx, bool selectable ''')'''                                    |-| void|| [[#set_item_text|set_item_text]] '''(''' int idx, [[String GD|String]] text ''')'''                                                  |-| void|| [[#set_item_tooltip|set_item_tooltip]] '''(''' int idx, [[String GD|String]] tooltip ''')'''                                         |-| void|| [[#set_item_tooltip_enabled|set_item_tooltip_enabled]] '''(''' int idx, bool enable ''')'''                              |-| void|| [[#sort_items_by_text|sort_items_by_text]] '''(''' ''')'''                                                                                                    |-| void|| [[#unselect|unselect]] '''(''' int idx ''')'''                                                                                              |-| void|| [[#unselect_all|unselect_all]] '''(''' ''')'''                                                                                                                |}== Theme Properties =={| class="wikitable | [[StyleBox GD|StyleBox]]|| bg||                              |-| [[StyleBox GD|StyleBox]]|| bg_focus||                              |-| [[StyleBox GD|StyleBox]]|| cursor||                              |-| [[StyleBox GD|StyleBox]]|| cursor_unfocused||                              |-| [[Font GD|Font]]|| font||                              |-| [[Color GD|Color]]|| font_color|| Color( 0.63, 0.63, 0.63, 1 ) |-| [[Color GD|Color]]|| font_color_selected|| Color( 1, 1, 1, 1 )          |-| [[Color GD|Color]]|| guide_color|| Color( 0, 0, 0, 0.1 )        |-| int|| hseparation|| 4                            |-| int|| icon_margin|| 4                            |-| int|| line_separation|| 2                            |-| [[StyleBox GD|StyleBox]]|| selected||                              |-| [[StyleBox GD|StyleBox]]|| selected_focus||                              |-| int|| vseparation|| 2                            |}== Signals ===== item_activated ===*  '''item_activated''' '''(''' int index ''')'''Triggered when specified list item is activated via double-clicking or by pressing Enter.=== item_rmb_selected ===*  '''item_rmb_selected''' '''(''' int index, [[Vector2 GD|Vector2]] at_position ''')'''Triggered when specified list item has been selected via right mouse clicking.The click position is also provided to allow appropriate popup of context menus at the correct location.[[#allow_rmb_select|allow_rmb_select]] must be enabled.=== item_selected ===*  '''item_selected''' '''(''' int index ''')'''Triggered when specified item has been selected.[[#allow_reselect|allow_reselect]] must be enabled to reselect an item.=== multi_selected ===*  '''multi_selected''' '''(''' int index, bool selected ''')'''Triggered when a multiple selection is altered on a list allowing multiple selection.=== nothing_selected ===*  '''nothing_selected ( )'''Triggered when a left mouse click is issued within the rect of the list but on empty space.=== rmb_clicked ===*  '''rmb_clicked''' '''(''' [[Vector2 GD|Vector2]] at_position ''')'''Triggered when a right mouse click is issued within the rect of the list but on empty space.[[#allow_rmb_select|allow_rmb_select]] must be enabled.== Enumerations ===== IconMode ====== ICON_MODE_TOP ====== ICON_MODE_LEFT ===enum '''IconMode''':*  '''ICON_MODE_TOP''' = '''0'''  Icon is drawn above the text.*  '''ICON_MODE_LEFT''' = '''1'''  Icon is drawn to the left of the text.=== SelectMode ====== SELECT_SINGLE ====== SELECT_MULTI ===enum '''SelectMode''':*  '''SELECT_SINGLE''' = '''0'''  Only allow selecting a single item.*  '''SELECT_MULTI''' = '''1'''  Allows selecting multiple items by holding Ctrl or Shift.== Property Descriptions ===== allow_reselect ===*  bool '''allow_reselect'''{| class="wikitable | ''Default''|| {{Span|false}}                 |-| ''Setter''|| set_allow_reselect(value) |-| ''Getter''|| get_allow_reselect()      |}If {{Span|true}}, the currently selected item can be selected again.=== allow_rmb_select ===*  bool '''allow_rmb_select'''{| class="wikitable | ''Default''|| {{Span|false}}                   |-| ''Setter''|| set_allow_rmb_select(value) |-| ''Getter''|| get_allow_rmb_select()      |}If {{Span|true}}, right mouse button click can select items.=== auto_height ===*  bool '''auto_height'''{| class="wikitable | ''Default''|| {{Span|false}}              |-| ''Setter''|| set_auto_height(value) |-| ''Getter''|| has_auto_height()      |}If {{Span|true}}, the control will automatically resize the height to fit its content.=== fixed_column_width ===*  int '''fixed_column_width'''{| class="wikitable | ''Default''|| {{Span|0}}                         |-| ''Setter''|| set_fixed_column_width(value) |-| ''Getter''|| get_fixed_column_width()      |}The width all columns will be adjusted to.A value of zero disables the adjustment, each item will have a width equal to the width of its content and the columns will have an uneven width.=== fixed_icon_size ===*  [[Vector2 GD|Vector2]] '''fixed_icon_size'''{| class="wikitable | ''Default''|| {{Span|Vector2( 0, 0 )}}        |-| ''Setter''|| set_fixed_icon_size(value) |-| ''Getter''|| get_fixed_icon_size()      |}The size all icons will be adjusted to.If either X or Y component is not greater than zero, icon size won't be affected.=== icon_mode ===*  [[#IconMode|IconMode]] '''icon_mode'''{| class="wikitable | ''Default''|| {{Span|1}}                |-| ''Setter''|| set_icon_mode(value) |-| ''Getter''|| get_icon_mode()      |}The icon position, whether above or to the left of the text. See the [[#IconMode|IconMode]] constants.=== icon_scale ===*  float '''icon_scale'''{| class="wikitable | ''Default''|| {{Span|1.0}}               |-| ''Setter''|| set_icon_scale(value) |-| ''Getter''|| get_icon_scale()      |}The scale of icon applied after [[#fixed_icon_size|fixed_icon_size]] and transposing takes effect.=== max_columns ===*  int '''max_columns'''{| class="wikitable | ''Default''|| {{Span|1}}                  |-| ''Setter''|| set_max_columns(value) |-| ''Getter''|| get_max_columns()      |}Maximum columns the list will have.If greater than zero, the content will be split among the specified columns.A value of zero means unlimited columns, i.e. all items will be put in the same row.=== max_text_lines ===*  int '''max_text_lines'''{| class="wikitable | ''Default''|| {{Span|1}}                     |-| ''Setter''|| set_max_text_lines(value) |-| ''Getter''|| get_max_text_lines()      |}Maximum lines of text allowed in each item. Space will be reserved even when there is not enough lines of text to display.'''Note:''' This property takes effect only when [[#icon_mode|icon_mode]] is [[ItemList GD#ICON_MODE_TOP|ICON_MODE_TOP]]. To make the text wrap, [[#fixed_column_width|fixed_column_width]] should be greater than zero.=== same_column_width ===*  bool '''same_column_width'''{| class="wikitable | ''Default''|| {{Span|false}}                    |-| ''Setter''|| set_same_column_width(value) |-| ''Getter''|| is_same_column_width()       |}Whether all columns will have the same width.If {{Span|true}}, the width is equal to the largest column width of all columns.=== select_mode ===*  [[#SelectMode|SelectMode]] '''select_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                  |-| ''Setter''|| set_select_mode(value) |-| ''Getter''|| get_select_mode()      |}Allows single or multiple item selection. See the [[#SelectMode|SelectMode]] constants.== Method Descriptions ===== add_icon_item ===*  void '''add_icon_item''' '''(''' [[Texture2D GD|Texture2D]] icon, bool selectable=true ''')'''Adds an item to the item list with no text, only an icon.=== add_item ===*  void '''add_item''' '''(''' [[String GD|String]] text, [[Texture2D GD|Texture2D]] icon=null, bool selectable=true ''')'''Adds an item to the item list with specified text. Specify an {{Span|icon}}, or use {{Span|null}} as the {{Span|icon}} for a list item with no icon.If selectable is {{Span|true}}, the list item will be selectable.=== clear ===*  void '''clear ( )'''Removes all items from the list.=== ensure_current_is_visible ===*  void '''ensure_current_is_visible ( )'''Ensure current selection is visible, adjusting the scroll position as necessary.=== get_item_at_position ===*  int '''get_item_at_position''' '''(''' [[Vector2 GD|Vector2]] position, bool exact=false ''')''' constReturns the item index at the given {{Span|position}}.When there is no item at that point, -1 will be returned if {{Span|exact}} is {{Span|true}}, and the closest item index will be returned otherwise.=== get_item_count ===*  int '''get_item_count ( )''' constReturns the number of items currently in the list.=== get_item_custom_bg_color ===*  [[Color GD|Color]] '''get_item_custom_bg_color''' '''(''' int idx ''')''' constReturns the custom background color of the item specified by {{Span|idx}} index.=== get_item_custom_fg_color ===*  [[Color GD|Color]] '''get_item_custom_fg_color''' '''(''' int idx ''')''' constReturns the custom foreground color of the item specified by {{Span|idx}} index.=== get_item_icon ===*  [[Texture2D GD|Texture2D]] '''get_item_icon''' '''(''' int idx ''')''' constReturns the icon associated with the specified index.=== get_item_icon_modulate ===*  [[Color GD|Color]] '''get_item_icon_modulate''' '''(''' int idx ''')''' constReturns a [[Color GD|Color]] modulating item's icon at the specified index.=== get_item_icon_region ===*  [[Rect2 GD|Rect2]] '''get_item_icon_region''' '''(''' int idx ''')''' constReturns the region of item's icon used. The whole icon will be used if the region has no area.=== get_item_metadata ===*  [[Variant GD|Variant]] '''get_item_metadata''' '''(''' int idx ''')''' constReturns the metadata value of the specified index.=== get_item_text ===*  [[String GD|String]] '''get_item_text''' '''(''' int idx ''')''' constReturns the text associated with the specified index.=== get_item_tooltip ===*  [[String GD|String]] '''get_item_tooltip''' '''(''' int idx ''')''' constReturns the tooltip hint associated with the specified index.=== get_selected_items ===*  [[PackedInt32Array GD|PackedInt32Array]] '''get_selected_items ( )'''Returns an array with the indexes of the selected items.=== get_v_scroll ===*  [[VScrollBar GD|VScrollBar]] '''get_v_scroll ( )'''Returns the [[Object GD|Object]] ID associated with the list.=== is_anything_selected ===*  bool '''is_anything_selected ( )'''Returns {{Span|true}} if one or more items are selected.=== is_item_disabled ===*  bool '''is_item_disabled''' '''(''' int idx ''')''' constReturns {{Span|true}} if the item at the specified index is disabled.=== is_item_icon_transposed ===*  bool '''is_item_icon_transposed''' '''(''' int idx ''')''' constReturns {{Span|true}} if the item icon will be drawn transposed, i.e. the X and Y axes are swapped.=== is_item_selectable ===*  bool '''is_item_selectable''' '''(''' int idx ''')''' constReturns {{Span|true}} if the item at the specified index is selectable.=== is_item_tooltip_enabled ===*  bool '''is_item_tooltip_enabled''' '''(''' int idx ''')''' constReturns {{Span|true}} if the tooltip is enabled for specified item index.=== is_selected ===*  bool '''is_selected''' '''(''' int idx ''')''' constReturns {{Span|true}} if the item at the specified index is currently selected.=== move_item ===*  void '''move_item''' '''(''' int from_idx, int to_idx ''')'''Moves item from index {{Span|from_idx}} to {{Span|to_idx}}.=== remove_item ===*  void '''remove_item''' '''(''' int idx ''')'''Removes the item specified by {{Span|idx}} index from the list.=== select ===*  void '''select''' '''(''' int idx, bool single=true ''')'''Select the item at the specified index.'''Note:''' This method does not trigger the item selection signal.=== set_item_custom_bg_color ===*  void '''set_item_custom_bg_color''' '''(''' int idx, [[Color GD|Color]] custom_bg_color ''')'''Sets the background color of the item specified by {{Span|idx}} index to the specified [[Color GD|Color]].::    var some_string = "Some text"    some_string.set_item_custom_bg_color(0,Color(1, 0, 0, 1) # This will set the background color of the first item of the control to red.=== set_item_custom_fg_color ===*  void '''set_item_custom_fg_color''' '''(''' int idx, [[Color GD|Color]] custom_fg_color ''')'''Sets the foreground color of the item specified by {{Span|idx}} index to the specified [[Color GD|Color]].::    var some_string = "Some text"    some_string.set_item_custom_fg_color(0,Color(1, 0, 0, 1) # This will set the foreground color of the first item of the control to red.=== set_item_disabled ===*  void '''set_item_disabled''' '''(''' int idx, bool disabled ''')'''Disables (or enables) the item at the specified index.Disabled items cannot be selected and do not trigger activation signals (when double-clicking or pressing Enter).=== set_item_icon ===*  void '''set_item_icon''' '''(''' int idx, [[Texture2D GD|Texture2D]] icon ''')'''Sets (or replaces) the icon's [[Texture2D GD|Texture2D]] associated with the specified index.=== set_item_icon_modulate ===*  void '''set_item_icon_modulate''' '''(''' int idx, [[Color GD|Color]] modulate ''')'''Sets a modulating [[Color GD|Color]] of the item associated with the specified index.=== set_item_icon_region ===*  void '''set_item_icon_region''' '''(''' int idx, [[Rect2 GD|Rect2]] rect ''')'''Sets the region of item's icon used. The whole icon will be used if the region has no area.=== set_item_icon_transposed ===*  void '''set_item_icon_transposed''' '''(''' int idx, bool transposed ''')'''Sets whether the item icon will be drawn transposed.=== set_item_metadata ===*  void '''set_item_metadata''' '''(''' int idx, [[Variant GD|Variant]] metadata ''')'''Sets a value (of any type) to be stored with the item associated with the specified index.=== set_item_selectable ===*  void '''set_item_selectable''' '''(''' int idx, bool selectable ''')'''Allows or disallows selection of the item associated with the specified index.=== set_item_text ===*  void '''set_item_text''' '''(''' int idx, [[String GD|String]] text ''')'''Sets text of the item associated with the specified index.=== set_item_tooltip ===*  void '''set_item_tooltip''' '''(''' int idx, [[String GD|String]] tooltip ''')'''Sets the tooltip hint for the item associated with the specified index.=== set_item_tooltip_enabled ===*  void '''set_item_tooltip_enabled''' '''(''' int idx, bool enable ''')'''Sets whether the tooltip hint is enabled for specified item index.=== sort_items_by_text ===*  void '''sort_items_by_text ( )'''Sorts items in the list by their text.=== unselect ===*  void '''unselect''' '''(''' int idx ''')'''Ensures the item associated with the specified index is not selected.=== unselect_all ===*  void '''unselect_all ( )'''Ensures there are no items selected.