__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]An abstraction of a serialized scene.== Description ==A simplified interface to a scene file. Provides access to operations and checks that can be performed on the scene resource itself.Can be used to save a node to a file. When saving, the node as well as all the node it owns get saved (see {{Span|owner}} property on [[Node GD|Node]]).'''Note:''' The node doesn't need to own itself.'''Example of saving a node with different owners:''' The following example creates 3 objects: {{Span|Node2D}} ({{Span|node}}), {{Span|RigidBody2D}} ({{Span|rigid}}) and {{Span|CollisionObject2D}} ({{Span|collision}}). {{Span|collision}} is a child of {{Span|rigid}} which is a child of {{Span|node}}. Only {{Span|rigid}} is owned by {{Span|node}} and {{Span|pack}} will therefore only save those two nodes, but not {{Span|collision}}.::    # Create the objects    var node = Node2D.new()    var rigid = RigidBody2D.new()    var collision = CollisionShape2D.new()        # Create the object hierarchy    rigid.add_child(collision)    node.add_child(rigid)        # Change owner of rigid, but not of collision    rigid.owner = node        var scene = PackedScene.new()    # Only node and rigid are now packed    var result = scene.pack(node)    if result == OK:        ResourceSaver.save("res://path/name.scn", scene) # Or "user://..."== Properties =={| class="wikitable | [[Dictionary GD|Dictionary]]|| [[#_bundled|_bundled]]|| {{Span|{"conn_count": 0,"conns": PackedInt32Array(  ),"editable_instances": [  ],"names": PackedStringArray(  ),"node_count": 0,"node_paths": [  ],"nodes": PackedInt32Array(  ),"variants": [  ],"version": 2}}} |}== Methods =={| class="wikitable | bool|| [[#can_instance|can_instance]] '''(''' ''')''' const                                                         |-| [[SceneState GD|SceneState]]|| [[#get_state|get_state]] '''(''' ''')'''                                                                     |-| [[Node GD|Node]]|| [[#instance|instance]] '''(''' [[#GenEditState|GenEditState]] edit_state=0 ''')''' const |-| [[@GlobalScope GD#Error|Error]]|| [[#pack|pack]] '''(''' [[Node GD|Node]] path ''')'''                                                  |}== Enumerations ===== GenEditState ====== GEN_EDIT_STATE_DISABLED ====== GEN_EDIT_STATE_INSTANCE ====== GEN_EDIT_STATE_MAIN ===enum '''GenEditState''':*  '''GEN_EDIT_STATE_DISABLED''' = '''0'''  If passed to [[#instance|instance]], blocks edits to the scene state.*  '''GEN_EDIT_STATE_INSTANCE''' = '''1'''  If passed to [[#instance|instance]], provides local scene resources to the local scene.'''Note:''' Only available in editor builds.*  '''GEN_EDIT_STATE_MAIN''' = '''2'''  If passed to [[#instance|instance]], provides local scene resources to the local scene. Only the main scene should receive the main edit state.'''Note:''' Only available in editor builds.== Property Descriptions ===== _bundled ===*  [[Dictionary GD|Dictionary]] '''_bundled'''{| class="wikitable | ''Default''|| {{Span|{"conn_count": 0,"conns": PackedInt32Array(  ),"editable_instances": [  ],"names": PackedStringArray(  ),"node_count": 0,"node_paths": [  ],"nodes": PackedInt32Array(  ),"variants": [  ],"version": 2}}} |}A dictionary representation of the scene contents.Available keys include "rnames" and "variants" for resources, "node_count", "nodes", "node_paths" for nodes, "editable_instances" for base scene children overrides, "conn_count" and "conns" for signal connections, and "version" for the format style of the PackedScene.== Method Descriptions ===== can_instance ===*  bool '''can_instance ( )''' constReturns {{Span|true}} if the scene file has nodes.=== get_state ===*  [[SceneState GD|SceneState]] '''get_state ( )'''Returns the {{Span|SceneState}} representing the scene file contents.=== instance ===*  [[Node GD|Node]] '''instance''' '''(''' [[#GenEditState|GenEditState]] edit_state=0 ''')''' constInstantiates the scene's node hierarchy. Triggers child scene instantiation(s). Triggers a [[Node GD#NOTIFICATION_INSTANCED|Node.NOTIFICATION_INSTANCED()]] notification on the root node.=== pack ===*  [[@GlobalScope GD#Error|Error]] '''pack''' '''(''' [[Node GD|Node]] path ''')'''Pack will ignore any sub-nodes not owned by given node. See [[Node GD#owner|Node.owner()]].