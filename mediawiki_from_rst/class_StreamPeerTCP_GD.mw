__NOTOC__'''Inherits:''' [[StreamPeer GD|StreamPeer]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]TCP stream peer.== Description ==TCP stream peer. This object can be used to connect to TCP servers, or also is returned by a TCP server.== Methods =={| class="wikitable | [[@GlobalScope GD#Error|Error]]|| [[#connect_to_host|connect_to_host]] '''(''' [[String GD|String]] host, int port ''')''' |-| void|| [[#disconnect_from_host|disconnect_from_host]] '''(''' ''')'''                                                    |-| [[String GD|String]]|| [[#get_connected_host|get_connected_host]] '''(''' ''')''' const                                                  |-| int|| [[#get_connected_port|get_connected_port]] '''(''' ''')''' const                                                  |-| [[#Status|Status]]|| [[#get_status|get_status]] '''(''' ''')'''                                                                        |-| bool|| [[#is_connected_to_host|is_connected_to_host]] '''(''' ''')''' const                                              |-| void|| [[#set_no_delay|set_no_delay]] '''(''' bool enabled ''')'''                                    |}== Enumerations ===== Status ====== STATUS_NONE ====== STATUS_CONNECTING ====== STATUS_CONNECTED ====== STATUS_ERROR ===enum '''Status''':*  '''STATUS_NONE''' = '''0'''  The initial status of the {{Span|StreamPeerTCP}}. This is also the status after disconnecting.*  '''STATUS_CONNECTING''' = '''1'''  A status representing a {{Span|StreamPeerTCP}} that is connecting to a host.*  '''STATUS_CONNECTED''' = '''2'''  A status representing a {{Span|StreamPeerTCP}} that is connected to a host.*  '''STATUS_ERROR''' = '''3'''  A status representing a {{Span|StreamPeerTCP}} in error state.== Method Descriptions ===== connect_to_host ===*  [[@GlobalScope GD#Error|Error]] '''connect_to_host''' '''(''' [[String GD|String]] host, int port ''')'''Connects to the specified {{Span|host:port}} pair. A hostname will be resolved if valid. Returns [[@GlobalScope GD#OK|@GlobalScope.OK()]] on success or [[@GlobalScope GD#FAILED|@GlobalScope.FAILED()]] on failure.=== disconnect_from_host ===*  void '''disconnect_from_host ( )'''Disconnects from host.=== get_connected_host ===*  [[String GD|String]] '''get_connected_host ( )''' constReturns the IP of this peer.=== get_connected_port ===*  int '''get_connected_port ( )''' constReturns the port of this peer.=== get_status ===*  [[#Status|Status]] '''get_status ( )'''Returns the status of the connection, see [[#Status|Status]].=== is_connected_to_host ===*  bool '''is_connected_to_host ( )''' constReturns {{Span|true}} if this peer is currently connected to a host, {{Span|false}} otherwise.=== set_no_delay ===*  void '''set_no_delay''' '''(''' bool enabled ''')'''Disables Nagle's algorithm to improve latency for small packets.'''Note:''' For applications that send large packets or need to transfer a lot of data, this can decrease the total available bandwidth.