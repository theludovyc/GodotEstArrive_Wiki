__NOTOC__'''Inherits:''' [[AudioStream GD|AudioStream]] '''<''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Stores audio data loaded from WAV files.== Description ==AudioStreamSample stores sound samples loaded from WAV files. To play the stored sound, use an [[AudioStreamPlayer GD|AudioStreamPlayer]] (for non-positional audio) or [[AudioStreamPlayer2D GD|AudioStreamPlayer2D]]/[[AudioStreamPlayer3D GD|AudioStreamPlayer3D]] (for positional audio). The sound can be looped.This class can also be used to store dynamically-generated PCM audio data.== Properties =={| class="wikitable | [[PackedByteArray GD|PackedByteArray]]|| [[#data|data]]|| {{Span|PackedByteArray(  )}} |-| [[#Format|Format]]|| [[#format|format]]|| {{Span|0}}                   |-| int|| [[#loop_begin|loop_begin]]|| {{Span|0}}                   |-| int|| [[#loop_end|loop_end]]|| {{Span|0}}                   |-| [[#LoopMode|LoopMode]]|| [[#loop_mode|loop_mode]]|| {{Span|0}}                   |-| int|| [[#mix_rate|mix_rate]]|| {{Span|44100}}               |-| bool|| [[#stereo|stereo]]|| {{Span|false}}               |}== Methods =={| class="wikitable | [[@GlobalScope GD#Error|Error]]|| [[#save_to_wav|save_to_wav]] '''(''' [[String GD|String]] path ''')''' |}== Enumerations ===== Format ====== FORMAT_8_BITS ====== FORMAT_16_BITS ====== FORMAT_IMA_ADPCM ===enum '''Format''':*  '''FORMAT_8_BITS''' = '''0'''  8-bit audio codec.*  '''FORMAT_16_BITS''' = '''1'''  16-bit audio codec.*  '''FORMAT_IMA_ADPCM''' = '''2'''  Audio is compressed using IMA ADPCM.=== LoopMode ====== LOOP_DISABLED ====== LOOP_FORWARD ====== LOOP_PING_PONG ====== LOOP_BACKWARD ===enum '''LoopMode''':*  '''LOOP_DISABLED''' = '''0'''  Audio does not loop.*  '''LOOP_FORWARD''' = '''1'''  Audio loops the data between [[#loop_begin|loop_begin]] and [[#loop_end|loop_end]] playing forward only.*  '''LOOP_PING_PONG''' = '''2'''  Audio loops the data between [[#loop_begin|loop_begin]] and [[#loop_end|loop_end]] playing back and forth.*  '''LOOP_BACKWARD''' = '''3'''  Audio loops the data between [[#loop_begin|loop_begin]] and [[#loop_end|loop_end]] playing backward only.== Property Descriptions ===== data ===*  [[PackedByteArray GD|PackedByteArray]] '''data'''{| class="wikitable | ''Default''|| {{Span|PackedByteArray(  )}} |-| ''Setter''|| set_data(value)         |-| ''Getter''|| get_data()              |}Contains the audio data in bytes.'''Note:''' This property expects signed PCM8 data. To convert unsigned PCM8 to signed PCM8, subtract 128 from each byte.=== format ===*  [[#Format|Format]] '''format'''{| class="wikitable | ''Default''|| {{Span|0}}             |-| ''Setter''|| set_format(value) |-| ''Getter''|| get_format()      |}Audio format. See [[#Format|Format]] constants for values.=== loop_begin ===*  int '''loop_begin'''{| class="wikitable | ''Default''|| {{Span|0}}                 |-| ''Setter''|| set_loop_begin(value) |-| ''Getter''|| get_loop_begin()      |}Loop start in bytes.=== loop_end ===*  int '''loop_end'''{| class="wikitable | ''Default''|| {{Span|0}}               |-| ''Setter''|| set_loop_end(value) |-| ''Getter''|| get_loop_end()      |}Loop end in bytes.=== loop_mode ===*  [[#LoopMode|LoopMode]] '''loop_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                |-| ''Setter''|| set_loop_mode(value) |-| ''Getter''|| get_loop_mode()      |}Loop mode. See [[#LoopMode|LoopMode]] constants for values.=== mix_rate ===*  int '''mix_rate'''{| class="wikitable | ''Default''|| {{Span|44100}}           |-| ''Setter''|| set_mix_rate(value) |-| ''Getter''|| get_mix_rate()      |}The sample rate for mixing this audio.=== stereo ===*  bool '''stereo'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_stereo(value) |-| ''Getter''|| is_stereo()       |}If {{Span|true}}, audio is stereo.== Method Descriptions ===== save_to_wav ===*  [[@GlobalScope GD#Error|Error]] '''save_to_wav''' '''(''' [[String GD|String]] path ''')'''Saves the AudioStreamSample as a WAV file to {{Span|path}}. Samples with IMA ADPCM format can't be saved.'''Note:''' A {{Span|.wav}} extension is automatically appended to {{Span|path}} if it is missing.