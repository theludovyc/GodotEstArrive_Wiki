__NOTOC__'''Inherits:''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]State of a function call after yielding.== Description ==Calling [[@GDScript GD#yield|@GDScript.yield()]] within a function will cause that function to yield and return its current state as an object of this type. The yielded function call can then be resumed later by calling [[#resume|resume]] on this state object.== Methods =={| class="wikitable | bool|| [[#is_valid|is_valid]] '''(''' bool extended_check=false ''')''' const |-| [[Variant GD|Variant]]|| [[#resume|resume]] '''(''' [[Variant GD|Variant]] arg=null ''')'''                 |}== Signals ===== completed ===*  '''completed''' '''(''' [[Variant GD|Variant]] result ''')'''== Method Descriptions ===== is_valid ===*  bool '''is_valid''' '''(''' bool extended_check=false ''')''' constCheck whether the function call may be resumed. This is not the case if the function state was already resumed.If {{Span|extended_check}} is enabled, it also checks if the associated script and object still exist. The extended check is done in debug mode as part of [[#resume|resume]], but you can use this if you know you may be trying to resume without knowing for sure the object and/or script have survived up to that point.=== resume ===*  [[Variant GD|Variant]] '''resume''' '''(''' [[Variant GD|Variant]] arg=null ''')'''Resume execution of the yielded function call.If handed an argument, return the argument from the [[@GDScript GD#yield|@GDScript.yield()]] call in the yielded function call. You can pass e.g. an [[Array GD|Array]] to hand multiple arguments.This function returns what the resumed function call returns, possibly another function state if yielded again.