__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]== Tutorials ==*  :doc:`../tutorials/animation/animation_tree`== Properties =={| class="wikitable | [[StringName GD|StringName]]|| [[#advance_condition|advance_condition]]|| {{Span|@""}}   |-| bool|| [[#auto_advance|auto_advance]]|| {{Span|false}} |-| bool|| [[#disabled|disabled]]|| {{Span|false}} |-| int|| [[#priority|priority]]|| {{Span|1}}     |-| [[#SwitchMode|SwitchMode]]|| [[#switch_mode|switch_mode]]|| {{Span|0}}     |-| float|| [[#xfade_time|xfade_time]]|| {{Span|0.0}}   |}== Signals ===== advance_condition_changed ===*  '''advance_condition_changed ( )'''Emitted when [[#advance_condition|advance_condition]] is changed.== Enumerations ===== SwitchMode ====== SWITCH_MODE_IMMEDIATE ====== SWITCH_MODE_SYNC ====== SWITCH_MODE_AT_END ===enum '''SwitchMode''':*  '''SWITCH_MODE_IMMEDIATE''' = '''0'''  Switch to the next state immediately. The current state will end and blend into the beginning of the new one.*  '''SWITCH_MODE_SYNC''' = '''1'''  Switch to the next state immediately, but will seek the new state to the playback position of the old state.*  '''SWITCH_MODE_AT_END''' = '''2'''  Wait for the current state playback to end, then switch to the beginning of the next state animation.== Property Descriptions ===== advance_condition ===*  [[StringName GD|StringName]] '''advance_condition'''{| class="wikitable | ''Default''|| {{Span|@""}}                      |-| ''Setter''|| set_advance_condition(value) |-| ''Getter''|| get_advance_condition()      |}Turn on auto advance when this condition is set. The provided name will become a boolean parameter on the [[AnimationTree GD|AnimationTree]] that can be controlled from code (see `https://docs.godotengine.org/en/latest/tutorials/animation/animation_tree.html#controlling-from-code <https://docs.godotengine.org/en/latest/tutorials/animation/animation_tree.html#controlling-from-code>`_). For example, if [[AnimationTree GD#tree_root|AnimationTree.tree_root()]] is an [[AnimationNodeStateMachine GD|AnimationNodeStateMachine]] and [[#advance_condition|advance_condition]] is set to {{Span|"idle"}}:::    $animation_tree["parameters/conditions/idle"] = is_on_floor and (linear_velocity.x == 0)=== auto_advance ===*  bool '''auto_advance'''{| class="wikitable | ''Default''|| {{Span|false}}               |-| ''Setter''|| set_auto_advance(value) |-| ''Getter''|| has_auto_advance()      |}Turn on the transition automatically when this state is reached. This works best with [[AnimationNodeStateMachineTransition GD#SWITCH_MODE_AT_END|SWITCH_MODE_AT_END]].=== disabled ===*  bool '''disabled'''{| class="wikitable | ''Default''|| {{Span|false}}           |-| ''Setter''|| set_disabled(value) |-| ''Getter''|| is_disabled()       |}Don't use this transition during [[AnimationNodeStateMachinePlayback GD#travel|AnimationNodeStateMachinePlayback.travel()]] or [[#auto_advance|auto_advance]].=== priority ===*  int '''priority'''{| class="wikitable | ''Default''|| {{Span|1}}               |-| ''Setter''|| set_priority(value) |-| ''Getter''|| get_priority()      |}Lower priority transitions are preferred when travelling through the tree via [[AnimationNodeStateMachinePlayback GD#travel|AnimationNodeStateMachinePlayback.travel()]] or [[#auto_advance|auto_advance]].=== switch_mode ===*  [[#SwitchMode|SwitchMode]] '''switch_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                  |-| ''Setter''|| set_switch_mode(value) |-| ''Getter''|| get_switch_mode()      |}The transition type.=== xfade_time ===*  float '''xfade_time'''{| class="wikitable | ''Default''|| {{Span|0.0}}               |-| ''Setter''|| set_xfade_time(value) |-| ''Getter''|| get_xfade_time()      |}The time to cross-fade between this state and the next.