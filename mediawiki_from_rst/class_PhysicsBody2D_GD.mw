__NOTOC__'''Inherits:''' [[CollisionObject2D GD|CollisionObject2D]] '''<''' [[Node2D GD|Node2D]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[KinematicBody2D GD|KinematicBody2D]], [[RigidBody2D GD|RigidBody2D]], [[StaticBody2D GD|StaticBody2D]]Base class for all objects affected by physics in 2D space.== Description ==PhysicsBody2D is an abstract base class for implementing a physics body. All \*Body2D types inherit from it.== Tutorials ==*  :doc:`../tutorials/physics/physics_introduction`== Properties =={| class="wikitable | int|| [[#collision_layer|collision_layer]]|| {{Span|1}}            |-| int|| [[#collision_mask|collision_mask]]|| {{Span|1}}            |-| bool|| input_pickable|| {{Span|false}} (parent override) |-| int|| [[#layers|layers]]||                  |}== Methods =={| class="wikitable | void|| [[#add_collision_exception_with|add_collision_exception_with]] '''(''' [[Node GD|Node]] body ''')'''                   |-| [[Array GD|Array]]|| [[#get_collision_exceptions|get_collision_exceptions]] '''(''' ''')'''                                                        |-| bool|| [[#get_collision_layer_bit|get_collision_layer_bit]] '''(''' int bit ''')''' const                          |-| bool|| [[#get_collision_mask_bit|get_collision_mask_bit]] '''(''' int bit ''')''' const                            |-| void|| [[#remove_collision_exception_with|remove_collision_exception_with]] '''(''' [[Node GD|Node]] body ''')'''             |-| void|| [[#set_collision_layer_bit|set_collision_layer_bit]] '''(''' int bit, bool value ''')''' |-| void|| [[#set_collision_mask_bit|set_collision_mask_bit]] '''(''' int bit, bool value ''')'''   |}== Property Descriptions ===== collision_layer ===*  int '''collision_layer'''{| class="wikitable | ''Default''|| {{Span|1}}                      |-| ''Setter''|| set_collision_layer(value) |-| ''Getter''|| get_collision_layer()      |}The physics layers this area is in.Collidable objects can exist in any of 32 different layers. These layers work like a tagging system, and are not visual. A collidable can use these layers to select with which objects it can collide, using the [[#collision_mask|collision_mask]] property.A contact is detected if object A is in any of the layers that object B scans, or object B is in any layer scanned by object A.=== collision_mask ===*  int '''collision_mask'''{| class="wikitable | ''Default''|| {{Span|1}}                     |-| ''Setter''|| set_collision_mask(value) |-| ''Getter''|| get_collision_mask()      |}The physics layers this area scans for collisions.=== layers ===*  int '''layers'''Both [[#collision_layer|collision_layer]] and [[#collision_mask|collision_mask]]. Returns [[#collision_layer|collision_layer]] when accessed. Updates [[#collision_layer|collision_layer]] and [[#collision_mask|collision_mask]] when modified.== Method Descriptions ===== add_collision_exception_with ===*  void '''add_collision_exception_with''' '''(''' [[Node GD|Node]] body ''')'''Adds a body to the list of bodies that this body can't collide with.=== get_collision_exceptions ===*  [[Array GD|Array]] '''get_collision_exceptions ( )'''Returns an array of nodes that were added as collision exceptions for this body.=== get_collision_layer_bit ===*  bool '''get_collision_layer_bit''' '''(''' int bit ''')''' constReturns an individual bit on the [[#collision_layer|collision_layer]].=== get_collision_mask_bit ===*  bool '''get_collision_mask_bit''' '''(''' int bit ''')''' constReturns an individual bit on the [[#collision_mask|collision_mask]].=== remove_collision_exception_with ===*  void '''remove_collision_exception_with''' '''(''' [[Node GD|Node]] body ''')'''Removes a body from the list of bodies that this body can't collide with.=== set_collision_layer_bit ===*  void '''set_collision_layer_bit''' '''(''' int bit, bool value ''')'''Sets individual bits on the [[#collision_layer|collision_layer]] bitmask. Use this if you only need to change one layer's value.=== set_collision_mask_bit ===*  void '''set_collision_mask_bit''' '''(''' int bit, bool value ''')'''Sets individual bits on the [[#collision_mask|collision_mask]] bitmask. Use this if you only need to change one layer's value.