__NOTOC__'''Inherits:''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Helper tool to access and edit [[Mesh GD|Mesh]] data.== Description ==MeshDataTool provides access to individual vertices in a [[Mesh GD|Mesh]]. It allows users to read and edit vertex data of meshes. It also creates an array of faces and edges.To use MeshDataTool, load a mesh with [[#create_from_surface|create_from_surface]]. When you are finished editing the data commit the data to a mesh with [[#commit_to_surface|commit_to_surface]].Below is an example of how MeshDataTool may be used.::    var mdt = MeshDataTool.new()    mdt.create_from_surface(mesh, 0)    for i in range(mdt.get_vertex_count()):        var vertex = mdt.get_vertex(i)        ...        mdt.set_vertex(i, vertex)    mesh.surface_remove(0)    mdt.commit_to_surface(mesh)== Methods =={| class="wikitable | void|| [[#clear|clear]] '''(''' ''')'''                                                                                                                  |-| [[@GlobalScope GD#Error|Error]]|| [[#commit_to_surface|commit_to_surface]] '''(''' [[ArrayMesh GD|ArrayMesh]] mesh ''')'''                                                   |-| [[@GlobalScope GD#Error|Error]]|| [[#create_from_surface|create_from_surface]] '''(''' [[ArrayMesh GD|ArrayMesh]] mesh, int surface ''')'''                |-| int|| [[#get_edge_count|get_edge_count]] '''(''' ''')''' const                                                                                          |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#get_edge_faces|get_edge_faces]] '''(''' int idx ''')''' const                                                                |-| [[Variant GD|Variant]]|| [[#get_edge_meta|get_edge_meta]] '''(''' int idx ''')''' const                                                                  |-| int|| [[#get_edge_vertex|get_edge_vertex]] '''(''' int idx, int vertex ''')''' const                                |-| int|| [[#get_face_count|get_face_count]] '''(''' ''')''' const                                                                                          |-| int|| [[#get_face_edge|get_face_edge]] '''(''' int idx, int edge ''')''' const                                      |-| [[Variant GD|Variant]]|| [[#get_face_meta|get_face_meta]] '''(''' int idx ''')''' const                                                                  |-| [[Vector3 GD|Vector3]]|| [[#get_face_normal|get_face_normal]] '''(''' int idx ''')''' const                                                              |-| int|| [[#get_face_vertex|get_face_vertex]] '''(''' int idx, int vertex ''')''' const                                |-| int|| [[#get_format|get_format]] '''(''' ''')''' const                                                                                                  |-| [[Material GD|Material]]|| [[#get_material|get_material]] '''(''' ''')''' const                                                                                              |-| [[Vector3 GD|Vector3]]|| [[#get_vertex|get_vertex]] '''(''' int idx ''')''' const                                                                        |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#get_vertex_bones|get_vertex_bones]] '''(''' int idx ''')''' const                                                            |-| [[Color GD|Color]]|| [[#get_vertex_color|get_vertex_color]] '''(''' int idx ''')''' const                                                            |-| int|| [[#get_vertex_count|get_vertex_count]] '''(''' ''')''' const                                                                                      |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#get_vertex_edges|get_vertex_edges]] '''(''' int idx ''')''' const                                                            |-| [[PackedInt32Array GD|PackedInt32Array]]|| [[#get_vertex_faces|get_vertex_faces]] '''(''' int idx ''')''' const                                                            |-| [[Variant GD|Variant]]|| [[#get_vertex_meta|get_vertex_meta]] '''(''' int idx ''')''' const                                                              |-| [[Vector3 GD|Vector3]]|| [[#get_vertex_normal|get_vertex_normal]] '''(''' int idx ''')''' const                                                          |-| [[Plane GD|Plane]]|| [[#get_vertex_tangent|get_vertex_tangent]] '''(''' int idx ''')''' const                                                        |-| [[Vector2 GD|Vector2]]|| [[#get_vertex_uv|get_vertex_uv]] '''(''' int idx ''')''' const                                                                  |-| [[Vector2 GD|Vector2]]|| [[#get_vertex_uv2|get_vertex_uv2]] '''(''' int idx ''')''' const                                                                |-| [[PackedFloat32Array GD|PackedFloat32Array]]|| [[#get_vertex_weights|get_vertex_weights]] '''(''' int idx ''')''' const                                                        |-| void|| [[#set_edge_meta|set_edge_meta]] '''(''' int idx, [[Variant GD|Variant]] meta ''')'''                                    |-| void|| [[#set_face_meta|set_face_meta]] '''(''' int idx, [[Variant GD|Variant]] meta ''')'''                                    |-| void|| [[#set_material|set_material]] '''(''' [[Material GD|Material]] material ''')'''                                                           |-| void|| [[#set_vertex|set_vertex]] '''(''' int idx, [[Vector3 GD|Vector3]] vertex ''')'''                                        |-| void|| [[#set_vertex_bones|set_vertex_bones]] '''(''' int idx, [[PackedInt32Array GD|PackedInt32Array]] bones ''')'''           |-| void|| [[#set_vertex_color|set_vertex_color]] '''(''' int idx, [[Color GD|Color]] color ''')'''                                 |-| void|| [[#set_vertex_meta|set_vertex_meta]] '''(''' int idx, [[Variant GD|Variant]] meta ''')'''                                |-| void|| [[#set_vertex_normal|set_vertex_normal]] '''(''' int idx, [[Vector3 GD|Vector3]] normal ''')'''                          |-| void|| [[#set_vertex_tangent|set_vertex_tangent]] '''(''' int idx, [[Plane GD|Plane]] tangent ''')'''                           |-| void|| [[#set_vertex_uv|set_vertex_uv]] '''(''' int idx, [[Vector2 GD|Vector2]] uv ''')'''                                      |-| void|| [[#set_vertex_uv2|set_vertex_uv2]] '''(''' int idx, [[Vector2 GD|Vector2]] uv2 ''')'''                                   |-| void|| [[#set_vertex_weights|set_vertex_weights]] '''(''' int idx, [[PackedFloat32Array GD|PackedFloat32Array]] weights ''')''' |}== Method Descriptions ===== clear ===*  void '''clear ( )'''Clears all data currently in MeshDataTool.=== commit_to_surface ===*  [[@GlobalScope GD#Error|Error]] '''commit_to_surface''' '''(''' [[ArrayMesh GD|ArrayMesh]] mesh ''')'''Adds a new surface to specified [[Mesh GD|Mesh]] with edited data.=== create_from_surface ===*  [[@GlobalScope GD#Error|Error]] '''create_from_surface''' '''(''' [[ArrayMesh GD|ArrayMesh]] mesh, int surface ''')'''Uses specified surface of given [[Mesh GD|Mesh]] to populate data for MeshDataTool.Requires [[Mesh GD|Mesh]] with primitive type [[Mesh GD#PRIMITIVE_TRIANGLES|Mesh.PRIMITIVE_TRIANGLES()]].=== get_edge_count ===*  int '''get_edge_count ( )''' constReturns the number of edges in this [[Mesh GD|Mesh]].=== get_edge_faces ===*  [[PackedInt32Array GD|PackedInt32Array]] '''get_edge_faces''' '''(''' int idx ''')''' constReturns array of faces that touch given edge.=== get_edge_meta ===*  [[Variant GD|Variant]] '''get_edge_meta''' '''(''' int idx ''')''' constReturns meta information assigned to given edge.=== get_edge_vertex ===*  int '''get_edge_vertex''' '''(''' int idx, int vertex ''')''' constReturns index of specified vertex connected to given edge.Vertex argument can only be 0 or 1 because edges are comprised of two vertices.=== get_face_count ===*  int '''get_face_count ( )''' constReturns the number of faces in this [[Mesh GD|Mesh]].=== get_face_edge ===*  int '''get_face_edge''' '''(''' int idx, int edge ''')''' constReturns specified edge associated with given face.Edge argument must 2 or less because a face only has three edges.=== get_face_meta ===*  [[Variant GD|Variant]] '''get_face_meta''' '''(''' int idx ''')''' constReturns the metadata associated with the given face.=== get_face_normal ===*  [[Vector3 GD|Vector3]] '''get_face_normal''' '''(''' int idx ''')''' constCalculates and returns the face normal of the given face.=== get_face_vertex ===*  int '''get_face_vertex''' '''(''' int idx, int vertex ''')''' constReturns the specified vertex of the given face.Vertex argument must be 2 or less because faces contain three vertices.=== get_format ===*  int '''get_format ( )''' constReturns the [[Mesh GD|Mesh]]'s format. Format is an integer made up of [[Mesh GD|Mesh]] format flags combined together. For example, a mesh containing both vertices and normals would return a format of {{Span|3}} because [[ArrayMesh GD#ARRAY_FORMAT_VERTEX|ArrayMesh.ARRAY_FORMAT_VERTEX()]] is {{Span|1}} and [[ArrayMesh GD#ARRAY_FORMAT_NORMAL|ArrayMesh.ARRAY_FORMAT_NORMAL()]] is {{Span|2}}.See [[#ArrayFormat|ArrayFormat]] for a list of format flags.=== get_material ===*  [[Material GD|Material]] '''get_material ( )''' constReturns the material assigned to the [[Mesh GD|Mesh]].=== get_vertex ===*  [[Vector3 GD|Vector3]] '''get_vertex''' '''(''' int idx ''')''' constReturns the vertex at given index.=== get_vertex_bones ===*  [[PackedInt32Array GD|PackedInt32Array]] '''get_vertex_bones''' '''(''' int idx ''')''' constReturns the bones of the given vertex.=== get_vertex_color ===*  [[Color GD|Color]] '''get_vertex_color''' '''(''' int idx ''')''' constReturns the color of the given vertex.=== get_vertex_count ===*  int '''get_vertex_count ( )''' constReturns the total number of vertices in [[Mesh GD|Mesh]].=== get_vertex_edges ===*  [[PackedInt32Array GD|PackedInt32Array]] '''get_vertex_edges''' '''(''' int idx ''')''' constReturns an array of edges that share the given vertex.=== get_vertex_faces ===*  [[PackedInt32Array GD|PackedInt32Array]] '''get_vertex_faces''' '''(''' int idx ''')''' constReturns an array of faces that share the given vertex.=== get_vertex_meta ===*  [[Variant GD|Variant]] '''get_vertex_meta''' '''(''' int idx ''')''' constReturns the metadata associated with the given vertex.=== get_vertex_normal ===*  [[Vector3 GD|Vector3]] '''get_vertex_normal''' '''(''' int idx ''')''' constReturns the normal of the given vertex.=== get_vertex_tangent ===*  [[Plane GD|Plane]] '''get_vertex_tangent''' '''(''' int idx ''')''' constReturns the tangent of the given vertex.=== get_vertex_uv ===*  [[Vector2 GD|Vector2]] '''get_vertex_uv''' '''(''' int idx ''')''' constReturns the UV of the given vertex.=== get_vertex_uv2 ===*  [[Vector2 GD|Vector2]] '''get_vertex_uv2''' '''(''' int idx ''')''' constReturns the UV2 of the given vertex.=== get_vertex_weights ===*  [[PackedFloat32Array GD|PackedFloat32Array]] '''get_vertex_weights''' '''(''' int idx ''')''' constReturns bone weights of the given vertex.=== set_edge_meta ===*  void '''set_edge_meta''' '''(''' int idx, [[Variant GD|Variant]] meta ''')'''Sets the metadata of the given edge.=== set_face_meta ===*  void '''set_face_meta''' '''(''' int idx, [[Variant GD|Variant]] meta ''')'''Sets the metadata of the given face.=== set_material ===*  void '''set_material''' '''(''' [[Material GD|Material]] material ''')'''Sets the material to be used by newly-constructed [[Mesh GD|Mesh]].=== set_vertex ===*  void '''set_vertex''' '''(''' int idx, [[Vector3 GD|Vector3]] vertex ''')'''Sets the position of the given vertex.=== set_vertex_bones ===*  void '''set_vertex_bones''' '''(''' int idx, [[PackedInt32Array GD|PackedInt32Array]] bones ''')'''Sets the bones of the given vertex.=== set_vertex_color ===*  void '''set_vertex_color''' '''(''' int idx, [[Color GD|Color]] color ''')'''Sets the color of the given vertex.=== set_vertex_meta ===*  void '''set_vertex_meta''' '''(''' int idx, [[Variant GD|Variant]] meta ''')'''Sets the metadata associated with the given vertex.=== set_vertex_normal ===*  void '''set_vertex_normal''' '''(''' int idx, [[Vector3 GD|Vector3]] normal ''')'''Sets the normal of the given vertex.=== set_vertex_tangent ===*  void '''set_vertex_tangent''' '''(''' int idx, [[Plane GD|Plane]] tangent ''')'''Sets the tangent of the given vertex.=== set_vertex_uv ===*  void '''set_vertex_uv''' '''(''' int idx, [[Vector2 GD|Vector2]] uv ''')'''Sets the UV of the given vertex.=== set_vertex_uv2 ===*  void '''set_vertex_uv2''' '''(''' int idx, [[Vector2 GD|Vector2]] uv2 ''')'''Sets the UV2 of the given vertex.=== set_vertex_weights ===*  void '''set_vertex_weights''' '''(''' int idx, [[PackedFloat32Array GD|PackedFloat32Array]] weights ''')'''Sets the bone weights of the given vertex.