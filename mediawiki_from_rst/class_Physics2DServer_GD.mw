__NOTOC__'''Inherits:''' [[Object GD|Object]]'''Inherited By:''' [[Physics2DServerSW GD|Physics2DServerSW]]Server interface for low-level 2D physics access.== Description ==Physics2DServer is the server responsible for all 2D physics. It can create many kinds of physics objects, but does not insert them on the node tree.== Methods =={| class="wikitable | void|| [[#area_add_shape|area_add_shape]] '''(''' [[RID GD|RID]] area, [[RID GD|RID]] shape, [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), bool disabled=false ''')'''                                                                                                 |-| void|| [[#area_attach_canvas_instance_id|area_attach_canvas_instance_id]] '''(''' [[RID GD|RID]] area, int id ''')'''                                                                                                                                                                                             |-| void|| [[#area_attach_object_instance_id|area_attach_object_instance_id]] '''(''' [[RID GD|RID]] area, int id ''')'''                                                                                                                                                                                             |-| void|| [[#area_clear_shapes|area_clear_shapes]] '''(''' [[RID GD|RID]] area ''')'''                                                                                                                                                                                                                                                 |-| [[RID GD|RID]]|| [[#area_create|area_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                                        |-| int|| [[#area_get_canvas_instance_id|area_get_canvas_instance_id]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                       |-| int|| [[#area_get_object_instance_id|area_get_object_instance_id]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                       |-| [[Variant GD|Variant]]|| [[#area_get_param|area_get_param]] '''(''' [[RID GD|RID]] area, [[#AreaParameter|AreaParameter]] param ''')''' const                                                                                                                                                                                 |-| [[RID GD|RID]]|| [[#area_get_shape|area_get_shape]] '''(''' [[RID GD|RID]] area, int shape_idx ''')''' const                                                                                                                                                                                                                |-| int|| [[#area_get_shape_count|area_get_shape_count]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                                     |-| [[Transform2D GD|Transform2D]]|| [[#area_get_shape_transform|area_get_shape_transform]] '''(''' [[RID GD|RID]] area, int shape_idx ''')''' const                                                                                                                                                                                            |-| [[RID GD|RID]]|| [[#area_get_space|area_get_space]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                                                 |-| [[#AreaSpaceOverrideMode|AreaSpaceOverrideMode]]|| [[#area_get_space_override_mode|area_get_space_override_mode]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                     |-| [[Transform2D GD|Transform2D]]|| [[#area_get_transform|area_get_transform]] '''(''' [[RID GD|RID]] area ''')''' const                                                                                                                                                                                                                                         |-| void|| [[#area_remove_shape|area_remove_shape]] '''(''' [[RID GD|RID]] area, int shape_idx ''')'''                                                                                                                                                                                                                |-| void|| [[#area_set_area_monitor_callback|area_set_area_monitor_callback]] '''(''' [[RID GD|RID]] area, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method ''')'''                                                                                                                                     |-| void|| [[#area_set_collision_layer|area_set_collision_layer]] '''(''' [[RID GD|RID]] area, int layer ''')'''                                                                                                                                                                                                      |-| void|| [[#area_set_collision_mask|area_set_collision_mask]] '''(''' [[RID GD|RID]] area, int mask ''')'''                                                                                                                                                                                                         |-| void|| [[#area_set_monitor_callback|area_set_monitor_callback]] '''(''' [[RID GD|RID]] area, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method ''')'''                                                                                                                                               |-| void|| [[#area_set_monitorable|area_set_monitorable]] '''(''' [[RID GD|RID]] area, bool monitorable ''')'''                                                                                                                                                                                                      |-| void|| [[#area_set_param|area_set_param]] '''(''' [[RID GD|RID]] area, [[#AreaParameter|AreaParameter]] param, [[Variant GD|Variant]] value ''')'''                                                                                                                                                  |-| void|| [[#area_set_shape|area_set_shape]] '''(''' [[RID GD|RID]] area, int shape_idx, [[RID GD|RID]] shape ''')'''                                                                                                                                                                                         |-| void|| [[#area_set_shape_disabled|area_set_shape_disabled]] '''(''' [[RID GD|RID]] area, int shape_idx, bool disabled ''')'''                                                                                                                                                                  |-| void|| [[#area_set_shape_transform|area_set_shape_transform]] '''(''' [[RID GD|RID]] area, int shape_idx, [[Transform2D GD|Transform2D]] transform ''')'''                                                                                                                                                 |-| void|| [[#area_set_space|area_set_space]] '''(''' [[RID GD|RID]] area, [[RID GD|RID]] space ''')'''                                                                                                                                                                                                                          |-| void|| [[#area_set_space_override_mode|area_set_space_override_mode]] '''(''' [[RID GD|RID]] area, [[#AreaSpaceOverrideMode|AreaSpaceOverrideMode]] mode ''')'''                                                                                                                                            |-| void|| [[#area_set_transform|area_set_transform]] '''(''' [[RID GD|RID]] area, [[Transform2D GD|Transform2D]] transform ''')'''                                                                                                                                                                                              |-| void|| [[#body_add_central_force|body_add_central_force]] '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] force ''')'''                                                                                                                                                                                                  |-| void|| [[#body_add_collision_exception|body_add_collision_exception]] '''(''' [[RID GD|RID]] body, [[RID GD|RID]] excepted_body ''')'''                                                                                                                                                                                      |-| void|| [[#body_add_force|body_add_force]] '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] offset, [[Vector2 GD|Vector2]] force ''')'''                                                                                                                                                                            |-| void|| [[#body_add_shape|body_add_shape]] '''(''' [[RID GD|RID]] body, [[RID GD|RID]] shape, [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), bool disabled=false ''')'''                                                                                                 |-| void|| [[#body_add_torque|body_add_torque]] '''(''' [[RID GD|RID]] body, float torque ''')'''                                                                                                                                                                                                                   |-| void|| [[#body_apply_central_impulse|body_apply_central_impulse]] '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] impulse ''')'''                                                                                                                                                                                        |-| void|| [[#body_apply_impulse|body_apply_impulse]] '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] position, [[Vector2 GD|Vector2]] impulse ''')'''                                                                                                                                                                |-| void|| [[#body_apply_torque_impulse|body_apply_torque_impulse]] '''(''' [[RID GD|RID]] body, float impulse ''')'''                                                                                                                                                                                              |-| void|| [[#body_attach_canvas_instance_id|body_attach_canvas_instance_id]] '''(''' [[RID GD|RID]] body, int id ''')'''                                                                                                                                                                                             |-| void|| [[#body_attach_object_instance_id|body_attach_object_instance_id]] '''(''' [[RID GD|RID]] body, int id ''')'''                                                                                                                                                                                             |-| void|| [[#body_clear_shapes|body_clear_shapes]] '''(''' [[RID GD|RID]] body ''')'''                                                                                                                                                                                                                                                 |-| [[RID GD|RID]]|| [[#body_create|body_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                                        |-| int|| [[#body_get_canvas_instance_id|body_get_canvas_instance_id]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                       |-| int|| [[#body_get_collision_layer|body_get_collision_layer]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                             |-| int|| [[#body_get_collision_mask|body_get_collision_mask]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                               |-| [[#CCDMode|CCDMode]]|| [[#body_get_continuous_collision_detection_mode|body_get_continuous_collision_detection_mode]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                     |-| [[Physics2DDirectBodyState GD|Physics2DDirectBodyState]]|| [[#body_get_direct_state|body_get_direct_state]] '''(''' [[RID GD|RID]] body ''')'''                                                                                                                                                                                                                                         |-| int|| [[#body_get_max_contacts_reported|body_get_max_contacts_reported]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                 |-| [[#BodyMode|BodyMode]]|| [[#body_get_mode|body_get_mode]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                                                   |-| int|| [[#body_get_object_instance_id|body_get_object_instance_id]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                       |-| float|| [[#body_get_param|body_get_param]] '''(''' [[RID GD|RID]] body, [[#BodyParameter|BodyParameter]] param ''')''' const                                                                                                                                                                                 |-| [[RID GD|RID]]|| [[#body_get_shape|body_get_shape]] '''(''' [[RID GD|RID]] body, int shape_idx ''')''' const                                                                                                                                                                                                                |-| int|| [[#body_get_shape_count|body_get_shape_count]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                                     |-| [[Variant GD|Variant]]|| [[#body_get_shape_metadata|body_get_shape_metadata]] '''(''' [[RID GD|RID]] body, int shape_idx ''')''' const                                                                                                                                                                                              |-| [[Transform2D GD|Transform2D]]|| [[#body_get_shape_transform|body_get_shape_transform]] '''(''' [[RID GD|RID]] body, int shape_idx ''')''' const                                                                                                                                                                                            |-| [[RID GD|RID]]|| [[#body_get_space|body_get_space]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                                                                 |-| [[Variant GD|Variant]]|| [[#body_get_state|body_get_state]] '''(''' [[RID GD|RID]] body, [[#BodyState|BodyState]] state ''')''' const                                                                                                                                                                                         |-| bool|| [[#body_is_omitting_force_integration|body_is_omitting_force_integration]] '''(''' [[RID GD|RID]] body ''')''' const                                                                                                                                                                                                         |-| void|| [[#body_remove_collision_exception|body_remove_collision_exception]] '''(''' [[RID GD|RID]] body, [[RID GD|RID]] excepted_body ''')'''                                                                                                                                                                                |-| void|| [[#body_remove_shape|body_remove_shape]] '''(''' [[RID GD|RID]] body, int shape_idx ''')'''                                                                                                                                                                                                                |-| void|| [[#body_set_axis_velocity|body_set_axis_velocity]] '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] axis_velocity ''')'''                                                                                                                                                                                          |-| void|| [[#body_set_collision_layer|body_set_collision_layer]] '''(''' [[RID GD|RID]] body, int layer ''')'''                                                                                                                                                                                                      |-| void|| [[#body_set_collision_mask|body_set_collision_mask]] '''(''' [[RID GD|RID]] body, int mask ''')'''                                                                                                                                                                                                         |-| void|| [[#body_set_continuous_collision_detection_mode|body_set_continuous_collision_detection_mode]] '''(''' [[RID GD|RID]] body, [[#CCDMode|CCDMode]] mode ''')'''                                                                                                                                        |-| void|| [[#body_set_force_integration_callback|body_set_force_integration_callback]] '''(''' [[RID GD|RID]] body, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method, [[Variant GD|Variant]] userdata=null ''')'''                                                                              |-| void|| [[#body_set_max_contacts_reported|body_set_max_contacts_reported]] '''(''' [[RID GD|RID]] body, int amount ''')'''                                                                                                                                                                                         |-| void|| [[#body_set_mode|body_set_mode]] '''(''' [[RID GD|RID]] body, [[#BodyMode|BodyMode]] mode ''')'''                                                                                                                                                                                                    |-| void|| [[#body_set_omit_force_integration|body_set_omit_force_integration]] '''(''' [[RID GD|RID]] body, bool enable ''')'''                                                                                                                                                                                     |-| void|| [[#body_set_param|body_set_param]] '''(''' [[RID GD|RID]] body, [[#BodyParameter|BodyParameter]] param, float value ''')'''                                                                                                                                                      |-| void|| [[#body_set_shape|body_set_shape]] '''(''' [[RID GD|RID]] body, int shape_idx, [[RID GD|RID]] shape ''')'''                                                                                                                                                                                         |-| void|| [[#body_set_shape_as_one_way_collision|body_set_shape_as_one_way_collision]] '''(''' [[RID GD|RID]] body, int shape_idx, bool enable, float margin ''')'''                                                                                                          |-| void|| [[#body_set_shape_disabled|body_set_shape_disabled]] '''(''' [[RID GD|RID]] body, int shape_idx, bool disabled ''')'''                                                                                                                                                                  |-| void|| [[#body_set_shape_metadata|body_set_shape_metadata]] '''(''' [[RID GD|RID]] body, int shape_idx, [[Variant GD|Variant]] metadata ''')'''                                                                                                                                                            |-| void|| [[#body_set_shape_transform|body_set_shape_transform]] '''(''' [[RID GD|RID]] body, int shape_idx, [[Transform2D GD|Transform2D]] transform ''')'''                                                                                                                                                 |-| void|| [[#body_set_space|body_set_space]] '''(''' [[RID GD|RID]] body, [[RID GD|RID]] space ''')'''                                                                                                                                                                                                                          |-| void|| [[#body_set_state|body_set_state]] '''(''' [[RID GD|RID]] body, [[#BodyState|BodyState]] state, [[Variant GD|Variant]] value ''')'''                                                                                                                                                          |-| bool|| [[#body_test_motion|body_test_motion]] '''(''' [[RID GD|RID]] body, [[Transform2D GD|Transform2D]] from, [[Vector2 GD|Vector2]] motion, bool infinite_inertia, float margin=0.08, [[Physics2DTestMotionResult GD|Physics2DTestMotionResult]] result=null ''')''' |-| [[RID GD|RID]]|| [[#capsule_shape_create|capsule_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                      |-| [[RID GD|RID]]|| [[#circle_shape_create|circle_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                        |-| [[RID GD|RID]]|| [[#concave_polygon_shape_create|concave_polygon_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                      |-| [[RID GD|RID]]|| [[#convex_polygon_shape_create|convex_polygon_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                        |-| [[RID GD|RID]]|| [[#damped_spring_joint_create|damped_spring_joint_create]] '''(''' [[Vector2 GD|Vector2]] anchor_a, [[Vector2 GD|Vector2]] anchor_b, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''                                                                                                               |-| float|| [[#damped_string_joint_get_param|damped_string_joint_get_param]] '''(''' [[RID GD|RID]] joint, [[#DampedStringParam|DampedStringParam]] param ''')''' const                                                                                                                                          |-| void|| [[#damped_string_joint_set_param|damped_string_joint_set_param]] '''(''' [[RID GD|RID]] joint, [[#DampedStringParam|DampedStringParam]] param, float value ''')'''                                                                                                               |-| void|| [[#free_rid|free_rid]] '''(''' [[RID GD|RID]] rid ''')'''                                                                                                                                                                                                                                                                    |-| int|| [[#get_process_info|get_process_info]] '''(''' [[#ProcessInfo|ProcessInfo]] process_info ''')'''                                                                                                                                                                                                            |-| [[RID GD|RID]]|| [[#groove_joint_create|groove_joint_create]] '''(''' [[Vector2 GD|Vector2]] groove1_a, [[Vector2 GD|Vector2]] groove2_a, [[Vector2 GD|Vector2]] anchor_b, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''                                                                                   |-| float|| [[#joint_get_param|joint_get_param]] '''(''' [[RID GD|RID]] joint, [[#JointParam|JointParam]] param ''')''' const                                                                                                                                                                                    |-| [[#JointType|JointType]]|| [[#joint_get_type|joint_get_type]] '''(''' [[RID GD|RID]] joint ''')''' const                                                                                                                                                                                                                                                |-| void|| [[#joint_set_param|joint_set_param]] '''(''' [[RID GD|RID]] joint, [[#JointParam|JointParam]] param, float value ''')'''                                                                                                                                                         |-| [[RID GD|RID]]|| [[#line_shape_create|line_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                            |-| [[RID GD|RID]]|| [[#pin_joint_create|pin_joint_create]] '''(''' [[Vector2 GD|Vector2]] anchor, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''                                                                                                                                                                             |-| [[RID GD|RID]]|| [[#ray_shape_create|ray_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                              |-| [[RID GD|RID]]|| [[#rectangle_shape_create|rectangle_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                  |-| [[RID GD|RID]]|| [[#segment_shape_create|segment_shape_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                      |-| void|| [[#set_active|set_active]] '''(''' bool active ''')'''                                                                                                                                                                                                                                                           |-| [[Variant GD|Variant]]|| [[#shape_get_data|shape_get_data]] '''(''' [[RID GD|RID]] shape ''')''' const                                                                                                                                                                                                                                                |-| [[#ShapeType|ShapeType]]|| [[#shape_get_type|shape_get_type]] '''(''' [[RID GD|RID]] shape ''')''' const                                                                                                                                                                                                                                                |-| void|| [[#shape_set_data|shape_set_data]] '''(''' [[RID GD|RID]] shape, [[Variant GD|Variant]] data ''')'''                                                                                                                                                                                                                  |-| [[RID GD|RID]]|| [[#space_create|space_create]] '''(''' ''')'''                                                                                                                                                                                                                                                                                      |-| [[Physics2DDirectSpaceState GD|Physics2DDirectSpaceState]]|| [[#space_get_direct_state|space_get_direct_state]] '''(''' [[RID GD|RID]] space ''')'''                                                                                                                                                                                                                                      |-| float|| [[#space_get_param|space_get_param]] '''(''' [[RID GD|RID]] space, [[#SpaceParameter|SpaceParameter]] param ''')''' const                                                                                                                                                                            |-| bool|| [[#space_is_active|space_is_active]] '''(''' [[RID GD|RID]] space ''')''' const                                                                                                                                                                                                                                              |-| void|| [[#space_set_active|space_set_active]] '''(''' [[RID GD|RID]] space, bool active ''')'''                                                                                                                                                                                                                  |-| void|| [[#space_set_param|space_set_param]] '''(''' [[RID GD|RID]] space, [[#SpaceParameter|SpaceParameter]] param, float value ''')'''                                                                                                                                                 |}== Enumerations ===== SpaceParameter ====== SPACE_PARAM_CONTACT_RECYCLE_RADIUS ====== SPACE_PARAM_CONTACT_MAX_SEPARATION ====== SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION ====== SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD ====== SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD ====== SPACE_PARAM_BODY_TIME_TO_SLEEP ====== SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS ====== SPACE_PARAM_TEST_MOTION_MIN_CONTACT_DEPTH ===enum '''SpaceParameter''':*  '''SPACE_PARAM_CONTACT_RECYCLE_RADIUS''' = '''0'''  Constant to set/get the maximum distance a pair of bodies has to move before their collision status has to be recalculated.*  '''SPACE_PARAM_CONTACT_MAX_SEPARATION''' = '''1'''  Constant to set/get the maximum distance a shape can be from another before they are considered separated.*  '''SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION''' = '''2'''  Constant to set/get the maximum distance a shape can penetrate another shape before it is considered a collision.*  '''SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD''' = '''3'''  Constant to set/get the threshold linear velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.*  '''SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD''' = '''4'''  Constant to set/get the threshold angular velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.*  '''SPACE_PARAM_BODY_TIME_TO_SLEEP''' = '''5'''  Constant to set/get the maximum time of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after this time.*  '''SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS''' = '''6'''  Constant to set/get the default solver bias for all physics constraints. A solver bias is a factor controlling how much two objects "rebound", after violating a constraint, to avoid leaving them in that state because of numerical imprecision.*  '''SPACE_PARAM_TEST_MOTION_MIN_CONTACT_DEPTH''' = '''7'''=== ShapeType ====== SHAPE_LINE ====== SHAPE_RAY ====== SHAPE_SEGMENT ====== SHAPE_CIRCLE ====== SHAPE_RECTANGLE ====== SHAPE_CAPSULE ====== SHAPE_CONVEX_POLYGON ====== SHAPE_CONCAVE_POLYGON ====== SHAPE_CUSTOM ===enum '''ShapeType''':*  '''SHAPE_LINE''' = '''0'''  This is the constant for creating line shapes. A line shape is an infinite line with an origin point, and a normal. Thus, it can be used for front/behind checks.*  '''SHAPE_RAY''' = '''1'''*  '''SHAPE_SEGMENT''' = '''2'''  This is the constant for creating segment shapes. A segment shape is a line from a point A to a point B. It can be checked for intersections.*  '''SHAPE_CIRCLE''' = '''3'''  This is the constant for creating circle shapes. A circle shape only has a radius. It can be used for intersections and inside/outside checks.*  '''SHAPE_RECTANGLE''' = '''4'''  This is the constant for creating rectangle shapes. A rectangle shape is defined by a width and a height. It can be used for intersections and inside/outside checks.*  '''SHAPE_CAPSULE''' = '''5'''  This is the constant for creating capsule shapes. A capsule shape is defined by a radius and a length. It can be used for intersections and inside/outside checks.*  '''SHAPE_CONVEX_POLYGON''' = '''6'''  This is the constant for creating convex polygon shapes. A polygon is defined by a list of points. It can be used for intersections and inside/outside checks. Unlike the [[CollisionPolygon2D GD#polygon|CollisionPolygon2D.polygon()]] property, polygons modified with [[#shape_set_data|shape_set_data]] do not verify that the points supplied form is a convex polygon.*  '''SHAPE_CONCAVE_POLYGON''' = '''7'''  This is the constant for creating concave polygon shapes. A polygon is defined by a list of points. It can be used for intersections checks, but not for inside/outside checks.*  '''SHAPE_CUSTOM''' = '''8'''  This constant is used internally by the engine. Any attempt to create this kind of shape results in an error.=== AreaParameter ====== AREA_PARAM_GRAVITY ====== AREA_PARAM_GRAVITY_VECTOR ====== AREA_PARAM_GRAVITY_IS_POINT ====== AREA_PARAM_GRAVITY_DISTANCE_SCALE ====== AREA_PARAM_GRAVITY_POINT_ATTENUATION ====== AREA_PARAM_LINEAR_DAMP ====== AREA_PARAM_ANGULAR_DAMP ====== AREA_PARAM_PRIORITY ===enum '''AreaParameter''':*  '''AREA_PARAM_GRAVITY''' = '''0'''  Constant to set/get gravity strength in an area.*  '''AREA_PARAM_GRAVITY_VECTOR''' = '''1'''  Constant to set/get gravity vector/center in an area.*  '''AREA_PARAM_GRAVITY_IS_POINT''' = '''2'''  Constant to set/get whether the gravity vector of an area is a direction, or a center point.*  '''AREA_PARAM_GRAVITY_DISTANCE_SCALE''' = '''3'''  Constant to set/get the falloff factor for point gravity of an area. The greater this value is, the faster the strength of gravity decreases with the square of distance.*  '''AREA_PARAM_GRAVITY_POINT_ATTENUATION''' = '''4'''  This constant was used to set/get the falloff factor for point gravity. It has been superseded by [[Physics2DServer GD#AREA_PARAM_GRAVITY_DISTANCE_SCALE|AREA_PARAM_GRAVITY_DISTANCE_SCALE]].*  '''AREA_PARAM_LINEAR_DAMP''' = '''5'''  Constant to set/get the linear dampening factor of an area.*  '''AREA_PARAM_ANGULAR_DAMP''' = '''6'''  Constant to set/get the angular dampening factor of an area.*  '''AREA_PARAM_PRIORITY''' = '''7'''  Constant to set/get the priority (order of processing) of an area.=== AreaSpaceOverrideMode ====== AREA_SPACE_OVERRIDE_DISABLED ====== AREA_SPACE_OVERRIDE_COMBINE ====== AREA_SPACE_OVERRIDE_COMBINE_REPLACE ====== AREA_SPACE_OVERRIDE_REPLACE ====== AREA_SPACE_OVERRIDE_REPLACE_COMBINE ===enum '''AreaSpaceOverrideMode''':*  '''AREA_SPACE_OVERRIDE_DISABLED''' = '''0'''  This area does not affect gravity/damp. These are generally areas that exist only to detect collisions, and objects entering or exiting them.*  '''AREA_SPACE_OVERRIDE_COMBINE''' = '''1'''  This area adds its gravity/damp values to whatever has been calculated so far. This way, many overlapping areas can combine their physics to make interesting effects.*  '''AREA_SPACE_OVERRIDE_COMBINE_REPLACE''' = '''2'''  This area adds its gravity/damp values to whatever has been calculated so far. Then stops taking into account the rest of the areas, even the default one.*  '''AREA_SPACE_OVERRIDE_REPLACE''' = '''3'''  This area replaces any gravity/damp, even the default one, and stops taking into account the rest of the areas.*  '''AREA_SPACE_OVERRIDE_REPLACE_COMBINE''' = '''4'''  This area replaces any gravity/damp calculated so far, but keeps calculating the rest of the areas, down to the default one.=== BodyMode ====== BODY_MODE_STATIC ====== BODY_MODE_KINEMATIC ====== BODY_MODE_RIGID ====== BODY_MODE_CHARACTER ===enum '''BodyMode''':*  '''BODY_MODE_STATIC''' = '''0'''  Constant for static bodies.*  '''BODY_MODE_KINEMATIC''' = '''1'''  Constant for kinematic bodies.*  '''BODY_MODE_RIGID''' = '''2'''  Constant for rigid bodies.*  '''BODY_MODE_CHARACTER''' = '''3'''  Constant for rigid bodies in character mode. In this mode, a body can not rotate, and only its linear velocity is affected by physics.=== BodyParameter ====== BODY_PARAM_BOUNCE ====== BODY_PARAM_FRICTION ====== BODY_PARAM_MASS ====== BODY_PARAM_INERTIA ====== BODY_PARAM_GRAVITY_SCALE ====== BODY_PARAM_LINEAR_DAMP ====== BODY_PARAM_ANGULAR_DAMP ====== BODY_PARAM_MAX ===enum '''BodyParameter''':*  '''BODY_PARAM_BOUNCE''' = '''0'''  Constant to set/get a body's bounce factor.*  '''BODY_PARAM_FRICTION''' = '''1'''  Constant to set/get a body's friction.*  '''BODY_PARAM_MASS''' = '''2'''  Constant to set/get a body's mass.*  '''BODY_PARAM_INERTIA''' = '''3'''  Constant to set/get a body's inertia.*  '''BODY_PARAM_GRAVITY_SCALE''' = '''4'''  Constant to set/get a body's gravity multiplier.*  '''BODY_PARAM_LINEAR_DAMP''' = '''5'''  Constant to set/get a body's linear dampening factor.*  '''BODY_PARAM_ANGULAR_DAMP''' = '''6'''  Constant to set/get a body's angular dampening factor.*  '''BODY_PARAM_MAX''' = '''7'''  Represents the size of the [[#BodyParameter|BodyParameter]] enum.=== BodyState ====== BODY_STATE_TRANSFORM ====== BODY_STATE_LINEAR_VELOCITY ====== BODY_STATE_ANGULAR_VELOCITY ====== BODY_STATE_SLEEPING ====== BODY_STATE_CAN_SLEEP ===enum '''BodyState''':*  '''BODY_STATE_TRANSFORM''' = '''0'''  Constant to set/get the current transform matrix of the body.*  '''BODY_STATE_LINEAR_VELOCITY''' = '''1'''  Constant to set/get the current linear velocity of the body.*  '''BODY_STATE_ANGULAR_VELOCITY''' = '''2'''  Constant to set/get the current angular velocity of the body.*  '''BODY_STATE_SLEEPING''' = '''3'''  Constant to sleep/wake up a body, or to get whether it is sleeping.*  '''BODY_STATE_CAN_SLEEP''' = '''4'''  Constant to set/get whether the body can sleep.=== JointType ====== JOINT_PIN ====== JOINT_GROOVE ====== JOINT_DAMPED_SPRING ===enum '''JointType''':*  '''JOINT_PIN''' = '''0'''  Constant to create pin joints.*  '''JOINT_GROOVE''' = '''1'''  Constant to create groove joints.*  '''JOINT_DAMPED_SPRING''' = '''2'''  Constant to create damped spring joints.=== JointParam ====== JOINT_PARAM_BIAS ====== JOINT_PARAM_MAX_BIAS ====== JOINT_PARAM_MAX_FORCE ===enum '''JointParam''':*  '''JOINT_PARAM_BIAS''' = '''0'''*  '''JOINT_PARAM_MAX_BIAS''' = '''1'''*  '''JOINT_PARAM_MAX_FORCE''' = '''2'''=== DampedStringParam ====== DAMPED_STRING_REST_LENGTH ====== DAMPED_STRING_STIFFNESS ====== DAMPED_STRING_DAMPING ===enum '''DampedStringParam''':*  '''DAMPED_STRING_REST_LENGTH''' = '''0'''  Sets the resting length of the spring joint. The joint will always try to go to back this length when pulled apart.*  '''DAMPED_STRING_STIFFNESS''' = '''1'''  Sets the stiffness of the spring joint. The joint applies a force equal to the stiffness times the distance from its resting length.*  '''DAMPED_STRING_DAMPING''' = '''2'''  Sets the damping ratio of the spring joint. A value of 0 indicates an undamped spring, while 1 causes the system to reach equilibrium as fast as possible (critical damping).=== CCDMode ====== CCD_MODE_DISABLED ====== CCD_MODE_CAST_RAY ====== CCD_MODE_CAST_SHAPE ===enum '''CCDMode''':*  '''CCD_MODE_DISABLED''' = '''0'''  Disables continuous collision detection. This is the fastest way to detect body collisions, but can miss small, fast-moving objects.*  '''CCD_MODE_CAST_RAY''' = '''1'''  Enables continuous collision detection by raycasting. It is faster than shapecasting, but less precise.*  '''CCD_MODE_CAST_SHAPE''' = '''2'''  Enables continuous collision detection by shapecasting. It is the slowest CCD method, and the most precise.=== AreaBodyStatus ====== AREA_BODY_ADDED ====== AREA_BODY_REMOVED ===enum '''AreaBodyStatus''':*  '''AREA_BODY_ADDED''' = '''0'''  The value of the first parameter and area callback function receives, when an object enters one of its shapes.*  '''AREA_BODY_REMOVED''' = '''1'''  The value of the first parameter and area callback function receives, when an object exits one of its shapes.=== ProcessInfo ====== INFO_ACTIVE_OBJECTS ====== INFO_COLLISION_PAIRS ====== INFO_ISLAND_COUNT ===enum '''ProcessInfo''':*  '''INFO_ACTIVE_OBJECTS''' = '''0'''  Constant to get the number of objects that are not sleeping.*  '''INFO_COLLISION_PAIRS''' = '''1'''  Constant to get the number of possible collisions.*  '''INFO_ISLAND_COUNT''' = '''2'''  Constant to get the number of space regions where a collision could occur.== Method Descriptions ===== area_add_shape ===*  void '''area_add_shape''' '''(''' [[RID GD|RID]] area, [[RID GD|RID]] shape, [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), bool disabled=false ''')'''Adds a shape to the area, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.=== area_attach_canvas_instance_id ===*  void '''area_attach_canvas_instance_id''' '''(''' [[RID GD|RID]] area, int id ''')'''=== area_attach_object_instance_id ===*  void '''area_attach_object_instance_id''' '''(''' [[RID GD|RID]] area, int id ''')'''Assigns the area to a descendant of [[Object GD|Object]], so it can exist in the node tree.=== area_clear_shapes ===*  void '''area_clear_shapes''' '''(''' [[RID GD|RID]] area ''')'''Removes all shapes from an area. It does not delete the shapes, so they can be reassigned later.=== area_create ===*  [[RID GD|RID]] '''area_create ( )'''Creates an [[Area2D GD|Area2D]].=== area_get_canvas_instance_id ===*  int '''area_get_canvas_instance_id''' '''(''' [[RID GD|RID]] area ''')''' const=== area_get_object_instance_id ===*  int '''area_get_object_instance_id''' '''(''' [[RID GD|RID]] area ''')''' constGets the instance ID of the object the area is assigned to.=== area_get_param ===*  [[Variant GD|Variant]] '''area_get_param''' '''(''' [[RID GD|RID]] area, [[#AreaParameter|AreaParameter]] param ''')''' constReturns an area parameter value. See [[#AreaParameter|AreaParameter]] for a list of available parameters.=== area_get_shape ===*  [[RID GD|RID]] '''area_get_shape''' '''(''' [[RID GD|RID]] area, int shape_idx ''')''' constReturns the [[RID GD|RID]] of the nth shape of an area.=== area_get_shape_count ===*  int '''area_get_shape_count''' '''(''' [[RID GD|RID]] area ''')''' constReturns the number of shapes assigned to an area.=== area_get_shape_transform ===*  [[Transform2D GD|Transform2D]] '''area_get_shape_transform''' '''(''' [[RID GD|RID]] area, int shape_idx ''')''' constReturns the transform matrix of a shape within an area.=== area_get_space ===*  [[RID GD|RID]] '''area_get_space''' '''(''' [[RID GD|RID]] area ''')''' constReturns the space assigned to the area.=== area_get_space_override_mode ===*  [[#AreaSpaceOverrideMode|AreaSpaceOverrideMode]] '''area_get_space_override_mode''' '''(''' [[RID GD|RID]] area ''')''' constReturns the space override mode for the area.=== area_get_transform ===*  [[Transform2D GD|Transform2D]] '''area_get_transform''' '''(''' [[RID GD|RID]] area ''')''' constReturns the transform matrix for an area.=== area_remove_shape ===*  void '''area_remove_shape''' '''(''' [[RID GD|RID]] area, int shape_idx ''')'''Removes a shape from an area. It does not delete the shape, so it can be reassigned later.=== area_set_area_monitor_callback ===*  void '''area_set_area_monitor_callback''' '''(''' [[RID GD|RID]] area, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method ''')'''=== area_set_collision_layer ===*  void '''area_set_collision_layer''' '''(''' [[RID GD|RID]] area, int layer ''')'''Assigns the area to one or many physics layers.=== area_set_collision_mask ===*  void '''area_set_collision_mask''' '''(''' [[RID GD|RID]] area, int mask ''')'''Sets which physics layers the area will monitor.=== area_set_monitor_callback ===*  void '''area_set_monitor_callback''' '''(''' [[RID GD|RID]] area, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method ''')'''Sets the function to call when any body/area enters or exits the area. This callback will be called for any object interacting with the area, and takes five parameters:1: [[Physics2DServer GD#AREA_BODY_ADDED|AREA_BODY_ADDED]] or [[Physics2DServer GD#AREA_BODY_REMOVED|AREA_BODY_REMOVED]], depending on whether the object entered or exited the area.2: [[RID GD|RID]] of the object that entered/exited the area.3: Instance ID of the object that entered/exited the area.4: The shape index of the object that entered/exited the area.5: The shape index of the area where the object entered/exited.=== area_set_monitorable ===*  void '''area_set_monitorable''' '''(''' [[RID GD|RID]] area, bool monitorable ''')'''=== area_set_param ===*  void '''area_set_param''' '''(''' [[RID GD|RID]] area, [[#AreaParameter|AreaParameter]] param, [[Variant GD|Variant]] value ''')'''Sets the value for an area parameter. See [[#AreaParameter|AreaParameter]] for a list of available parameters.=== area_set_shape ===*  void '''area_set_shape''' '''(''' [[RID GD|RID]] area, int shape_idx, [[RID GD|RID]] shape ''')'''Substitutes a given area shape by another. The old shape is selected by its index, the new one by its [[RID GD|RID]].=== area_set_shape_disabled ===*  void '''area_set_shape_disabled''' '''(''' [[RID GD|RID]] area, int shape_idx, bool disabled ''')'''Disables a given shape in an area.=== area_set_shape_transform ===*  void '''area_set_shape_transform''' '''(''' [[RID GD|RID]] area, int shape_idx, [[Transform2D GD|Transform2D]] transform ''')'''Sets the transform matrix for an area shape.=== area_set_space ===*  void '''area_set_space''' '''(''' [[RID GD|RID]] area, [[RID GD|RID]] space ''')'''Assigns a space to the area.=== area_set_space_override_mode ===*  void '''area_set_space_override_mode''' '''(''' [[RID GD|RID]] area, [[#AreaSpaceOverrideMode|AreaSpaceOverrideMode]] mode ''')'''Sets the space override mode for the area. See [[#AreaSpaceOverrideMode|AreaSpaceOverrideMode]] for a list of available modes.=== area_set_transform ===*  void '''area_set_transform''' '''(''' [[RID GD|RID]] area, [[Transform2D GD|Transform2D]] transform ''')'''Sets the transform matrix for an area.=== body_add_central_force ===*  void '''body_add_central_force''' '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] force ''')'''=== body_add_collision_exception ===*  void '''body_add_collision_exception''' '''(''' [[RID GD|RID]] body, [[RID GD|RID]] excepted_body ''')'''Adds a body to the list of bodies exempt from collisions.=== body_add_force ===*  void '''body_add_force''' '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] offset, [[Vector2 GD|Vector2]] force ''')'''Adds a positioned force to the applied force and torque. As with [[#body_apply_impulse|body_apply_impulse]], both the force and the offset from the body origin are in global coordinates. A force differs from an impulse in that, while the two are forces, the impulse clears itself after being applied.=== body_add_shape ===*  void '''body_add_shape''' '''(''' [[RID GD|RID]] body, [[RID GD|RID]] shape, [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), bool disabled=false ''')'''Adds a shape to the body, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.=== body_add_torque ===*  void '''body_add_torque''' '''(''' [[RID GD|RID]] body, float torque ''')'''=== body_apply_central_impulse ===*  void '''body_apply_central_impulse''' '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] impulse ''')'''=== body_apply_impulse ===*  void '''body_apply_impulse''' '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] position, [[Vector2 GD|Vector2]] impulse ''')'''Adds a positioned impulse to the applied force and torque. Both the force and the offset from the body origin are in global coordinates.=== body_apply_torque_impulse ===*  void '''body_apply_torque_impulse''' '''(''' [[RID GD|RID]] body, float impulse ''')'''=== body_attach_canvas_instance_id ===*  void '''body_attach_canvas_instance_id''' '''(''' [[RID GD|RID]] body, int id ''')'''=== body_attach_object_instance_id ===*  void '''body_attach_object_instance_id''' '''(''' [[RID GD|RID]] body, int id ''')'''Assigns the area to a descendant of [[Object GD|Object]], so it can exist in the node tree.=== body_clear_shapes ===*  void '''body_clear_shapes''' '''(''' [[RID GD|RID]] body ''')'''Removes all shapes from a body.=== body_create ===*  [[RID GD|RID]] '''body_create ( )'''Creates a physics body.=== body_get_canvas_instance_id ===*  int '''body_get_canvas_instance_id''' '''(''' [[RID GD|RID]] body ''')''' const=== body_get_collision_layer ===*  int '''body_get_collision_layer''' '''(''' [[RID GD|RID]] body ''')''' constReturns the physics layer or layers a body belongs to.=== body_get_collision_mask ===*  int '''body_get_collision_mask''' '''(''' [[RID GD|RID]] body ''')''' constReturns the physics layer or layers a body can collide with.=== body_get_continuous_collision_detection_mode ===*  [[#CCDMode|CCDMode]] '''body_get_continuous_collision_detection_mode''' '''(''' [[RID GD|RID]] body ''')''' constReturns the continuous collision detection mode.=== body_get_direct_state ===*  [[Physics2DDirectBodyState GD|Physics2DDirectBodyState]] '''body_get_direct_state''' '''(''' [[RID GD|RID]] body ''')'''Returns the [[Physics2DDirectBodyState GD|Physics2DDirectBodyState]] of the body.=== body_get_max_contacts_reported ===*  int '''body_get_max_contacts_reported''' '''(''' [[RID GD|RID]] body ''')''' constReturns the maximum contacts that can be reported. See [[#body_set_max_contacts_reported|body_set_max_contacts_reported]].=== body_get_mode ===*  [[#BodyMode|BodyMode]] '''body_get_mode''' '''(''' [[RID GD|RID]] body ''')''' constReturns the body mode.=== body_get_object_instance_id ===*  int '''body_get_object_instance_id''' '''(''' [[RID GD|RID]] body ''')''' constGets the instance ID of the object the area is assigned to.=== body_get_param ===*  float '''body_get_param''' '''(''' [[RID GD|RID]] body, [[#BodyParameter|BodyParameter]] param ''')''' constReturns the value of a body parameter. See [[#BodyParameter|BodyParameter]] for a list of available parameters.=== body_get_shape ===*  [[RID GD|RID]] '''body_get_shape''' '''(''' [[RID GD|RID]] body, int shape_idx ''')''' constReturns the [[RID GD|RID]] of the nth shape of a body.=== body_get_shape_count ===*  int '''body_get_shape_count''' '''(''' [[RID GD|RID]] body ''')''' constReturns the number of shapes assigned to a body.=== body_get_shape_metadata ===*  [[Variant GD|Variant]] '''body_get_shape_metadata''' '''(''' [[RID GD|RID]] body, int shape_idx ''')''' constReturns the metadata of a shape of a body.=== body_get_shape_transform ===*  [[Transform2D GD|Transform2D]] '''body_get_shape_transform''' '''(''' [[RID GD|RID]] body, int shape_idx ''')''' constReturns the transform matrix of a body shape.=== body_get_space ===*  [[RID GD|RID]] '''body_get_space''' '''(''' [[RID GD|RID]] body ''')''' constReturns the [[RID GD|RID]] of the space assigned to a body.=== body_get_state ===*  [[Variant GD|Variant]] '''body_get_state''' '''(''' [[RID GD|RID]] body, [[#BodyState|BodyState]] state ''')''' constReturns a body state.=== body_is_omitting_force_integration ===*  bool '''body_is_omitting_force_integration''' '''(''' [[RID GD|RID]] body ''')''' constReturns whether a body uses a callback function to calculate its own physics (see [[#body_set_force_integration_callback|body_set_force_integration_callback]]).=== body_remove_collision_exception ===*  void '''body_remove_collision_exception''' '''(''' [[RID GD|RID]] body, [[RID GD|RID]] excepted_body ''')'''Removes a body from the list of bodies exempt from collisions.=== body_remove_shape ===*  void '''body_remove_shape''' '''(''' [[RID GD|RID]] body, int shape_idx ''')'''Removes a shape from a body. The shape is not deleted, so it can be reused afterwards.=== body_set_axis_velocity ===*  void '''body_set_axis_velocity''' '''(''' [[RID GD|RID]] body, [[Vector2 GD|Vector2]] axis_velocity ''')'''Sets an axis velocity. The velocity in the given vector axis will be set as the given vector length. This is useful for jumping behavior.=== body_set_collision_layer ===*  void '''body_set_collision_layer''' '''(''' [[RID GD|RID]] body, int layer ''')'''Sets the physics layer or layers a body belongs to.=== body_set_collision_mask ===*  void '''body_set_collision_mask''' '''(''' [[RID GD|RID]] body, int mask ''')'''Sets the physics layer or layers a body can collide with.=== body_set_continuous_collision_detection_mode ===*  void '''body_set_continuous_collision_detection_mode''' '''(''' [[RID GD|RID]] body, [[#CCDMode|CCDMode]] mode ''')'''Sets the continuous collision detection mode using one of the [[#CCDMode|CCDMode]] constants.Continuous collision detection tries to predict where a moving body will collide, instead of moving it and correcting its movement if it collided.=== body_set_force_integration_callback ===*  void '''body_set_force_integration_callback''' '''(''' [[RID GD|RID]] body, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method, [[Variant GD|Variant]] userdata=null ''')'''Sets the function used to calculate physics for an object, if that object allows it (see [[#body_set_omit_force_integration|body_set_omit_force_integration]]).=== body_set_max_contacts_reported ===*  void '''body_set_max_contacts_reported''' '''(''' [[RID GD|RID]] body, int amount ''')'''Sets the maximum contacts to report. Bodies can keep a log of the contacts with other bodies, this is enabled by setting the maximum amount of contacts reported to a number greater than 0.=== body_set_mode ===*  void '''body_set_mode''' '''(''' [[RID GD|RID]] body, [[#BodyMode|BodyMode]] mode ''')'''Sets the body mode using one of the [[#BodyMode|BodyMode]] constants.=== body_set_omit_force_integration ===*  void '''body_set_omit_force_integration''' '''(''' [[RID GD|RID]] body, bool enable ''')'''Sets whether a body uses a callback function to calculate its own physics (see [[#body_set_force_integration_callback|body_set_force_integration_callback]]).=== body_set_param ===*  void '''body_set_param''' '''(''' [[RID GD|RID]] body, [[#BodyParameter|BodyParameter]] param, float value ''')'''Sets a body parameter. See [[#BodyParameter|BodyParameter]] for a list of available parameters.=== body_set_shape ===*  void '''body_set_shape''' '''(''' [[RID GD|RID]] body, int shape_idx, [[RID GD|RID]] shape ''')'''Substitutes a given body shape by another. The old shape is selected by its index, the new one by its [[RID GD|RID]].=== body_set_shape_as_one_way_collision ===*  void '''body_set_shape_as_one_way_collision''' '''(''' [[RID GD|RID]] body, int shape_idx, bool enable, float margin ''')'''Enables one way collision on body if {{Span|enable}} is {{Span|true}}.=== body_set_shape_disabled ===*  void '''body_set_shape_disabled''' '''(''' [[RID GD|RID]] body, int shape_idx, bool disabled ''')'''Disables shape in body if {{Span|disable}} is {{Span|true}}.=== body_set_shape_metadata ===*  void '''body_set_shape_metadata''' '''(''' [[RID GD|RID]] body, int shape_idx, [[Variant GD|Variant]] metadata ''')'''Sets metadata of a shape within a body. This metadata is different from [[Object GD#set_meta|Object.set_meta()]], and can be retrieved on shape queries.=== body_set_shape_transform ===*  void '''body_set_shape_transform''' '''(''' [[RID GD|RID]] body, int shape_idx, [[Transform2D GD|Transform2D]] transform ''')'''Sets the transform matrix for a body shape.=== body_set_space ===*  void '''body_set_space''' '''(''' [[RID GD|RID]] body, [[RID GD|RID]] space ''')'''Assigns a space to the body (see [[#space_create|space_create]]).=== body_set_state ===*  void '''body_set_state''' '''(''' [[RID GD|RID]] body, [[#BodyState|BodyState]] state, [[Variant GD|Variant]] value ''')'''Sets a body state using one of the [[#BodyState|BodyState]] constants.=== body_test_motion ===*  bool '''body_test_motion''' '''(''' [[RID GD|RID]] body, [[Transform2D GD|Transform2D]] from, [[Vector2 GD|Vector2]] motion, bool infinite_inertia, float margin=0.08, [[Physics2DTestMotionResult GD|Physics2DTestMotionResult]] result=null ''')'''Returns {{Span|true}} if a collision would result from moving in the given direction from a given point in space. Margin increases the size of the shapes involved in the collision detection. [[Physics2DTestMotionResult GD|Physics2DTestMotionResult]] can be passed to return additional information in.=== capsule_shape_create ===*  [[RID GD|RID]] '''capsule_shape_create ( )'''=== circle_shape_create ===*  [[RID GD|RID]] '''circle_shape_create ( )'''=== concave_polygon_shape_create ===*  [[RID GD|RID]] '''concave_polygon_shape_create ( )'''=== convex_polygon_shape_create ===*  [[RID GD|RID]] '''convex_polygon_shape_create ( )'''=== damped_spring_joint_create ===*  [[RID GD|RID]] '''damped_spring_joint_create''' '''(''' [[Vector2 GD|Vector2]] anchor_a, [[Vector2 GD|Vector2]] anchor_b, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''Creates a damped spring joint between two bodies. If not specified, the second body is assumed to be the joint itself.=== damped_string_joint_get_param ===*  float '''damped_string_joint_get_param''' '''(''' [[RID GD|RID]] joint, [[#DampedStringParam|DampedStringParam]] param ''')''' constReturns the value of a damped spring joint parameter.=== damped_string_joint_set_param ===*  void '''damped_string_joint_set_param''' '''(''' [[RID GD|RID]] joint, [[#DampedStringParam|DampedStringParam]] param, float value ''')'''Sets a damped spring joint parameter. See [[#DampedStringParam|DampedStringParam]] for a list of available parameters.=== free_rid ===*  void '''free_rid''' '''(''' [[RID GD|RID]] rid ''')'''Destroys any of the objects created by Physics2DServer. If the [[RID GD|RID]] passed is not one of the objects that can be created by Physics2DServer, an error will be sent to the console.=== get_process_info ===*  int '''get_process_info''' '''(''' [[#ProcessInfo|ProcessInfo]] process_info ''')'''Returns information about the current state of the 2D physics engine. See [[#ProcessInfo|ProcessInfo]] for a list of available states.=== groove_joint_create ===*  [[RID GD|RID]] '''groove_joint_create''' '''(''' [[Vector2 GD|Vector2]] groove1_a, [[Vector2 GD|Vector2]] groove2_a, [[Vector2 GD|Vector2]] anchor_b, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''Creates a groove joint between two bodies. If not specified, the bodies are assumed to be the joint itself.=== joint_get_param ===*  float '''joint_get_param''' '''(''' [[RID GD|RID]] joint, [[#JointParam|JointParam]] param ''')''' constReturns the value of a joint parameter.=== joint_get_type ===*  [[#JointType|JointType]] '''joint_get_type''' '''(''' [[RID GD|RID]] joint ''')''' constReturns a joint's type (see [[#JointType|JointType]]).=== joint_set_param ===*  void '''joint_set_param''' '''(''' [[RID GD|RID]] joint, [[#JointParam|JointParam]] param, float value ''')'''Sets a joint parameter. See [[#JointParam|JointParam]] for a list of available parameters.=== line_shape_create ===*  [[RID GD|RID]] '''line_shape_create ( )'''=== pin_joint_create ===*  [[RID GD|RID]] '''pin_joint_create''' '''(''' [[Vector2 GD|Vector2]] anchor, [[RID GD|RID]] body_a, [[RID GD|RID]] body_b ''')'''Creates a pin joint between two bodies. If not specified, the second body is assumed to be the joint itself.=== ray_shape_create ===*  [[RID GD|RID]] '''ray_shape_create ( )'''=== rectangle_shape_create ===*  [[RID GD|RID]] '''rectangle_shape_create ( )'''=== segment_shape_create ===*  [[RID GD|RID]] '''segment_shape_create ( )'''=== set_active ===*  void '''set_active''' '''(''' bool active ''')'''Activates or deactivates the 2D physics engine.=== shape_get_data ===*  [[Variant GD|Variant]] '''shape_get_data''' '''(''' [[RID GD|RID]] shape ''')''' constReturns the shape data.=== shape_get_type ===*  [[#ShapeType|ShapeType]] '''shape_get_type''' '''(''' [[RID GD|RID]] shape ''')''' constReturns a shape's type (see [[#ShapeType|ShapeType]]).=== shape_set_data ===*  void '''shape_set_data''' '''(''' [[RID GD|RID]] shape, [[Variant GD|Variant]] data ''')'''Sets the shape data that defines its shape and size. The data to be passed depends on the kind of shape created [[#shape_get_type|shape_get_type]].=== space_create ===*  [[RID GD|RID]] '''space_create ( )'''Creates a space. A space is a collection of parameters for the physics engine that can be assigned to an area or a body. It can be assigned to an area with [[#area_set_space|area_set_space]], or to a body with [[#body_set_space|body_set_space]].=== space_get_direct_state ===*  [[Physics2DDirectSpaceState GD|Physics2DDirectSpaceState]] '''space_get_direct_state''' '''(''' [[RID GD|RID]] space ''')'''Returns the state of a space, a [[Physics2DDirectSpaceState GD|Physics2DDirectSpaceState]]. This object can be used to make collision/intersection queries.=== space_get_param ===*  float '''space_get_param''' '''(''' [[RID GD|RID]] space, [[#SpaceParameter|SpaceParameter]] param ''')''' constReturns the value of a space parameter.=== space_is_active ===*  bool '''space_is_active''' '''(''' [[RID GD|RID]] space ''')''' constReturns whether the space is active.=== space_set_active ===*  void '''space_set_active''' '''(''' [[RID GD|RID]] space, bool active ''')'''Marks a space as active. It will not have an effect, unless it is assigned to an area or body.=== space_set_param ===*  void '''space_set_param''' '''(''' [[RID GD|RID]] space, [[#SpaceParameter|SpaceParameter]] param, float value ''')'''Sets the value for a space parameter. See [[#SpaceParameter|SpaceParameter]] for a list of available parameters.