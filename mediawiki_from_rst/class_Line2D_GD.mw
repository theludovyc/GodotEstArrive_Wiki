__NOTOC__'''Inherits:''' [[Node2D GD|Node2D]] '''<''' [[CanvasItem GD|CanvasItem]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]A 2D line.== Description ==A line through several points in 2D space.== Properties =={| class="wikitable | bool|| [[#antialiased|antialiased]]|| {{Span|false}}                   |-| [[#LineCapMode|LineCapMode]]|| [[#begin_cap_mode|begin_cap_mode]]|| {{Span|0}}                       |-| [[Color GD|Color]]|| [[#default_color|default_color]]|| {{Span|Color( 0.4, 0.5, 1, 1 )}} |-| [[#LineCapMode|LineCapMode]]|| [[#end_cap_mode|end_cap_mode]]|| {{Span|0}}                       |-| [[Gradient GD|Gradient]]|| [[#gradient|gradient]]||                             |-| [[#LineJointMode|LineJointMode]]|| [[#joint_mode|joint_mode]]|| {{Span|0}}                       |-| [[PackedVector2Array GD|PackedVector2Array]]|| [[#points|points]]|| {{Span|PackedVector2Array(  )}}  |-| int|| [[#round_precision|round_precision]]|| {{Span|8}}                       |-| float|| [[#sharp_limit|sharp_limit]]|| {{Span|2.0}}                     |-| [[Texture2D GD|Texture2D]]|| [[#texture|texture]]||                             |-| [[#LineTextureMode|LineTextureMode]]|| [[#texture_mode|texture_mode]]|| {{Span|0}}                       |-| float|| [[#width|width]]|| {{Span|10.0}}                    |-| [[Curve GD|Curve]]|| [[#width_curve|width_curve]]||                             |}== Methods =={| class="wikitable | void|| [[#add_point|add_point]] '''(''' [[Vector2 GD|Vector2]] position, int at_position=-1 ''')'''      |-| void|| [[#clear_points|clear_points]] '''(''' ''')'''                                                                             |-| int|| [[#get_point_count|get_point_count]] '''(''' ''')''' const                                                                 |-| [[Vector2 GD|Vector2]]|| [[#get_point_position|get_point_position]] '''(''' int i ''')''' const                                   |-| void|| [[#remove_point|remove_point]] '''(''' int i ''')'''                                                     |-| void|| [[#set_point_position|set_point_position]] '''(''' int i, [[Vector2 GD|Vector2]] position ''')''' |}== Enumerations ===== LineJointMode ====== LINE_JOINT_SHARP ====== LINE_JOINT_BEVEL ====== LINE_JOINT_ROUND ===enum '''LineJointMode''':*  '''LINE_JOINT_SHARP''' = '''0'''  The line's joints will be pointy. If {{Span|sharp_limit}} is greater than the rotation of a joint, it becomes a bevel joint instead.*  '''LINE_JOINT_BEVEL''' = '''1'''  The line's joints will be bevelled/chamfered.*  '''LINE_JOINT_ROUND''' = '''2'''  The line's joints will be rounded.=== LineCapMode ====== LINE_CAP_NONE ====== LINE_CAP_BOX ====== LINE_CAP_ROUND ===enum '''LineCapMode''':*  '''LINE_CAP_NONE''' = '''0'''  Don't draw a line cap.*  '''LINE_CAP_BOX''' = '''1'''  Draws the line cap as a box.*  '''LINE_CAP_ROUND''' = '''2'''  Draws the line cap as a circle.=== LineTextureMode ====== LINE_TEXTURE_NONE ====== LINE_TEXTURE_TILE ====== LINE_TEXTURE_STRETCH ===enum '''LineTextureMode''':*  '''LINE_TEXTURE_NONE''' = '''0'''  Takes the left pixels of the texture and renders it over the whole line.*  '''LINE_TEXTURE_TILE''' = '''1'''  Tiles the texture over the line. The texture must be imported with '''Repeat''' enabled for it to work properly.*  '''LINE_TEXTURE_STRETCH''' = '''2'''  Stretches the texture across the line. Import the texture with '''Repeat''' disabled for best results.== Property Descriptions ===== antialiased ===*  bool '''antialiased'''{| class="wikitable | ''Default''|| {{Span|false}}              |-| ''Setter''|| set_antialiased(value) |-| ''Getter''|| get_antialiased()      |}If {{Span|true}}, the line's border will be anti-aliased.=== begin_cap_mode ===*  [[#LineCapMode|LineCapMode]] '''begin_cap_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_begin_cap_mode(value) |-| ''Getter''|| get_begin_cap_mode()      |}Controls the style of the line's first point. Use [[#LineCapMode|LineCapMode]] constants.=== default_color ===*  [[Color GD|Color]] '''default_color'''{| class="wikitable | ''Default''|| {{Span|Color( 0.4, 0.5, 1, 1 )}} |-| ''Setter''|| set_default_color(value)    |-| ''Getter''|| get_default_color()         |}The line's color. Will not be used if a gradient is set.=== end_cap_mode ===*  [[#LineCapMode|LineCapMode]] '''end_cap_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                   |-| ''Setter''|| set_end_cap_mode(value) |-| ''Getter''|| get_end_cap_mode()      |}Controls the style of the line's last point. Use [[#LineCapMode|LineCapMode]] constants.=== gradient ===*  [[Gradient GD|Gradient]] '''gradient'''{| class="wikitable | ''Setter''|| set_gradient(value) |-| ''Getter''|| get_gradient()      |}The gradient is drawn through the whole line from start to finish. The default color will not be used if a gradient is set.=== joint_mode ===*  [[#LineJointMode|LineJointMode]] '''joint_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                 |-| ''Setter''|| set_joint_mode(value) |-| ''Getter''|| get_joint_mode()      |}The style for the points between the start and the end.=== points ===*  [[PackedVector2Array GD|PackedVector2Array]] '''points'''{| class="wikitable | ''Default''|| {{Span|PackedVector2Array(  )}} |-| ''Setter''|| set_points(value)          |-| ''Getter''|| get_points()               |}The points that form the lines. The line is drawn between every point set in this array.=== round_precision ===*  int '''round_precision'''{| class="wikitable | ''Default''|| {{Span|8}}                      |-| ''Setter''|| set_round_precision(value) |-| ''Getter''|| get_round_precision()      |}The smoothness of the rounded joints and caps. This is only used if a cap or joint is set as round.=== sharp_limit ===*  float '''sharp_limit'''{| class="wikitable | ''Default''|| {{Span|2.0}}                |-| ''Setter''|| set_sharp_limit(value) |-| ''Getter''|| get_sharp_limit()      |}The direction difference in radians between vector points. This value is only used if {{Span|joint mode}} is set to [[Line2D GD#LINE_JOINT_SHARP|LINE_JOINT_SHARP]].=== texture ===*  [[Texture2D GD|Texture2D]] '''texture'''{| class="wikitable | ''Setter''|| set_texture(value) |-| ''Getter''|| get_texture()      |}The texture used for the line's texture. Uses {{Span|texture_mode}} for drawing style.=== texture_mode ===*  [[#LineTextureMode|LineTextureMode]] '''texture_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                   |-| ''Setter''|| set_texture_mode(value) |-| ''Getter''|| get_texture_mode()      |}The style to render the {{Span|texture}} on the line. Use [[#LineTextureMode|LineTextureMode]] constants.=== width ===*  float '''width'''{| class="wikitable | ''Default''|| {{Span|10.0}}         |-| ''Setter''|| set_width(value) |-| ''Getter''|| get_width()      |}The line's width.=== width_curve ===*  [[Curve GD|Curve]] '''width_curve'''{| class="wikitable | ''Setter''|| set_curve(value) |-| ''Getter''|| get_curve()      |}The line's width varies with the curve. The original width is simply multiply by the value of the Curve.== Method Descriptions ===== add_point ===*  void '''add_point''' '''(''' [[Vector2 GD|Vector2]] position, int at_position=-1 ''')'''Adds a point at the {{Span|position}}. Appends the point at the end of the line.If {{Span|at_position}} is given, the point is inserted before the point number {{Span|at_position}}, moving that point (and every point after) after the inserted point. If {{Span|at_position}} is not given, or is an illegal value ({{Span|at_position < 0}} or {{Span|at_position >= [method get_point_count]}}), the point will be appended at the end of the point list.=== clear_points ===*  void '''clear_points ( )'''Removes all points from the line.=== get_point_count ===*  int '''get_point_count ( )''' constReturns the Line2D's amount of points.=== get_point_position ===*  [[Vector2 GD|Vector2]] '''get_point_position''' '''(''' int i ''')''' constReturns point {{Span|i}}'s position.=== remove_point ===*  void '''remove_point''' '''(''' int i ''')'''Removes the point at index {{Span|i}} from the line.=== set_point_position ===*  void '''set_point_position''' '''(''' int i, [[Vector2 GD|Vector2]] position ''')'''Overwrites the position in point {{Span|i}} with the supplied {{Span|position}}.