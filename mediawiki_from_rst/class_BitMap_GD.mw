__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Boolean matrix.== Description ==A two-dimensional array of boolean values, can be used to efficiently store a binary matrix (every matrix element takes only one bit) and query the values using natural cartesian coordinates.== Methods =={| class="wikitable | void|| [[#create|create]] '''(''' [[Vector2 GD|Vector2]] size ''')'''                                                                         |-| void|| [[#create_from_image_alpha|create_from_image_alpha]] '''(''' [[Image GD|Image]] image, float threshold=0.1 ''')''' |-| bool|| [[#get_bit|get_bit]] '''(''' [[Vector2 GD|Vector2]] position ''')''' const                                                             |-| [[Vector2 GD|Vector2]]|| [[#get_size|get_size]] '''(''' ''')''' const                                                                                                  |-| int|| [[#get_true_bit_count|get_true_bit_count]] '''(''' ''')''' const                                                                              |-| void|| [[#grow_mask|grow_mask]] '''(''' int pixels, [[Rect2 GD|Rect2]] rect ''')'''                                         |-| [[Array GD|Array]]|| [[#opaque_to_polygons|opaque_to_polygons]] '''(''' [[Rect2 GD|Rect2]] rect, float epsilon=2.0 ''')''' const        |-| void|| [[#set_bit|set_bit]] '''(''' [[Vector2 GD|Vector2]] position, bool bit ''')'''                                      |-| void|| [[#set_bit_rect|set_bit_rect]] '''(''' [[Rect2 GD|Rect2]] rect, bool bit ''')'''                                    |}== Method Descriptions ===== create ===*  void '''create''' '''(''' [[Vector2 GD|Vector2]] size ''')'''Creates a bitmap with the specified size, filled with {{Span|false}}.=== create_from_image_alpha ===*  void '''create_from_image_alpha''' '''(''' [[Image GD|Image]] image, float threshold=0.1 ''')'''Creates a bitmap that matches the given image dimensions, every element of the bitmap is set to {{Span|false}} if the alpha value of the image at that position is equal to {{Span|threshold}} or less, and {{Span|true}} in other case.=== get_bit ===*  bool '''get_bit''' '''(''' [[Vector2 GD|Vector2]] position ''')''' constReturns bitmap's value at the specified position.=== get_size ===*  [[Vector2 GD|Vector2]] '''get_size ( )''' constReturns bitmap's dimensions.=== get_true_bit_count ===*  int '''get_true_bit_count ( )''' constReturns the amount of bitmap elements that are set to {{Span|true}}.=== grow_mask ===*  void '''grow_mask''' '''(''' int pixels, [[Rect2 GD|Rect2]] rect ''')'''=== opaque_to_polygons ===*  [[Array GD|Array]] '''opaque_to_polygons''' '''(''' [[Rect2 GD|Rect2]] rect, float epsilon=2.0 ''')''' const=== set_bit ===*  void '''set_bit''' '''(''' [[Vector2 GD|Vector2]] position, bool bit ''')'''Sets the bitmap's element at the specified position, to the specified value.=== set_bit_rect ===*  void '''set_bit_rect''' '''(''' [[Rect2 GD|Rect2]] rect, bool bit ''')'''Sets a rectangular portion of the bitmap to the specified value.