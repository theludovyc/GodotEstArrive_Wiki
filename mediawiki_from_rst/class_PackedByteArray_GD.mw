__NOTOC__A packed [[Array GD|Array]] of bytes.== Description ==An [[Array GD|Array]] specifically designed to hold bytes. Packs data tightly, so it saves memory for large array sizes.'''Note:''' This type is passed by value and not by reference.== Methods =={| class="wikitable | [[PackedByteArray GD|PackedByteArray]]|| [[PackedByteArray GD#PackedByteArray|PackedByteArray]] '''(''' [[Array GD|Array]] from ''')'''                                    |-| void|| [[#append|append]] '''(''' int byte ''')'''                                                          |-| void|| [[#append_array|append_array]] '''(''' [[PackedByteArray GD|PackedByteArray]] array ''')'''                     |-| [[PackedByteArray GD|PackedByteArray]]|| [[#compress|compress]] '''(''' int compression_mode=0 ''')'''                                        |-| [[PackedByteArray GD|PackedByteArray]]|| [[#decompress|decompress]] '''(''' int buffer_size, int compression_mode=0 ''')''' |-| bool|| [[#empty|empty]] '''(''' ''')'''                                                                                       |-| [[String GD|String]]|| [[#get_string_from_ascii|get_string_from_ascii]] '''(''' ''')'''                                                       |-| [[String GD|String]]|| [[#get_string_from_utf8|get_string_from_utf8]] '''(''' ''')'''                                                         |-| [[String GD|String]]|| [[#hex_encode|hex_encode]] '''(''' ''')'''                                                                             |-| int|| [[#insert|insert]] '''(''' int idx, int byte ''')'''                               |-| void|| [[#invert|invert]] '''(''' ''')'''                                                                                     |-| void|| [[#push_back|push_back]] '''(''' int byte ''')'''                                                    |-| void|| [[#remove|remove]] '''(''' int idx ''')'''                                                           |-| void|| [[#resize|resize]] '''(''' int idx ''')'''                                                           |-| void|| [[#set|set]] '''(''' int idx, int byte ''')'''                                     |-| int|| [[#size|size]] '''(''' ''')'''                                                                                         |-| [[PackedByteArray GD|PackedByteArray]]|| [[#subarray|subarray]] '''(''' int from, int to ''')'''                            |}== Method Descriptions ===== PackedByteArray ===*  [[PackedByteArray GD|PackedByteArray]] '''PackedByteArray''' '''(''' [[Array GD|Array]] from ''')'''Constructs a new {{Span|PackedByteArray}}. Optionally, you can pass in a generic [[Array GD|Array]] that will be converted.=== append ===*  void '''append''' '''(''' int byte ''')'''Appends an element at the end of the array (alias of [[#push_back|push_back]]).=== append_array ===*  void '''append_array''' '''(''' [[PackedByteArray GD|PackedByteArray]] array ''')'''Appends a {{Span|PackedByteArray}} at the end of this array.=== compress ===*  [[PackedByteArray GD|PackedByteArray]] '''compress''' '''(''' int compression_mode=0 ''')'''Returns a new {{Span|PackedByteArray}} with the data compressed. Set the compression mode using one of [[#CompressionMode|CompressionMode]]'s constants.=== decompress ===*  [[PackedByteArray GD|PackedByteArray]] '''decompress''' '''(''' int buffer_size, int compression_mode=0 ''')'''Returns a new {{Span|PackedByteArray}} with the data decompressed. Set {{Span|buffer_size}} to the size of the uncompressed data. Set the compression mode using one of [[#CompressionMode|CompressionMode]]'s constants.=== empty ===*  bool '''empty ( )'''Returns {{Span|true}} if the array is empty.=== get_string_from_ascii ===*  [[String GD|String]] '''get_string_from_ascii ( )'''Returns a copy of the array's contents as [[String GD|String]]. Fast alternative to [[#get_string_from_utf8|get_string_from_utf8]] if the content is ASCII-only. Unlike the UTF-8 function this function maps every byte to a character in the array. Multibyte sequences will not be interpreted correctly. For parsing user input always use [[#get_string_from_utf8|get_string_from_utf8]].=== get_string_from_utf8 ===*  [[String GD|String]] '''get_string_from_utf8 ( )'''Returns a copy of the array's contents as [[String GD|String]]. Slower than [[#get_string_from_ascii|get_string_from_ascii]] but supports UTF-8 encoded data. Use this function if you are unsure about the source of the data. For user input this function should always be preferred.=== hex_encode ===*  [[String GD|String]] '''hex_encode ( )'''Returns a hexadecimal representation of this array as a [[String GD|String]].::    var array = PackedByteArray([11, 46, 255])    print(array.hex_encode()) # Prints: 0b2eff=== insert ===*  int '''insert''' '''(''' int idx, int byte ''')'''Inserts a new element at a given position in the array. The position must be valid, or at the end of the array ({{Span|idx == size()}}).=== invert ===*  void '''invert ( )'''Reverses the order of the elements in the array.=== push_back ===*  void '''push_back''' '''(''' int byte ''')'''Appends an element at the end of the array.=== remove ===*  void '''remove''' '''(''' int idx ''')'''Removes an element from the array by index.=== resize ===*  void '''resize''' '''(''' int idx ''')'''Sets the size of the array. If the array is grown, reserves elements at the end of the array. If the array is shrunk, truncates the array to the new size.=== set ===*  void '''set''' '''(''' int idx, int byte ''')'''Changes the byte at the given index.=== size ===*  int '''size ( )'''Returns the size of the array.=== subarray ===*  [[PackedByteArray GD|PackedByteArray]] '''subarray''' '''(''' int from, int to ''')'''Returns the slice of the {{Span|PackedByteArray}} between indices (inclusive) as a new {{Span|PackedByteArray}}. Any negative index is considered to be from the end of the array.