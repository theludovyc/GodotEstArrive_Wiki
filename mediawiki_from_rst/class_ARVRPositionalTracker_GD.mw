__NOTOC__'''Inherits:''' [[Object GD|Object]]A tracked object.== Description ==An instance of this object represents a device that is tracked, such as a controller or anchor point. HMDs aren't represented here as they are handled internally.As controllers are turned on and the AR/VR interface detects them, instances of this object are automatically added to this list of active tracking objects accessible through the [[ARVRServer GD|ARVRServer]].The [[ARVRController GD|ARVRController]] and [[ARVRAnchor GD|ARVRAnchor]] both consume objects of this type and should be used in your project. The positional trackers are just under-the-hood objects that make this all work. These are mostly exposed so that GDNative-based interfaces can interact with them.== Tutorials ==*  :doc:`../tutorials/vr/index`== Properties =={| class="wikitable | float|| [[#rumble|rumble]]|| {{Span|0.0}} |}== Methods =={| class="wikitable | [[#TrackerHand|TrackerHand]]|| [[#get_hand|get_hand]] '''(''' ''')''' const                                                             |-| int|| [[#get_joy_id|get_joy_id]] '''(''' ''')''' const                                                         |-| [[Mesh GD|Mesh]]|| [[#get_mesh|get_mesh]] '''(''' ''')''' const                                                             |-| [[StringName GD|StringName]]|| [[#get_name|get_name]] '''(''' ''')''' const                                                             |-| [[Basis GD|Basis]]|| [[#get_orientation|get_orientation]] '''(''' ''')''' const                                               |-| [[Vector3 GD|Vector3]]|| [[#get_position|get_position]] '''(''' ''')''' const                                                     |-| int|| [[#get_tracker_id|get_tracker_id]] '''(''' ''')''' const                                                 |-| bool|| [[#get_tracks_orientation|get_tracks_orientation]] '''(''' ''')''' const                                 |-| bool|| [[#get_tracks_position|get_tracks_position]] '''(''' ''')''' const                                       |-| [[Transform GD|Transform]]|| [[#get_transform|get_transform]] '''(''' bool adjust_by_reference_frame ''')''' const |-| [[#TrackerType|TrackerType]]|| [[#get_type|get_type]] '''(''' ''')''' const                                                             |}== Enumerations ===== TrackerHand ====== TRACKER_HAND_UNKNOWN ====== TRACKER_LEFT_HAND ====== TRACKER_RIGHT_HAND ===enum '''TrackerHand''':*  '''TRACKER_HAND_UNKNOWN''' = '''0'''  The hand this tracker is held in is unknown or not applicable.*  '''TRACKER_LEFT_HAND''' = '''1'''  This tracker is the left hand controller.*  '''TRACKER_RIGHT_HAND''' = '''2'''  This tracker is the right hand controller.== Property Descriptions ===== rumble ===*  float '''rumble'''{| class="wikitable | ''Default''|| {{Span|0.0}}           |-| ''Setter''|| set_rumble(value) |-| ''Getter''|| get_rumble()      |}The degree to which the tracker rumbles. Ranges from {{Span|0.0}} to {{Span|1.0}} with precision {{Span|.01}}.== Method Descriptions ===== get_hand ===*  [[#TrackerHand|TrackerHand]] '''get_hand ( )''' constReturns the hand holding this tracker, if known. See [[#TrackerHand|TrackerHand]] constants.=== get_joy_id ===*  int '''get_joy_id ( )''' constIf this is a controller that is being tracked, the controller will also be represented by a joystick entry with this ID.=== get_mesh ===*  [[Mesh GD|Mesh]] '''get_mesh ( )''' constReturns the mesh related to a controller or anchor point if one is available.=== get_name ===*  [[StringName GD|StringName]] '''get_name ( )''' constReturns the controller or anchor point's name if available.=== get_orientation ===*  [[Basis GD|Basis]] '''get_orientation ( )''' constReturns the controller's orientation matrix.=== get_position ===*  [[Vector3 GD|Vector3]] '''get_position ( )''' constReturns the world-space controller position.=== get_tracker_id ===*  int '''get_tracker_id ( )''' constReturns the internal tracker ID. This uniquely identifies the tracker per tracker type and matches the ID you need to specify for nodes such as the [[ARVRController GD|ARVRController]] and [[ARVRAnchor GD|ARVRAnchor]] nodes.=== get_tracks_orientation ===*  bool '''get_tracks_orientation ( )''' constReturns {{Span|true}} if this device tracks orientation.=== get_tracks_position ===*  bool '''get_tracks_position ( )''' constReturns {{Span|true}} if this device tracks position.=== get_transform ===*  [[Transform GD|Transform]] '''get_transform''' '''(''' bool adjust_by_reference_frame ''')''' constReturns the transform combining this device's orientation and position.=== get_type ===*  [[#TrackerType|TrackerType]] '''get_type ( )''' constReturns the tracker's type.