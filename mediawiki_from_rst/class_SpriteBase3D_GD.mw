__NOTOC__'''Inherits:''' [[GeometryInstance GD|GeometryInstance]] '''<''' [[VisualInstance GD|VisualInstance]] '''<''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[AnimatedSprite3D GD|AnimatedSprite3D]], [[Sprite3D GD|Sprite3D]]2D sprite node in 3D environment.== Description ==A node that displays 2D texture information in a 3D environment.== Properties =={| class="wikitable | [[#AlphaCutMode|AlphaCutMode]]|| [[#alpha_cut|alpha_cut]]|| {{Span|0}}                   |-| Vector3.Axis|| [[#axis|axis]]|| {{Span|2}}                   |-| [[#BillboardMode|BillboardMode]]|| [[#billboard|billboard]]|| {{Span|0}}                   |-| bool|| [[#centered|centered]]|| {{Span|true}}                |-| bool|| [[#double_sided|double_sided]]|| {{Span|true}}                |-| bool|| [[#flip_h|flip_h]]|| {{Span|false}}               |-| bool|| [[#flip_v|flip_v]]|| {{Span|false}}               |-| [[Color GD|Color]]|| [[#modulate|modulate]]|| {{Span|Color( 1, 1, 1, 1 )}} |-| [[Vector2 GD|Vector2]]|| [[#offset|offset]]|| {{Span|Vector2( 0, 0 )}}     |-| float|| [[#opacity|opacity]]|| {{Span|1.0}}                 |-| float|| [[#pixel_size|pixel_size]]|| {{Span|0.01}}                |-| bool|| [[#shaded|shaded]]|| {{Span|false}}               |-| bool|| [[#transparent|transparent]]|| {{Span|true}}                |}== Methods =={| class="wikitable | [[TriangleMesh GD|TriangleMesh]]|| [[#generate_triangle_mesh|generate_triangle_mesh]] '''(''' ''')''' const                                                             |-| bool|| [[#get_draw_flag|get_draw_flag]] '''(''' [[#DrawFlags|DrawFlags]] flag ''')''' const                            |-| [[Rect2 GD|Rect2]]|| [[#get_item_rect|get_item_rect]] '''(''' ''')''' const                                                                               |-| void|| [[#set_draw_flag|set_draw_flag]] '''(''' [[#DrawFlags|DrawFlags]] flag, bool enabled ''')''' |}== Enumerations ===== DrawFlags ====== FLAG_TRANSPARENT ====== FLAG_SHADED ====== FLAG_DOUBLE_SIDED ====== FLAG_MAX ===enum '''DrawFlags''':*  '''FLAG_TRANSPARENT''' = '''0'''  If set, the texture's transparency and the opacity are used to make those parts of the sprite invisible.*  '''FLAG_SHADED''' = '''1'''  If set, lights in the environment affect the sprite.*  '''FLAG_DOUBLE_SIDED''' = '''2'''  If set, texture can be seen from the back as well, if not, it is invisible when looking at it from behind.*  '''FLAG_MAX''' = '''3'''  Represents the size of the [[#DrawFlags|DrawFlags]] enum.=== AlphaCutMode ====== ALPHA_CUT_DISABLED ====== ALPHA_CUT_DISCARD ====== ALPHA_CUT_OPAQUE_PREPASS ===enum '''AlphaCutMode''':*  '''ALPHA_CUT_DISABLED''' = '''0'''*  '''ALPHA_CUT_DISCARD''' = '''1'''*  '''ALPHA_CUT_OPAQUE_PREPASS''' = '''2'''== Property Descriptions ===== alpha_cut ===*  [[#AlphaCutMode|AlphaCutMode]] '''alpha_cut'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_alpha_cut_mode(value) |-| ''Getter''|| get_alpha_cut_mode()      |}=== axis ===*  Vector3.Axis '''axis'''{| class="wikitable | ''Default''|| {{Span|2}}           |-| ''Setter''|| set_axis(value) |-| ''Getter''|| get_axis()      |}The direction in which the front of the texture faces.=== billboard ===*  [[#BillboardMode|BillboardMode]] '''billboard'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_billboard_mode(value) |-| ''Getter''|| get_billboard_mode()      |}=== centered ===*  bool '''centered'''{| class="wikitable | ''Default''|| {{Span|true}}            |-| ''Setter''|| set_centered(value) |-| ''Getter''|| is_centered()       |}If {{Span|true}}, texture will be centered.=== double_sided ===*  bool '''double_sided'''{| class="wikitable | ''Default''|| {{Span|true}}             |-| ''Setter''|| set_draw_flag(value) |-| ''Getter''|| get_draw_flag()      |}If {{Span|true}}, texture can be seen from the back as well, if {{Span|false}}, it is invisible when looking at it from behind.=== flip_h ===*  bool '''flip_h'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flip_h(value) |-| ''Getter''|| is_flipped_h()    |}If {{Span|true}}, texture is flipped horizontally.=== flip_v ===*  bool '''flip_v'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flip_v(value) |-| ''Getter''|| is_flipped_v()    |}If {{Span|true}}, texture is flipped vertically.=== modulate ===*  [[Color GD|Color]] '''modulate'''{| class="wikitable | ''Default''|| {{Span|Color( 1, 1, 1, 1 )}} |-| ''Setter''|| set_modulate(value)     |-| ''Getter''|| get_modulate()          |}A color value that gets multiplied on, could be used for mood-coloring or to simulate the color of light.=== offset ===*  [[Vector2 GD|Vector2]] '''offset'''{| class="wikitable | ''Default''|| {{Span|Vector2( 0, 0 )}} |-| ''Setter''|| set_offset(value)   |-| ''Getter''|| get_offset()        |}The texture's drawing offset.=== opacity ===*  float '''opacity'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_opacity(value) |-| ''Getter''|| get_opacity()      |}The objects visibility on a scale from {{Span|0}} fully invisible to {{Span|1}} fully visible.=== pixel_size ===*  float '''pixel_size'''{| class="wikitable | ''Default''|| {{Span|0.01}}              |-| ''Setter''|| set_pixel_size(value) |-| ''Getter''|| get_pixel_size()      |}The size of one pixel's width on the sprite to scale it in 3D.=== shaded ===*  bool '''shaded'''{| class="wikitable | ''Default''|| {{Span|false}}            |-| ''Setter''|| set_draw_flag(value) |-| ''Getter''|| get_draw_flag()      |}If {{Span|true}}, the [[Light GD|Light]] in the [[Environment GD|Environment]] has effects on the sprite.=== transparent ===*  bool '''transparent'''{| class="wikitable | ''Default''|| {{Span|true}}             |-| ''Setter''|| set_draw_flag(value) |-| ''Getter''|| get_draw_flag()      |}If {{Span|true}}, the texture's transparency and the opacity are used to make those parts of the sprite invisible.== Method Descriptions ===== generate_triangle_mesh ===*  [[TriangleMesh GD|TriangleMesh]] '''generate_triangle_mesh ( )''' const=== get_draw_flag ===*  bool '''get_draw_flag''' '''(''' [[#DrawFlags|DrawFlags]] flag ''')''' constReturns the value of the specified flag.=== get_item_rect ===*  [[Rect2 GD|Rect2]] '''get_item_rect ( )''' constReturns the rectangle representing this sprite.=== set_draw_flag ===*  void '''set_draw_flag''' '''(''' [[#DrawFlags|DrawFlags]] flag, bool enabled ''')'''If {{Span|true}}, the specified flag will be enabled.