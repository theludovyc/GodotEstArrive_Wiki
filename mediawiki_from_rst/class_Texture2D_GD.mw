__NOTOC__'''Inherits:''' [[Texture GD|Texture]] '''<''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[AnimatedTexture GD|AnimatedTexture]], [[AtlasTexture GD|AtlasTexture]], [[CameraTexture GD|CameraTexture]], [[CurveTexture GD|CurveTexture]], [[GradientTexture GD|GradientTexture]], [[ImageTexture GD|ImageTexture]], [[LargeTexture GD|LargeTexture]], [[MeshTexture GD|MeshTexture]], [[NoiseTexture GD|NoiseTexture]], [[ProxyTexture GD|ProxyTexture]], [[StreamTexture GD|StreamTexture]], [[ViewportTexture GD|ViewportTexture]]Texture for 2D and 3D.== Description ==A texture works by registering an image in the video hardware, which then can be used in 3D models or 2D [[Sprite GD|Sprite]] or GUI [[Control GD|Control]].Textures are often created by loading them from a file. See [[@GDScript GD#load|@GDScript.load()]].{{Span|Texture2D}} is a base for other resources. It cannot be used directly.== Methods =={| class="wikitable | void|| [[#draw|draw]] '''(''' [[RID GD|RID]] canvas_item, [[Vector2 GD|Vector2]] position, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0 ''')''' const                                                                                           |-| void|| [[#draw_rect|draw_rect]] '''(''' [[RID GD|RID]] canvas_item, [[Rect2 GD|Rect2]] rect, bool tile, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0 ''')''' const                                                           |-| void|| [[#draw_rect_region|draw_rect_region]] '''(''' [[RID GD|RID]] canvas_item, [[Rect2 GD|Rect2]] rect, [[Rect2 GD|Rect2]] src_rect, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0, bool clip_uv=true ''')''' const |-| [[Image GD|Image]]|| [[#get_data|get_data]] '''(''' ''')''' const                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |-| int|| [[#get_height|get_height]] '''(''' ''')''' const|-| [[Vector2 GD|Vector2]]|| [[#get_size|get_size]] '''(''' ''')''' const                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |-| int|| [[#get_width|get_width]] '''(''' ''')''' const|-| bool|| [[#has_alpha|has_alpha]] '''(''' ''')''' const|}== Method Descriptions ===== draw ===*  void '''draw''' '''(''' [[RID GD|RID]] canvas_item, [[Vector2 GD|Vector2]] position, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0 ''')''' constDraws the texture using a [[CanvasItem GD|CanvasItem]] with the [[VisualServer GD|VisualServer]] API at the specified {{Span|position}}.=== draw_rect ===*  void '''draw_rect''' '''(''' [[RID GD|RID]] canvas_item, [[Rect2 GD|Rect2]] rect, bool tile, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0 ''')''' constDraws the texture using a [[CanvasItem GD|CanvasItem]] with the [[VisualServer GD|VisualServer]] API.=== draw_rect_region ===*  void '''draw_rect_region''' '''(''' [[RID GD|RID]] canvas_item, [[Rect2 GD|Rect2]] rect, [[Rect2 GD|Rect2]] src_rect, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_color_shininess=Color( 1, 1, 1, 1 ), [[#CanvasItemTextureFilter|CanvasItemTextureFilter]] texture_filter=0, [[#CanvasItemTextureRepeat|CanvasItemTextureRepeat]] texture_repeat=0, bool clip_uv=true ''')''' constDraws a part of the texture using a [[CanvasItem GD|CanvasItem]] with the [[VisualServer GD|VisualServer]] API.=== get_data ===*  [[Image GD|Image]] '''get_data ( )''' constReturns an [[Image GD|Image]] with the data from this {{Span|Texture2D}}. [[Image GD|Image]]\ s can be accessed and manipulated directly.=== get_height ===*  int '''get_height ( )''' constReturns the texture height.=== get_size ===*  [[Vector2 GD|Vector2]] '''get_size ( )''' constReturns the texture size.=== get_width ===*  int '''get_width ( )''' constReturns the texture width.=== has_alpha ===*  bool '''has_alpha ( )''' constReturns {{Span|true}} if this {{Span|Texture2D}} has an alpha channel.