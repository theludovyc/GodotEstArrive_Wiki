__NOTOC__'''Inherits:''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Container and player of [[Animation GD|Animation]] resources.== Description ==An animation player is used for general-purpose playback of [[Animation GD|Animation]] resources. It contains a dictionary of animations (referenced by name) and custom blend times between their transitions. Additionally, animations can be played and blended in different channels.{{Span|AnimationPlayer}} is more suited than [[Tween GD|Tween]] for animations where you know the final values in advance. For example, fading a screen in and out is more easily done with an {{Span|AnimationPlayer}} node thanks to the animation tools provided by the editor. That particular example can also be implemented with a [[Tween GD|Tween]] node, but it requires doing everything by code.Updating the target properties of animations occurs at process time.== Tutorials ==*  :doc:`../getting_started/step_by_step/animations`*  :doc:`../tutorials/animation/index`== Properties =={| class="wikitable | [[String GD|String]]|| [[#assigned_animation|assigned_animation]]||                    |-| [[String GD|String]]|| [[#autoplay|autoplay]]|| {{Span|""}}             |-| [[String GD|String]]|| [[#current_animation|current_animation]]|| {{Span|""}}             |-| float|| [[#current_animation_length|current_animation_length]]||                    |-| float|| [[#current_animation_position|current_animation_position]]||                    |-| [[#AnimationMethodCallMode|AnimationMethodCallMode]]|| [[#method_call_mode|method_call_mode]]|| {{Span|0}}              |-| bool|| [[#playback_active|playback_active]]||                    |-| float|| [[#playback_default_blend_time|playback_default_blend_time]]|| {{Span|0.0}}            |-| [[#AnimationProcessMode|AnimationProcessMode]]|| [[#playback_process_mode|playback_process_mode]]|| {{Span|1}}              |-| float|| [[#playback_speed|playback_speed]]|| {{Span|1.0}}            |-| [[NodePath GD|NodePath]]|| [[#root_node|root_node]]|| {{Span|NodePath("..")}} |}== Methods =={| class="wikitable | [[@GlobalScope GD#Error|Error]]|| [[#add_animation|add_animation]] '''(''' [[StringName GD|StringName]] name, [[Animation GD|Animation]] animation ''')'''                                                                    |-| void|| [[#advance|advance]] '''(''' float delta ''')'''                                                                                                                                      |-| [[StringName GD|StringName]]|| [[#animation_get_next|animation_get_next]] '''(''' [[StringName GD|StringName]] anim_from ''')''' const                                                                                            |-| void|| [[#animation_set_next|animation_set_next]] '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to ''')'''                                                     |-| void|| [[#clear_caches|clear_caches]] '''(''' ''')'''                                                                                                                                                            |-| void|| [[#clear_queue|clear_queue]] '''(''' ''')'''                                                                                                                                                              |-| [[StringName GD|StringName]]|| [[#find_animation|find_animation]] '''(''' [[Animation GD|Animation]] animation ''')''' const                                                                                                      |-| [[Animation GD|Animation]]|| [[#get_animation|get_animation]] '''(''' [[StringName GD|StringName]] name ''')''' const                                                                                                           |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_animation_list|get_animation_list]] '''(''' ''')''' const                                                                                                                                          |-| float|| [[#get_blend_time|get_blend_time]] '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to ''')''' const                                                       |-| float|| [[#get_playing_speed|get_playing_speed]] '''(''' ''')''' const                                                                                                                                            |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_queue|get_queue]] '''(''' ''')'''                                                                                                                                                                  |-| bool|| [[#has_animation|has_animation]] '''(''' [[StringName GD|StringName]] name ''')''' const                                                                                                           |-| bool|| [[#is_playing|is_playing]] '''(''' ''')''' const                                                                                                                                                          |-| void|| [[#play|play]] '''(''' [[StringName GD|StringName]] name="", float custom_blend=-1, float custom_speed=1.0, bool from_end=false ''')''' |-| void|| [[#play_backwards|play_backwards]] '''(''' [[StringName GD|StringName]] name="", float custom_blend=-1 ''')'''                                                                 |-| void|| [[#queue|queue]] '''(''' [[StringName GD|StringName]] name ''')'''                                                                                                                                 |-| void|| [[#remove_animation|remove_animation]] '''(''' [[StringName GD|StringName]] name ''')'''                                                                                                           |-| void|| [[#rename_animation|rename_animation]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] newname ''')'''                                                              |-| void|| [[#seek|seek]] '''(''' float seconds, bool update=false ''')'''                                                                                                    |-| void|| [[#set_blend_time|set_blend_time]] '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to, float sec ''')'''                              |-| void|| [[#stop|stop]] '''(''' bool reset=true ''')'''                                                                                                                                         |}== Signals ===== animation_changed ===*  '''animation_changed''' '''(''' [[StringName GD|StringName]] old_name, [[StringName GD|StringName]] new_name ''')'''If the currently being played animation changes, this signal will notify of such change.=== animation_finished ===*  '''animation_finished''' '''(''' [[StringName GD|StringName]] anim_name ''')'''Notifies when an animation finished playing.=== animation_started ===*  '''animation_started''' '''(''' [[StringName GD|StringName]] anim_name ''')'''Notifies when an animation starts playing.=== caches_cleared ===*  '''caches_cleared ( )'''Notifies when the caches have been cleared, either automatically, or manually via [[#clear_caches|clear_caches]].== Enumerations ===== AnimationProcessMode ====== ANIMATION_PROCESS_PHYSICS ====== ANIMATION_PROCESS_IDLE ====== ANIMATION_PROCESS_MANUAL ===enum '''AnimationProcessMode''':*  '''ANIMATION_PROCESS_PHYSICS''' = '''0'''  Process animation during the physics process. This is especially useful when animating physics bodies.*  '''ANIMATION_PROCESS_IDLE''' = '''1'''  Process animation during the idle process.*  '''ANIMATION_PROCESS_MANUAL''' = '''2'''  Do not process animation. Use [[#advance|advance]] to process the animation manually.=== AnimationMethodCallMode ====== ANIMATION_METHOD_CALL_DEFERRED ====== ANIMATION_METHOD_CALL_IMMEDIATE ===enum '''AnimationMethodCallMode''':*  '''ANIMATION_METHOD_CALL_DEFERRED''' = '''0'''  Batch method calls during the animation process, then do the calls after events are processed. This avoids bugs involving deleting nodes or modifying the AnimationPlayer while playing.*  '''ANIMATION_METHOD_CALL_IMMEDIATE''' = '''1'''  Make method calls immediately when reached in the animation.== Property Descriptions ===== assigned_animation ===*  [[String GD|String]] '''assigned_animation'''{| class="wikitable | ''Setter''|| set_assigned_animation(value) |-| ''Getter''|| get_assigned_animation()      |}If playing, the current animation; otherwise, the animation last played. When set, would change the animation, but would not play it unless currently playing. See also [[#current_animation|current_animation]].=== autoplay ===*  [[String GD|String]] '''autoplay'''{| class="wikitable | ''Default''|| {{Span|""}}              |-| ''Setter''|| set_autoplay(value) |-| ''Getter''|| get_autoplay()      |}The name of the animation to play when the scene loads.=== current_animation ===*  [[String GD|String]] '''current_animation'''{| class="wikitable | ''Default''|| {{Span|""}}                       |-| ''Setter''|| set_current_animation(value) |-| ''Getter''|| get_current_animation()      |}The name of the current animation, "" if not playing anything. When being set, does not restart the animation. See also [[#play|play]].=== current_animation_length ===*  float '''current_animation_length'''{| class="wikitable | ''Getter''|| get_current_animation_length() |}The length (in seconds) of the currently being played animation.=== current_animation_position ===*  float '''current_animation_position'''{| class="wikitable | ''Getter''|| get_current_animation_position() |}The position (in seconds) of the currently playing animation.=== method_call_mode ===*  [[#AnimationMethodCallMode|AnimationMethodCallMode]] '''method_call_mode'''{| class="wikitable | ''Default''|| {{Span|0}}                       |-| ''Setter''|| set_method_call_mode(value) |-| ''Getter''|| get_method_call_mode()      |}The call mode to use for Call Method tracks.=== playback_active ===*  bool '''playback_active'''{| class="wikitable | ''Setter''|| set_active(value) |-| ''Getter''|| is_active()       |}If {{Span|true}}, updates animations in response to process-related notifications.=== playback_default_blend_time ===*  float '''playback_default_blend_time'''{| class="wikitable | ''Default''|| {{Span|0.0}}                       |-| ''Setter''|| set_default_blend_time(value) |-| ''Getter''|| get_default_blend_time()      |}The default time in which to blend animations. Ranges from 0 to 4096 with 0.01 precision.=== playback_process_mode ===*  [[#AnimationProcessMode|AnimationProcessMode]] '''playback_process_mode'''{| class="wikitable | ''Default''|| {{Span|1}}                             |-| ''Setter''|| set_animation_process_mode(value) |-| ''Getter''|| get_animation_process_mode()      |}The process notification in which to update animations.=== playback_speed ===*  float '''playback_speed'''{| class="wikitable | ''Default''|| {{Span|1.0}}                |-| ''Setter''|| set_speed_scale(value) |-| ''Getter''|| get_speed_scale()      |}The speed scaling ratio. For instance, if this value is 1, then the animation plays at normal speed. If it's 0.5, then it plays at half speed. If it's 2, then it plays at double speed.=== root_node ===*  [[NodePath GD|NodePath]] '''root_node'''{| class="wikitable | ''Default''|| {{Span|NodePath("..")}} |-| ''Setter''|| set_root(value)    |-| ''Getter''|| get_root()         |}The node from which node path references will travel.== Method Descriptions ===== add_animation ===*  [[@GlobalScope GD#Error|Error]] '''add_animation''' '''(''' [[StringName GD|StringName]] name, [[Animation GD|Animation]] animation ''')'''Adds {{Span|animation}} to the player accessible with the key {{Span|name}}.=== advance ===*  void '''advance''' '''(''' float delta ''')'''Shifts position in the animation timeline and immediately updates the animation. {{Span|delta}} is the time in seconds to shift. Events between the current frame and {{Span|delta}} are handled.=== animation_get_next ===*  [[StringName GD|StringName]] '''animation_get_next''' '''(''' [[StringName GD|StringName]] anim_from ''')''' constReturns the name of the next animation in the queue.=== animation_set_next ===*  void '''animation_set_next''' '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to ''')'''Triggers the {{Span|anim_to}} animation when the {{Span|anim_from}} animation completes.=== clear_caches ===*  void '''clear_caches ( )'''{{Span|AnimationPlayer}} caches animated nodes. It may not notice if a node disappears; [[#clear_caches|clear_caches]] forces it to update the cache again.=== clear_queue ===*  void '''clear_queue ( )'''Clears all queued, unplayed animations.=== find_animation ===*  [[StringName GD|StringName]] '''find_animation''' '''(''' [[Animation GD|Animation]] animation ''')''' constReturns the name of {{Span|animation}} or an empty string if not found.=== get_animation ===*  [[Animation GD|Animation]] '''get_animation''' '''(''' [[StringName GD|StringName]] name ''')''' constReturns the [[Animation GD|Animation]] with key {{Span|name}} or {{Span|null}} if not found.=== get_animation_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_animation_list ( )''' constReturns the list of stored animation names.=== get_blend_time ===*  float '''get_blend_time''' '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to ''')''' constGets the blend time (in seconds) between two animations, referenced by their names.=== get_playing_speed ===*  float '''get_playing_speed ( )''' constGets the actual playing speed of current animation or 0 if not playing. This speed is the [[#playback_speed|playback_speed]] property multiplied by {{Span|custom_speed}} argument specified when calling the [[#play|play]] method.=== get_queue ===*  [[PackedStringArray GD|PackedStringArray]] '''get_queue ( )'''Returns a list of the animation names that are currently queued to play.=== has_animation ===*  bool '''has_animation''' '''(''' [[StringName GD|StringName]] name ''')''' constReturns {{Span|true}} if the {{Span|AnimationPlayer}} stores an [[Animation GD|Animation]] with key {{Span|name}}.=== is_playing ===*  bool '''is_playing ( )''' constReturns {{Span|true}} if playing an animation.=== play ===*  void '''play''' '''(''' [[StringName GD|StringName]] name="", float custom_blend=-1, float custom_speed=1.0, bool from_end=false ''')'''Plays the animation with key {{Span|name}}. Custom blend times and speed can be set. If {{Span|custom_speed}} is negative and {{Span|from_end}} is {{Span|true}}, the animation will play backwards (which is equivalent to calling [[#play_backwards|play_backwards]]).The {{Span|AnimationPlayer}} keeps track of its current or last played animation with [[#assigned_animation|assigned_animation]]. If this method is called with that same animation {{Span|name}}, or with no {{Span|name}} parameter, the assigned animation will resume playing if it was paused, or restart if it was stopped (see [[#stop|stop]] for both pause and stop). If the animation was already playing, it will keep playing.'''Note:''' The animation will be updated the next time the {{Span|AnimationPlayer}} is processed. If other variables are updated at the same time this is called, they may be updated too early. To perform the update immediately, call {{Span|advance(0)}}.=== play_backwards ===*  void '''play_backwards''' '''(''' [[StringName GD|StringName]] name="", float custom_blend=-1 ''')'''Plays the animation with key {{Span|name}} in reverse.This method is a shorthand for [[#play|play]] with {{Span|custom_speed = -1.0}} and {{Span|from_end = true}}, so see its description for more information.=== queue ===*  void '''queue''' '''(''' [[StringName GD|StringName]] name ''')'''Queues an animation for playback once the current one is done.'''Note:''' If a looped animation is currently playing, the queued animation will never play unless the looped animation is stopped somehow.=== remove_animation ===*  void '''remove_animation''' '''(''' [[StringName GD|StringName]] name ''')'''Removes the animation with key {{Span|name}}.=== rename_animation ===*  void '''rename_animation''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] newname ''')'''Renames an existing animation with key {{Span|name}} to {{Span|newname}}.=== seek ===*  void '''seek''' '''(''' float seconds, bool update=false ''')'''Seeks the animation to the {{Span|seconds}} point in time (in seconds). If {{Span|update}} is {{Span|true}}, the animation updates too, otherwise it updates at process time. Events between the current frame and {{Span|seconds}} are skipped.=== set_blend_time ===*  void '''set_blend_time''' '''(''' [[StringName GD|StringName]] anim_from, [[StringName GD|StringName]] anim_to, float sec ''')'''Specifies a blend time (in seconds) between two animations, referenced by their names.=== stop ===*  void '''stop''' '''(''' bool reset=true ''')'''Stops or pauses the currently playing animation. If {{Span|reset}} is {{Span|true}}, the animation position is reset to {{Span|0}} and the playback speed is reset to {{Span|1.0}}.If {{Span|reset}} is {{Span|false}}, the [[#current_animation_position|current_animation_position]] will be kept and calling [[#play|play]] or [[#play_backwards|play_backwards]] without arguments or with the same animation name as [[#assigned_animation|assigned_animation]] will resume the animation.