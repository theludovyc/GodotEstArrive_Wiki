__NOTOC__'''Inherits:''' [[Node GD|Node]] '''<''' [[Object GD|Object]]== Properties =={| class="wikitable | float|| [[#interpolation|interpolation]]|| {{Span|1.0}}                                             |-| [[Vector3 GD|Vector3]]|| [[#magnet|magnet]]|| {{Span|Vector3( 0, 0, 0 )}}                              |-| int|| [[#max_iterations|max_iterations]]|| {{Span|10}}                                              |-| float|| [[#min_distance|min_distance]]|| {{Span|0.01}}                                            |-| bool|| [[#override_tip_basis|override_tip_basis]]|| {{Span|true}}                                            |-| [[StringName GD|StringName]]|| [[#root_bone|root_bone]]|| {{Span|@""}}                                             |-| [[Transform GD|Transform]]|| [[#target|target]]|| {{Span|Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )}} |-| [[NodePath GD|NodePath]]|| [[#target_node|target_node]]|| {{Span|NodePath("")}}                                    |-| [[StringName GD|StringName]]|| [[#tip_bone|tip_bone]]|| {{Span|@""}}                                             |-| bool|| [[#use_magnet|use_magnet]]|| {{Span|false}}                                           |}== Methods =={| class="wikitable | [[Skeleton GD|Skeleton]]|| [[#get_parent_skeleton|get_parent_skeleton]] '''(''' ''')''' const      |-| bool|| [[#is_running|is_running]] '''(''' ''')'''                              |-| void|| [[#start|start]] '''(''' bool one_time=false ''')''' |-| void|| [[#stop|stop]] '''(''' ''')'''                                          |}== Property Descriptions ===== interpolation ===*  float '''interpolation'''{| class="wikitable | ''Default''|| {{Span|1.0}}                  |-| ''Setter''|| set_interpolation(value) |-| ''Getter''|| get_interpolation()      |}=== magnet ===*  [[Vector3 GD|Vector3]] '''magnet'''{| class="wikitable | ''Default''|| {{Span|Vector3( 0, 0, 0 )}}     |-| ''Setter''|| set_magnet_position(value) |-| ''Getter''|| get_magnet_position()      |}=== max_iterations ===*  int '''max_iterations'''{| class="wikitable | ''Default''|| {{Span|10}}                    |-| ''Setter''|| set_max_iterations(value) |-| ''Getter''|| get_max_iterations()      |}=== min_distance ===*  float '''min_distance'''{| class="wikitable | ''Default''|| {{Span|0.01}}                |-| ''Setter''|| set_min_distance(value) |-| ''Getter''|| get_min_distance()      |}=== override_tip_basis ===*  bool '''override_tip_basis'''{| class="wikitable | ''Default''|| {{Span|true}}                      |-| ''Setter''|| set_override_tip_basis(value) |-| ''Getter''|| is_override_tip_basis()       |}=== root_bone ===*  [[StringName GD|StringName]] '''root_bone'''{| class="wikitable | ''Default''|| {{Span|@""}}              |-| ''Setter''|| set_root_bone(value) |-| ''Getter''|| get_root_bone()      |}=== target ===*  [[Transform GD|Transform]] '''target'''{| class="wikitable | ''Default''|| {{Span|Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )}} |-| ''Setter''|| set_target_transform(value)                         |-| ''Getter''|| get_target_transform()                              |}=== target_node ===*  [[NodePath GD|NodePath]] '''target_node'''{| class="wikitable | ''Default''|| {{Span|NodePath("")}}       |-| ''Setter''|| set_target_node(value) |-| ''Getter''|| get_target_node()      |}=== tip_bone ===*  [[StringName GD|StringName]] '''tip_bone'''{| class="wikitable | ''Default''|| {{Span|@""}}             |-| ''Setter''|| set_tip_bone(value) |-| ''Getter''|| get_tip_bone()      |}=== use_magnet ===*  bool '''use_magnet'''{| class="wikitable | ''Default''|| {{Span|false}}             |-| ''Setter''|| set_use_magnet(value) |-| ''Getter''|| is_using_magnet()     |}== Method Descriptions ===== get_parent_skeleton ===*  [[Skeleton GD|Skeleton]] '''get_parent_skeleton ( )''' const=== is_running ===*  bool '''is_running ( )'''=== start ===*  void '''start''' '''(''' bool one_time=false ''')'''=== stop ===*  void '''stop ( )'''