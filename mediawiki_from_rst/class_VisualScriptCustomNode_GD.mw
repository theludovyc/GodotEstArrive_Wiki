__NOTOC__'''Inherits:''' [[VisualScriptNode GD|VisualScriptNode]] '''<''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]A scripted Visual Script node.== Description ==A custom Visual Script node which can be scripted in powerful ways.== Methods =={| class="wikitable | [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_caption|_get_caption]] '''(''' ''')''' virtual                                                                                                                                |-| [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_category|_get_category]] '''(''' ''')''' virtual                                                                                                                              |-| int|| [[VisualScriptCustomNode GD#_get_input_value_port_count|_get_input_value_port_count]] '''(''' ''')''' virtual                                                                                                  |-| [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_input_value_port_name|_get_input_value_port_name]] '''(''' int idx ''')''' virtual                                                                          |-| int|| [[VisualScriptCustomNode GD#_get_input_value_port_type|_get_input_value_port_type]] '''(''' int idx ''')''' virtual                                                                          |-| int|| [[VisualScriptCustomNode GD#_get_output_sequence_port_count|_get_output_sequence_port_count]] '''(''' ''')''' virtual                                                                                          |-| [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_output_sequence_port_text|_get_output_sequence_port_text]] '''(''' int idx ''')''' virtual                                                                  |-| int|| [[VisualScriptCustomNode GD#_get_output_value_port_count|_get_output_value_port_count]] '''(''' ''')''' virtual                                                                                                |-| [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_output_value_port_name|_get_output_value_port_name]] '''(''' int idx ''')''' virtual                                                                        |-| int|| [[VisualScriptCustomNode GD#_get_output_value_port_type|_get_output_value_port_type]] '''(''' int idx ''')''' virtual                                                                        |-| [[String GD|String]]|| [[VisualScriptCustomNode GD#_get_text|_get_text]] '''(''' ''')''' virtual                                                                                                                                      |-| int|| [[VisualScriptCustomNode GD#_get_working_memory_size|_get_working_memory_size]] '''(''' ''')''' virtual                                                                                                        |-| bool|| [[VisualScriptCustomNode GD#_has_input_sequence_port|_has_input_sequence_port]] '''(''' ''')''' virtual                                                                                                        |-| [[Variant GD|Variant]]|| [[VisualScriptCustomNode GD#_step|_step]] '''(''' [[Array GD|Array]] inputs, [[Array GD|Array]] outputs, int start_mode, [[Array GD|Array]] working_mem ''')''' virtual |}== Enumerations ===== StartMode ====== START_MODE_BEGIN_SEQUENCE ====== START_MODE_CONTINUE_SEQUENCE ====== START_MODE_RESUME_YIELD ===enum '''StartMode''':*  '''START_MODE_BEGIN_SEQUENCE''' = '''0'''  The start mode used the first time when [[VisualScriptCustomNode GD#_step|_step]] is called.*  '''START_MODE_CONTINUE_SEQUENCE''' = '''1'''  The start mode used when [[VisualScriptCustomNode GD#_step|_step]] is called after coming back from a [[VisualScriptCustomNode GD#STEP_PUSH_STACK_BIT|STEP_PUSH_STACK_BIT]].*  '''START_MODE_RESUME_YIELD''' = '''2'''  The start mode used when [[VisualScriptCustomNode GD#_step|_step]] is called after resuming from [[VisualScriptCustomNode GD#STEP_YIELD_BIT|STEP_YIELD_BIT]].== Constants ===== STEP_PUSH_STACK_BIT ====== STEP_GO_BACK_BIT ====== STEP_NO_ADVANCE_BIT ====== STEP_EXIT_FUNCTION_BIT ====== STEP_YIELD_BIT ===*  '''STEP_PUSH_STACK_BIT''' = '''16777216'''  Hint used by [[VisualScriptCustomNode GD#_step|_step]] to tell that control should return to it when there is no other node left to execute.This is used by [[VisualScriptCondition GD|VisualScriptCondition]] to redirect the sequence to the "Done" port after the {{Span|true}}/{{Span|false}} branch has finished execution.*  '''STEP_GO_BACK_BIT''' = '''33554432'''  Hint used by [[VisualScriptCustomNode GD#_step|_step]] to tell that control should return back, either hitting a previous [[VisualScriptCustomNode GD#STEP_PUSH_STACK_BIT|STEP_PUSH_STACK_BIT]] or exiting the function.*  '''STEP_NO_ADVANCE_BIT''' = '''67108864'''*  '''STEP_EXIT_FUNCTION_BIT''' = '''134217728'''  Hint used by [[VisualScriptCustomNode GD#_step|_step]] to tell that control should stop and exit the function.*  '''STEP_YIELD_BIT''' = '''268435456'''  Hint used by [[VisualScriptCustomNode GD#_step|_step]] to tell that the function should be yielded.Using this requires you to have at least one working memory slot, which is used for the [[VisualScriptFunctionState GD|VisualScriptFunctionState]].== Method Descriptions ===== _get_caption ===*  [[String GD|String]] '''_get_caption ( )''' virtualReturn the node's title.=== _get_category ===*  [[String GD|String]] '''_get_category ( )''' virtualReturn the node's category.=== _get_input_value_port_count ===*  int '''_get_input_value_port_count ( )''' virtualReturn the count of input value ports.=== _get_input_value_port_name ===*  [[String GD|String]] '''_get_input_value_port_name''' '''(''' int idx ''')''' virtualReturn the specified input port's name.=== _get_input_value_port_type ===*  int '''_get_input_value_port_type''' '''(''' int idx ''')''' virtualReturn the specified input port's type. See the [[@GlobalScope GD#Variant.Type|Variant.Type]] values.=== _get_output_sequence_port_count ===*  int '''_get_output_sequence_port_count ( )''' virtualReturn the amount of output '''sequence''' ports.=== _get_output_sequence_port_text ===*  [[String GD|String]] '''_get_output_sequence_port_text''' '''(''' int idx ''')''' virtualReturn the specified '''sequence''' output's name.=== _get_output_value_port_count ===*  int '''_get_output_value_port_count ( )''' virtualReturn the amount of output value ports.=== _get_output_value_port_name ===*  [[String GD|String]] '''_get_output_value_port_name''' '''(''' int idx ''')''' virtualReturn the specified output's name.=== _get_output_value_port_type ===*  int '''_get_output_value_port_type''' '''(''' int idx ''')''' virtualReturn the specified output's type. See the [[@GlobalScope GD#Variant.Type|Variant.Type]] values.=== _get_text ===*  [[String GD|String]] '''_get_text ( )''' virtualReturn the custom node's text, which is shown right next to the input '''sequence''' port (if there is none, on the place that is usually taken by it).=== _get_working_memory_size ===*  int '''_get_working_memory_size ( )''' virtualReturn the size of the custom node's working memory. See [[VisualScriptCustomNode GD#_step|_step]] for more details.=== _has_input_sequence_port ===*  bool '''_has_input_sequence_port ( )''' virtualReturn whether the custom node has an input '''sequence''' port.=== _step ===*  [[Variant GD|Variant]] '''_step''' '''(''' [[Array GD|Array]] inputs, [[Array GD|Array]] outputs, int start_mode, [[Array GD|Array]] working_mem ''')''' virtualExecute the custom node's logic, returning the index of the output sequence port to use or a [[String GD|String]] when there is an error.The {{Span|inputs}} array contains the values of the input ports.{{Span|outputs}} is an array whose indices should be set to the respective outputs.The {{Span|start_mode}} is usually [[VisualScriptCustomNode GD#START_MODE_BEGIN_SEQUENCE|START_MODE_BEGIN_SEQUENCE]], unless you have used the {{Span|STEP_*}} constants.{{Span|working_mem}} is an array which can be used to persist information between runs of the custom node.When returning, you can mask the returned value with one of the {{Span|STEP_*}} constants.