__NOTOC__'''Inherits:''' [[Resource GD|Resource]] '''<''' [[Reference GD|Reference]] '''<''' [[Object GD|Object]]Theme for controls.== Description ==A theme for skinning controls. Controls can be skinned individually, but for complex applications, it's more practical to just create a global theme that defines everything. This theme can be applied to any [[Control GD|Control]]; the Control and its children will automatically use it.Theme resources can alternatively be loaded by writing them in a {{Span|.theme}} file, see the documentation for more information.== Tutorials ==*  :doc:`../tutorials/gui/gui_skinning`== Properties =={| class="wikitable | [[Font GD|Font]]|| [[#default_font|default_font]] |}== Methods =={| class="wikitable | void|| [[#clear|clear]] '''(''' ''')'''                                                                                                                                           |-| void|| [[#clear_color|clear_color]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''                                            |-| void|| [[#clear_constant|clear_constant]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''                                      |-| void|| [[#clear_font|clear_font]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''                                              |-| void|| [[#clear_icon|clear_icon]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''                                              |-| void|| [[#clear_stylebox|clear_stylebox]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''                                      |-| void|| [[#copy_default_theme|copy_default_theme]] '''(''' ''')'''                                                                                                                 |-| void|| [[#copy_theme|copy_theme]] '''(''' [[Theme GD|Theme]] other ''')'''                                                                                                 |-| [[Color GD|Color]]|| [[#get_color|get_color]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                          |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_color_list|get_color_list]] '''(''' [[String GD|String]] type ''')''' const                                                                                  |-| int|| [[#get_constant|get_constant]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                    |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_constant_list|get_constant_list]] '''(''' [[String GD|String]] type ''')''' const                                                                            |-| [[Font GD|Font]]|| [[#get_font|get_font]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                            |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_font_list|get_font_list]] '''(''' [[String GD|String]] type ''')''' const                                                                                    |-| [[Texture2D GD|Texture2D]]|| [[#get_icon|get_icon]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                            |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_icon_list|get_icon_list]] '''(''' [[String GD|String]] type ''')''' const                                                                                    |-| [[StyleBox GD|StyleBox]]|| [[#get_stylebox|get_stylebox]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                    |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_stylebox_list|get_stylebox_list]] '''(''' [[String GD|String]] type ''')''' const                                                                            |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_stylebox_types|get_stylebox_types]] '''(''' ''')''' const                                                                                                           |-| [[PackedStringArray GD|PackedStringArray]]|| [[#get_type_list|get_type_list]] '''(''' [[String GD|String]] type ''')''' const                                                                                    |-| bool|| [[#has_color|has_color]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                          |-| bool|| [[#has_constant|has_constant]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                    |-| bool|| [[#has_font|has_font]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                            |-| bool|| [[#has_icon|has_icon]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                            |-| bool|| [[#has_stylebox|has_stylebox]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' const                                    |-| void|| [[#set_color|set_color]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Color GD|Color]] color ''')'''               |-| void|| [[#set_constant|set_constant]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, int constant ''')'''          |-| void|| [[#set_font|set_font]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Font GD|Font]] font ''')'''                    |-| void|| [[#set_icon|set_icon]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Texture2D GD|Texture2D]] texture ''')'''       |-| void|| [[#set_stylebox|set_stylebox]] '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[StyleBox GD|StyleBox]] texture ''')''' |}== Property Descriptions ===== default_font ===*  [[Font GD|Font]] '''default_font'''{| class="wikitable | ''Setter''|| set_default_font(value) |-| ''Getter''|| get_default_font()      |}The theme's default font.== Method Descriptions ===== clear ===*  void '''clear ( )'''Clears all values on the theme.=== clear_color ===*  void '''clear_color''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''Clears the [[Color GD|Color]] at {{Span|name}} if the theme has {{Span|type}}.=== clear_constant ===*  void '''clear_constant''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''Clears the constant at {{Span|name}} if the theme has {{Span|type}}.=== clear_font ===*  void '''clear_font''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''Clears the [[Font GD|Font]] at {{Span|name}} if the theme has {{Span|type}}.=== clear_icon ===*  void '''clear_icon''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''Clears the icon at {{Span|name}} if the theme has {{Span|type}}.=== clear_stylebox ===*  void '''clear_stylebox''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')'''Clears [[StyleBox GD|StyleBox]] at {{Span|name}} if the theme has {{Span|type}}.=== copy_default_theme ===*  void '''copy_default_theme ( )'''Sets the theme's values to a copy of the default theme values.=== copy_theme ===*  void '''copy_theme''' '''(''' [[Theme GD|Theme]] other ''')'''Sets the theme's values to a copy of a given theme.=== get_color ===*  [[Color GD|Color]] '''get_color''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns the [[Color GD|Color]] at {{Span|name}} if the theme has {{Span|type}}.=== get_color_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_color_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the [[Color GD|Color]]\ s as a [[PackedStringArray GD|PackedStringArray]] filled with each [[Color GD|Color]]'s name, for use in [[#get_color|get_color]], if the theme has {{Span|type}}.=== get_constant ===*  int '''get_constant''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns the constant at {{Span|name}} if the theme has {{Span|type}}.=== get_constant_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_constant_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the constants as a [[PackedStringArray GD|PackedStringArray]] filled with each constant's name, for use in [[#get_constant|get_constant]], if the theme has {{Span|type}}.=== get_font ===*  [[Font GD|Font]] '''get_font''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns the [[Font GD|Font]] at {{Span|name}} if the theme has {{Span|type}}.=== get_font_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_font_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the [[Font GD|Font]]\ s as a [[PackedStringArray GD|PackedStringArray]] filled with each [[Font GD|Font]]'s name, for use in [[#get_font|get_font]], if the theme has {{Span|type}}.=== get_icon ===*  [[Texture2D GD|Texture2D]] '''get_icon''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns the icon [[Texture2D GD|Texture2D]] at {{Span|name}} if the theme has {{Span|type}}.=== get_icon_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_icon_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the icons as a [[PackedStringArray GD|PackedStringArray]] filled with each [[Texture2D GD|Texture2D]]'s name, for use in [[#get_icon|get_icon]], if the theme has {{Span|type}}.=== get_stylebox ===*  [[StyleBox GD|StyleBox]] '''get_stylebox''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns the icon [[StyleBox GD|StyleBox]] at {{Span|name}} if the theme has {{Span|type}}.=== get_stylebox_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_stylebox_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the [[StyleBox GD|StyleBox]]\ s as a [[PackedStringArray GD|PackedStringArray]] filled with each [[StyleBox GD|StyleBox]]'s name, for use in [[#get_stylebox|get_stylebox]], if the theme has {{Span|type}}.=== get_stylebox_types ===*  [[PackedStringArray GD|PackedStringArray]] '''get_stylebox_types ( )''' constReturns all the [[StyleBox GD|StyleBox]] types as a [[PackedStringArray GD|PackedStringArray]] filled with each [[StyleBox GD|StyleBox]]'s type, for use in [[#get_stylebox|get_stylebox]] and/or [[#get_stylebox_list|get_stylebox_list]], if the theme has {{Span|type}}.=== get_type_list ===*  [[PackedStringArray GD|PackedStringArray]] '''get_type_list''' '''(''' [[String GD|String]] type ''')''' constReturns all the types in {{Span|type}} as a [[PackedStringArray GD|PackedStringArray]] for use in any of the {{Span|get_*}} functions, if the theme has {{Span|type}}.=== has_color ===*  bool '''has_color''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns {{Span|true}} if [[Color GD|Color]] with {{Span|name}} is in {{Span|type}}.Returns {{Span|false}} if the theme does not have {{Span|type}}.=== has_constant ===*  bool '''has_constant''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns {{Span|true}} if constant with {{Span|name}} is in {{Span|type}}.Returns {{Span|false}} if the theme does not have {{Span|type}}.=== has_font ===*  bool '''has_font''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns {{Span|true}} if [[Font GD|Font]] with {{Span|name}} is in {{Span|type}}.Returns {{Span|false}} if the theme does not have {{Span|type}}.=== has_icon ===*  bool '''has_icon''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns {{Span|true}} if icon [[Texture2D GD|Texture2D]] with {{Span|name}} is in {{Span|type}}.Returns {{Span|false}} if the theme does not have {{Span|type}}.=== has_stylebox ===*  bool '''has_stylebox''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type ''')''' constReturns {{Span|true}} if [[StyleBox GD|StyleBox]] with {{Span|name}} is in {{Span|type}}.Returns {{Span|false}} if the theme does not have {{Span|type}}.=== set_color ===*  void '''set_color''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Color GD|Color]] color ''')'''Sets the theme's [[Color GD|Color]] to {{Span|color}} at {{Span|name}} in {{Span|type}}.Does nothing if the theme does not have {{Span|type}}.=== set_constant ===*  void '''set_constant''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, int constant ''')'''Sets the theme's constant to {{Span|constant}} at {{Span|name}} in {{Span|type}}.Does nothing if the theme does not have {{Span|type}}.=== set_font ===*  void '''set_font''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Font GD|Font]] font ''')'''Sets the theme's [[Font GD|Font]] to {{Span|font}} at {{Span|name}} in {{Span|type}}.Does nothing if the theme does not have {{Span|type}}.=== set_icon ===*  void '''set_icon''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[Texture2D GD|Texture2D]] texture ''')'''Sets the theme's icon [[Texture2D GD|Texture2D]] to {{Span|texture}} at {{Span|name}} in {{Span|type}}.Does nothing if the theme does not have {{Span|type}}.=== set_stylebox ===*  void '''set_stylebox''' '''(''' [[StringName GD|StringName]] name, [[StringName GD|StringName]] type, [[StyleBox GD|StyleBox]] texture ''')'''Sets theme's [[StyleBox GD|StyleBox]] to {{Span|stylebox}} at {{Span|name}} in {{Span|type}}.Does nothing if the theme does not have {{Span|type}}.