__NOTOC__'''Inherits:''' [[Object GD|Object]]Server interface for low-level 3D navigation access== Description ==NavigationServer is the server responsible for all 3D navigation. It creates the agents, maps, and regions for navigation to work as expected. This keeps tracks of any call and executes them during the sync phase. This means that you can request any change to the map, using any thread, without worrying.== Methods =={| class="wikitable | [[RID GD|RID]]|| [[#agent_create|agent_create]] '''(''' ''')''' const                                                                                                                                                                                        |-| bool|| [[#agent_is_map_changed|agent_is_map_changed]] '''(''' [[RID GD|RID]] agent ''')''' const                                                                                                                                            |-| void|| [[#agent_set_callback|agent_set_callback]] '''(''' [[RID GD|RID]] agent, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method, [[Variant GD|Variant]] userdata=null ''')''' const                 |-| void|| [[#agent_set_map|agent_set_map]] '''(''' [[RID GD|RID]] agent, [[RID GD|RID]] map ''')''' const                                                                                                                               |-| void|| [[#agent_set_max_neighbors|agent_set_max_neighbors]] '''(''' [[RID GD|RID]] agent, int count ''')''' const                                                                                                         |-| void|| [[#agent_set_max_speed|agent_set_max_speed]] '''(''' [[RID GD|RID]] agent, float max_speed ''')''' const                                                                                                         |-| void|| [[#agent_set_neighbor_dist|agent_set_neighbor_dist]] '''(''' [[RID GD|RID]] agent, float dist ''')''' const                                                                                                      |-| void|| [[#agent_set_position|agent_set_position]] '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] position ''')''' const                                                                                                        |-| void|| [[#agent_set_radius|agent_set_radius]] '''(''' [[RID GD|RID]] agent, float radius ''')''' const                                                                                                                  |-| void|| [[#agent_set_target_velocity|agent_set_target_velocity]] '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] target_velocity ''')''' const                                                                                   |-| void|| [[#agent_set_time_horizon|agent_set_time_horizon]] '''(''' [[RID GD|RID]] agent, float time ''')''' const                                                                                                        |-| void|| [[#agent_set_velocity|agent_set_velocity]] '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] velocity ''')''' const                                                                                                        |-| void|| [[#free|free]] '''(''' [[RID GD|RID]] object ''')''' const                                                                                                                                                                           |-| [[RID GD|RID]]|| [[#map_create|map_create]] '''(''' ''')''' const                                                                                                                                                                                            |-| float|| [[#map_get_cell_size|map_get_cell_size]] '''(''' [[RID GD|RID]] map ''')''' const                                                                                                                                                    |-| [[Vector3 GD|Vector3]]|| [[#map_get_closest_point|map_get_closest_point]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' const                                                                                                    |-| [[Vector3 GD|Vector3]]|| [[#map_get_closest_point_normal|map_get_closest_point_normal]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' const                                                                                      |-| [[RID GD|RID]]|| [[#map_get_closest_point_owner|map_get_closest_point_owner]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' const                                                                                        |-| [[Vector3 GD|Vector3]]|| [[#map_get_closest_point_to_segment|map_get_closest_point_to_segment]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] start, [[Vector3 GD|Vector3]] end, bool use_collision=false ''')''' const |-| float|| [[#map_get_edge_connection_margin|map_get_edge_connection_margin]] '''(''' [[RID GD|RID]] map ''')''' const                                                                                                                          |-| [[PackedVector3Array GD|PackedVector3Array]]|| [[#map_get_path|map_get_path]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] origin, [[Vector3 GD|Vector3]] destination, bool optimize ''')''' const                                           |-| [[Vector3 GD|Vector3]]|| [[#map_get_up|map_get_up]] '''(''' [[RID GD|RID]] map ''')''' const                                                                                                                                                                  |-| bool|| [[#map_is_active|map_is_active]] '''(''' [[RID GD|RID]] nap ''')''' const                                                                                                                                                            |-| void|| [[#map_set_active|map_set_active]] '''(''' [[RID GD|RID]] map, bool active ''')''' const                                                                                                                          |-| void|| [[#map_set_cell_size|map_set_cell_size]] '''(''' [[RID GD|RID]] map, float cell_size ''')''' const                                                                                                               |-| void|| [[#map_set_edge_connection_margin|map_set_edge_connection_margin]] '''(''' [[RID GD|RID]] map, float margin ''')''' const                                                                                        |-| void|| [[#map_set_up|map_set_up]] '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] up ''')''' const                                                                                                                                |-| void|| [[#process|process]] '''(''' float delta_time ''')'''                                                                                                                                                                   |-| void|| [[#region_bake_navmesh|region_bake_navmesh]] '''(''' [[NavigationMesh GD|NavigationMesh]] mesh, [[Node GD|Node]] node ''')''' const                                                                                           |-| [[RID GD|RID]]|| [[#region_create|region_create]] '''(''' ''')''' const                                                                                                                                                                                      |-| void|| [[#region_set_map|region_set_map]] '''(''' [[RID GD|RID]] region, [[RID GD|RID]] map ''')''' const                                                                                                                            |-| void|| [[#region_set_navmesh|region_set_navmesh]] '''(''' [[RID GD|RID]] region, [[NavigationMesh GD|NavigationMesh]] nav_mesh ''')''' const                                                                                         |-| void|| [[#region_set_transform|region_set_transform]] '''(''' [[RID GD|RID]] region, [[Transform GD|Transform]] transform ''')''' const                                                                                              |-| void|| [[#set_active|set_active]] '''(''' bool active ''')''' const                                                                                                                                                             |}== Method Descriptions ===== agent_create ===*  [[RID GD|RID]] '''agent_create ( )''' constCreates the agent.=== agent_is_map_changed ===*  bool '''agent_is_map_changed''' '''(''' [[RID GD|RID]] agent ''')''' constReturns true if the map got changed the previous frame.=== agent_set_callback ===*  void '''agent_set_callback''' '''(''' [[RID GD|RID]] agent, [[Object GD|Object]] receiver, [[StringName GD|StringName]] method, [[Variant GD|Variant]] userdata=null ''')''' constCallback called at the end of the RVO process.=== agent_set_map ===*  void '''agent_set_map''' '''(''' [[RID GD|RID]] agent, [[RID GD|RID]] map ''')''' constPuts the agent in the map.=== agent_set_max_neighbors ===*  void '''agent_set_max_neighbors''' '''(''' [[RID GD|RID]] agent, int count ''')''' constSets the maximum number of other agents the agent takes into account in the navigation. The larger this number, the longer the running time of the simulation. If the number is too low, the simulation will not be safe.=== agent_set_max_speed ===*  void '''agent_set_max_speed''' '''(''' [[RID GD|RID]] agent, float max_speed ''')''' constSets the maximum speed of the agent. Must be positive.=== agent_set_neighbor_dist ===*  void '''agent_set_neighbor_dist''' '''(''' [[RID GD|RID]] agent, float dist ''')''' constSets the maximum distance to other agents this agent takes into account in the navigation. The larger this number, the longer the running time of the simulation. If the number is too low, the simulation will not be safe.=== agent_set_position ===*  void '''agent_set_position''' '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] position ''')''' constSets the position of the agent in world space.=== agent_set_radius ===*  void '''agent_set_radius''' '''(''' [[RID GD|RID]] agent, float radius ''')''' constSets the radius of the agent.=== agent_set_target_velocity ===*  void '''agent_set_target_velocity''' '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] target_velocity ''')''' constSets the new target velocity.=== agent_set_time_horizon ===*  void '''agent_set_time_horizon''' '''(''' [[RID GD|RID]] agent, float time ''')''' constThe minimal amount of time for which the agent's velocities that are computed by the simulation are safe with respect to other agents. The larger this number, the sooner this agent will respond to the presence of other agents, but the less freedom this agent has in choosing its velocities. Must be positive.=== agent_set_velocity ===*  void '''agent_set_velocity''' '''(''' [[RID GD|RID]] agent, [[Vector3 GD|Vector3]] velocity ''')''' constSets the current velocity of the agent.=== free ===*  void '''free''' '''(''' [[RID GD|RID]] object ''')''' constDestroy the RID=== map_create ===*  [[RID GD|RID]] '''map_create ( )''' constCreate a new map.=== map_get_cell_size ===*  float '''map_get_cell_size''' '''(''' [[RID GD|RID]] map ''')''' constReturns the map cell size.=== map_get_closest_point ===*  [[Vector3 GD|Vector3]] '''map_get_closest_point''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' constReturns the point closest to the provided {{Span|point}} on the navigation mesh surface.=== map_get_closest_point_normal ===*  [[Vector3 GD|Vector3]] '''map_get_closest_point_normal''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' constReturns the normal for the point returned by [[#map_get_closest_point|map_get_closest_point]].=== map_get_closest_point_owner ===*  [[RID GD|RID]] '''map_get_closest_point_owner''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] to_point ''')''' constReturns the owner region RID for the point returned by [[#map_get_closest_point|map_get_closest_point]].=== map_get_closest_point_to_segment ===*  [[Vector3 GD|Vector3]] '''map_get_closest_point_to_segment''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] start, [[Vector3 GD|Vector3]] end, bool use_collision=false ''')''' constReturns the closest point between the navigation surface and the segment.=== map_get_edge_connection_margin ===*  float '''map_get_edge_connection_margin''' '''(''' [[RID GD|RID]] map ''')''' constReturns the edge connection margin of the map.=== map_get_path ===*  [[PackedVector3Array GD|PackedVector3Array]] '''map_get_path''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] origin, [[Vector3 GD|Vector3]] destination, bool optimize ''')''' constReturns the navigation path to reach the destination from the origin.=== map_get_up ===*  [[Vector3 GD|Vector3]] '''map_get_up''' '''(''' [[RID GD|RID]] map ''')''' constReturns the map's up direction.=== map_is_active ===*  bool '''map_is_active''' '''(''' [[RID GD|RID]] nap ''')''' constReturns true if the map is active.=== map_set_active ===*  void '''map_set_active''' '''(''' [[RID GD|RID]] map, bool active ''')''' constSets the map active.=== map_set_cell_size ===*  void '''map_set_cell_size''' '''(''' [[RID GD|RID]] map, float cell_size ''')''' constSet the map cell size used to weld the navigation mesh polygons.=== map_set_edge_connection_margin ===*  void '''map_set_edge_connection_margin''' '''(''' [[RID GD|RID]] map, float margin ''')''' constSet the map edge connection margein used to weld the compatible region edges.=== map_set_up ===*  void '''map_set_up''' '''(''' [[RID GD|RID]] map, [[Vector3 GD|Vector3]] up ''')''' constSets the map up direction.=== process ===*  void '''process''' '''(''' float delta_time ''')'''Process the collision avoidance agents.The result of this process is needed by the physics server, so this must be called in the main thread.Note: This function is not thread safe.=== region_bake_navmesh ===*  void '''region_bake_navmesh''' '''(''' [[NavigationMesh GD|NavigationMesh]] mesh, [[Node GD|Node]] node ''')''' constBakes the navigation mesh.=== region_create ===*  [[RID GD|RID]] '''region_create ( )''' constCreates a new region.=== region_set_map ===*  void '''region_set_map''' '''(''' [[RID GD|RID]] region, [[RID GD|RID]] map ''')''' constSets the map for the region.=== region_set_navmesh ===*  void '''region_set_navmesh''' '''(''' [[RID GD|RID]] region, [[NavigationMesh GD|NavigationMesh]] nav_mesh ''')''' constSets the navigation mesh for the region.=== region_set_transform ===*  void '''region_set_transform''' '''(''' [[RID GD|RID]] region, [[Transform GD|Transform]] transform ''')''' constSets the global transformation for the region.=== set_active ===*  void '''set_active''' '''(''' bool active ''')''' constControl activation of this server.