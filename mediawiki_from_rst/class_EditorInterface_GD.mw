__NOTOC__'''Inherits:''' [[Node GD|Node]] '''<''' [[Object GD|Object]]Godot editor's interface.== Description ==EditorInterface gives you control over Godot editor's window. It allows customizing the window, saving and (re-)loading scenes, rendering mesh previews, inspecting and editing resources and objects, and provides access to [[EditorSettings GD|EditorSettings]], [[EditorFileSystem GD|EditorFileSystem]], [[EditorResourcePreview GD|EditorResourcePreview]], [[ScriptEditor GD|ScriptEditor]], the editor viewport, and information about scenes.== Methods =={| class="wikitable | void|| [[#edit_resource|edit_resource]] '''(''' [[Resource GD|Resource]] resource ''')'''                                          |-| [[Control GD|Control]]|| [[#get_base_control|get_base_control]] '''(''' ''')'''                                                                             |-| [[String GD|String]]|| [[#get_current_path|get_current_path]] '''(''' ''')''' const                                                                       |-| [[Node GD|Node]]|| [[#get_edited_scene_root|get_edited_scene_root]] '''(''' ''')'''                                                                   |-| [[EditorSettings GD|EditorSettings]]|| [[#get_editor_settings|get_editor_settings]] '''(''' ''')'''                                                                       |-| [[Control GD|Control]]|| [[#get_editor_viewport|get_editor_viewport]] '''(''' ''')'''                                                                       |-| [[FileSystemDock GD|FileSystemDock]]|| [[#get_file_system_dock|get_file_system_dock]] '''(''' ''')'''                                                                     |-| [[EditorInspector GD|EditorInspector]]|| [[#get_inspector|get_inspector]] '''(''' ''')''' const                                                                             |-| [[Array GD|Array]]|| [[#get_open_scenes|get_open_scenes]] '''(''' ''')''' const                                                                         |-| [[EditorFileSystem GD|EditorFileSystem]]|| [[#get_resource_filesystem|get_resource_filesystem]] '''(''' ''')'''                                                               |-| [[EditorResourcePreview GD|EditorResourcePreview]]|| [[#get_resource_previewer|get_resource_previewer]] '''(''' ''')'''                                                                 |-| [[ScriptEditor GD|ScriptEditor]]|| [[#get_script_editor|get_script_editor]] '''(''' ''')'''                                                                           |-| [[String GD|String]]|| [[#get_selected_path|get_selected_path]] '''(''' ''')''' const                                                                     |-| [[EditorSelection GD|EditorSelection]]|| [[#get_selection|get_selection]] '''(''' ''')'''                                                                                   |-| void|| [[#inspect_object|inspect_object]] '''(''' [[Object GD|Object]] object, [[String GD|String]] for_property="" ''')''' |-| bool|| [[#is_plugin_enabled|is_plugin_enabled]] '''(''' [[String GD|String]] plugin ''')''' const                                  |-| [[Array GD|Array]]|| [[#make_mesh_previews|make_mesh_previews]] '''(''' [[Array GD|Array]] meshes, int preview_size ''')'''    |-| void|| [[#open_scene_from_path|open_scene_from_path]] '''(''' [[String GD|String]] scene_filepath ''')'''                          |-| void|| [[#reload_scene_from_path|reload_scene_from_path]] '''(''' [[String GD|String]] scene_filepath ''')'''                      |-| [[@GlobalScope GD#Error|Error]]|| [[#save_scene|save_scene]] '''(''' ''')'''                                                                                         |-| void|| [[#save_scene_as|save_scene_as]] '''(''' [[String GD|String]] path, bool with_preview=true ''')'''       |-| void|| [[#select_file|select_file]] '''(''' [[String GD|String]] file ''')'''                                                      |-| void|| [[#set_distraction_free_mode|set_distraction_free_mode]] '''(''' bool enter ''')'''                             |-| void|| [[#set_main_screen_editor|set_main_screen_editor]] '''(''' [[String GD|String]] name ''')'''                                |-| void|| [[#set_plugin_enabled|set_plugin_enabled]] '''(''' [[String GD|String]] plugin, bool enabled ''')'''     |}== Method Descriptions ===== edit_resource ===*  void '''edit_resource''' '''(''' [[Resource GD|Resource]] resource ''')'''Edits the given [[Resource GD|Resource]].=== get_base_control ===*  [[Control GD|Control]] '''get_base_control ( )'''Returns the main container of Godot editor's window. You can use it, for example, to retrieve the size of the container and place your controls accordingly.=== get_current_path ===*  [[String GD|String]] '''get_current_path ( )''' const=== get_edited_scene_root ===*  [[Node GD|Node]] '''get_edited_scene_root ( )'''Returns the edited (current) scene's root [[Node GD|Node]].=== get_editor_settings ===*  [[EditorSettings GD|EditorSettings]] '''get_editor_settings ( )'''Returns the [[EditorSettings GD|EditorSettings]].=== get_editor_viewport ===*  [[Control GD|Control]] '''get_editor_viewport ( )'''Returns the editor [[Viewport GD|Viewport]].=== get_file_system_dock ===*  [[FileSystemDock GD|FileSystemDock]] '''get_file_system_dock ( )'''=== get_inspector ===*  [[EditorInspector GD|EditorInspector]] '''get_inspector ( )''' const=== get_open_scenes ===*  [[Array GD|Array]] '''get_open_scenes ( )''' constReturns an [[Array GD|Array]] with the file paths of the currently opened scenes.=== get_resource_filesystem ===*  [[EditorFileSystem GD|EditorFileSystem]] '''get_resource_filesystem ( )'''Returns the [[EditorFileSystem GD|EditorFileSystem]].=== get_resource_previewer ===*  [[EditorResourcePreview GD|EditorResourcePreview]] '''get_resource_previewer ( )'''Returns the [[EditorResourcePreview GD|EditorResourcePreview]].=== get_script_editor ===*  [[ScriptEditor GD|ScriptEditor]] '''get_script_editor ( )'''Returns the [[ScriptEditor GD|ScriptEditor]].=== get_selected_path ===*  [[String GD|String]] '''get_selected_path ( )''' const=== get_selection ===*  [[EditorSelection GD|EditorSelection]] '''get_selection ( )'''Returns the [[EditorSelection GD|EditorSelection]].=== inspect_object ===*  void '''inspect_object''' '''(''' [[Object GD|Object]] object, [[String GD|String]] for_property="" ''')'''Shows the given property on the given {{Span|object}} in the Editor's Inspector dock.=== is_plugin_enabled ===*  bool '''is_plugin_enabled''' '''(''' [[String GD|String]] plugin ''')''' constReturns the enabled status of a plugin. The plugin name is the same as its directory name.=== make_mesh_previews ===*  [[Array GD|Array]] '''make_mesh_previews''' '''(''' [[Array GD|Array]] meshes, int preview_size ''')'''Returns mesh previews rendered at the given size as an [[Array GD|Array]] of [[Texture2D GD|Texture2D]]\ s.=== open_scene_from_path ===*  void '''open_scene_from_path''' '''(''' [[String GD|String]] scene_filepath ''')'''Opens the scene at the given path.=== reload_scene_from_path ===*  void '''reload_scene_from_path''' '''(''' [[String GD|String]] scene_filepath ''')'''Reloads the scene at the given path.=== save_scene ===*  [[@GlobalScope GD#Error|Error]] '''save_scene ( )'''Saves the scene. Returns either {{Span|OK}} or {{Span|ERR_CANT_CREATE}} (see [[@GlobalScope GD|@GlobalScope]] constants).=== save_scene_as ===*  void '''save_scene_as''' '''(''' [[String GD|String]] path, bool with_preview=true ''')'''Saves the scene as a file at {{Span|path}}.=== select_file ===*  void '''select_file''' '''(''' [[String GD|String]] file ''')'''Selects the file, with the path provided by {{Span|file}}, in the FileSystem dock.=== set_distraction_free_mode ===*  void '''set_distraction_free_mode''' '''(''' bool enter ''')'''=== set_main_screen_editor ===*  void '''set_main_screen_editor''' '''(''' [[String GD|String]] name ''')'''=== set_plugin_enabled ===*  void '''set_plugin_enabled''' '''(''' [[String GD|String]] plugin, bool enabled ''')'''Sets the enabled status of a plugin. The plugin name is the same as its directory name.