__NOTOC__'''Inherits:''' [[Joint GD|Joint]] '''<''' [[Spatial GD|Spatial]] '''<''' [[Node GD|Node]] '''<''' [[Object GD|Object]]The generic 6-degrees-of-freedom joint can implement a variety of joint types by locking certain axes' rotation or translation.== Description ==The first 3 DOF axes are linear axes, which represent translation of Bodies, and the latter 3 DOF axes represent the angular motion. Each axis can be either locked, or limited.== Properties =={| class="wikitable | float|| [[#angular_limit_x/damping|angular_limit_x/damping]]|| {{Span|1.0}}   |-| bool|| [[#angular_limit_x/enabled|angular_limit_x/enabled]]|| {{Span|true}}  |-| float|| [[#angular_limit_x/erp|angular_limit_x/erp]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_x/force_limit|angular_limit_x/force_limit]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_x/lower_angle|angular_limit_x/lower_angle]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_x/restitution|angular_limit_x/restitution]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_x/softness|angular_limit_x/softness]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_x/upper_angle|angular_limit_x/upper_angle]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_y/damping|angular_limit_y/damping]]|| {{Span|1.0}}   |-| bool|| [[#angular_limit_y/enabled|angular_limit_y/enabled]]|| {{Span|true}}  |-| float|| [[#angular_limit_y/erp|angular_limit_y/erp]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_y/force_limit|angular_limit_y/force_limit]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_y/lower_angle|angular_limit_y/lower_angle]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_y/restitution|angular_limit_y/restitution]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_y/softness|angular_limit_y/softness]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_y/upper_angle|angular_limit_y/upper_angle]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_z/damping|angular_limit_z/damping]]|| {{Span|1.0}}   |-| bool|| [[#angular_limit_z/enabled|angular_limit_z/enabled]]|| {{Span|true}}  |-| float|| [[#angular_limit_z/erp|angular_limit_z/erp]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_z/force_limit|angular_limit_z/force_limit]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_z/lower_angle|angular_limit_z/lower_angle]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_z/restitution|angular_limit_z/restitution]]|| {{Span|0.0}}   |-| float|| [[#angular_limit_z/softness|angular_limit_z/softness]]|| {{Span|0.5}}   |-| float|| [[#angular_limit_z/upper_angle|angular_limit_z/upper_angle]]|| {{Span|0.0}}   |-| bool|| [[#angular_motor_x/enabled|angular_motor_x/enabled]]|| {{Span|false}} |-| float|| [[#angular_motor_x/force_limit|angular_motor_x/force_limit]]|| {{Span|300.0}} |-| float|| [[#angular_motor_x/target_velocity|angular_motor_x/target_velocity]]|| {{Span|0.0}}   |-| bool|| [[#angular_motor_y/enabled|angular_motor_y/enabled]]|| {{Span|false}} |-| float|| [[#angular_motor_y/force_limit|angular_motor_y/force_limit]]|| {{Span|300.0}} |-| float|| [[#angular_motor_y/target_velocity|angular_motor_y/target_velocity]]|| {{Span|0.0}}   |-| bool|| [[#angular_motor_z/enabled|angular_motor_z/enabled]]|| {{Span|false}} |-| float|| [[#angular_motor_z/force_limit|angular_motor_z/force_limit]]|| {{Span|300.0}} |-| float|| [[#angular_motor_z/target_velocity|angular_motor_z/target_velocity]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_x/damping|angular_spring_x/damping]]|| {{Span|0.0}}   |-| bool|| [[#angular_spring_x/enabled|angular_spring_x/enabled]]|| {{Span|false}} |-| float|| [[#angular_spring_x/equilibrium_point|angular_spring_x/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_x/stiffness|angular_spring_x/stiffness]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_y/damping|angular_spring_y/damping]]|| {{Span|0.0}}   |-| bool|| [[#angular_spring_y/enabled|angular_spring_y/enabled]]|| {{Span|false}} |-| float|| [[#angular_spring_y/equilibrium_point|angular_spring_y/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_y/stiffness|angular_spring_y/stiffness]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_z/damping|angular_spring_z/damping]]|| {{Span|0.0}}   |-| bool|| [[#angular_spring_z/enabled|angular_spring_z/enabled]]|| {{Span|false}} |-| float|| [[#angular_spring_z/equilibrium_point|angular_spring_z/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#angular_spring_z/stiffness|angular_spring_z/stiffness]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_x/damping|linear_limit_x/damping]]|| {{Span|1.0}}   |-| bool|| [[#linear_limit_x/enabled|linear_limit_x/enabled]]|| {{Span|true}}  |-| float|| [[#linear_limit_x/lower_distance|linear_limit_x/lower_distance]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_x/restitution|linear_limit_x/restitution]]|| {{Span|0.5}}   |-| float|| [[#linear_limit_x/softness|linear_limit_x/softness]]|| {{Span|0.7}}   |-| float|| [[#linear_limit_x/upper_distance|linear_limit_x/upper_distance]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_y/damping|linear_limit_y/damping]]|| {{Span|1.0}}   |-| bool|| [[#linear_limit_y/enabled|linear_limit_y/enabled]]|| {{Span|true}}  |-| float|| [[#linear_limit_y/lower_distance|linear_limit_y/lower_distance]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_y/restitution|linear_limit_y/restitution]]|| {{Span|0.5}}   |-| float|| [[#linear_limit_y/softness|linear_limit_y/softness]]|| {{Span|0.7}}   |-| float|| [[#linear_limit_y/upper_distance|linear_limit_y/upper_distance]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_z/damping|linear_limit_z/damping]]|| {{Span|1.0}}   |-| bool|| [[#linear_limit_z/enabled|linear_limit_z/enabled]]|| {{Span|true}}  |-| float|| [[#linear_limit_z/lower_distance|linear_limit_z/lower_distance]]|| {{Span|0.0}}   |-| float|| [[#linear_limit_z/restitution|linear_limit_z/restitution]]|| {{Span|0.5}}   |-| float|| [[#linear_limit_z/softness|linear_limit_z/softness]]|| {{Span|0.7}}   |-| float|| [[#linear_limit_z/upper_distance|linear_limit_z/upper_distance]]|| {{Span|0.0}}   |-| bool|| [[#linear_motor_x/enabled|linear_motor_x/enabled]]|| {{Span|false}} |-| float|| [[#linear_motor_x/force_limit|linear_motor_x/force_limit]]|| {{Span|0.0}}   |-| float|| [[#linear_motor_x/target_velocity|linear_motor_x/target_velocity]]|| {{Span|0.0}}   |-| bool|| [[#linear_motor_y/enabled|linear_motor_y/enabled]]|| {{Span|false}} |-| float|| [[#linear_motor_y/force_limit|linear_motor_y/force_limit]]|| {{Span|0.0}}   |-| float|| [[#linear_motor_y/target_velocity|linear_motor_y/target_velocity]]|| {{Span|0.0}}   |-| bool|| [[#linear_motor_z/enabled|linear_motor_z/enabled]]|| {{Span|false}} |-| float|| [[#linear_motor_z/force_limit|linear_motor_z/force_limit]]|| {{Span|0.0}}   |-| float|| [[#linear_motor_z/target_velocity|linear_motor_z/target_velocity]]|| {{Span|0.0}}   |-| float|| [[#linear_spring_x/damping|linear_spring_x/damping]]|| {{Span|0.01}}  |-| bool|| [[#linear_spring_x/enabled|linear_spring_x/enabled]]|| {{Span|false}} |-| float|| [[#linear_spring_x/equilibrium_point|linear_spring_x/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#linear_spring_x/stiffness|linear_spring_x/stiffness]]|| {{Span|0.01}}  |-| float|| [[#linear_spring_y/damping|linear_spring_y/damping]]|| {{Span|0.01}}  |-| bool|| [[#linear_spring_y/enabled|linear_spring_y/enabled]]|| {{Span|false}} |-| float|| [[#linear_spring_y/equilibrium_point|linear_spring_y/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#linear_spring_y/stiffness|linear_spring_y/stiffness]]|| {{Span|0.01}}  |-| float|| [[#linear_spring_z/damping|linear_spring_z/damping]]|| {{Span|0.01}}  |-| bool|| [[#linear_spring_z/enabled|linear_spring_z/enabled]]|| {{Span|false}} |-| float|| [[#linear_spring_z/equilibrium_point|linear_spring_z/equilibrium_point]]|| {{Span|0.0}}   |-| float|| [[#linear_spring_z/stiffness|linear_spring_z/stiffness]]|| {{Span|0.01}}  |-| int|| [[#precision|precision]]|| {{Span|1}}     |}== Methods =={| class="wikitable | bool|| [[#get_flag_x|get_flag_x]] '''(''' [[#Flag|Flag]] flag ''')''' const                                 |-| bool|| [[#get_flag_y|get_flag_y]] '''(''' [[#Flag|Flag]] flag ''')''' const                                 |-| bool|| [[#get_flag_z|get_flag_z]] '''(''' [[#Flag|Flag]] flag ''')''' const                                 |-| float|| [[#get_param_x|get_param_x]] '''(''' [[#Param|Param]] param ''')''' const                            |-| float|| [[#get_param_y|get_param_y]] '''(''' [[#Param|Param]] param ''')''' const                            |-| float|| [[#get_param_z|get_param_z]] '''(''' [[#Param|Param]] param ''')''' const                            |-| void|| [[#set_flag_x|set_flag_x]] '''(''' [[#Flag|Flag]] flag, bool value ''')'''        |-| void|| [[#set_flag_y|set_flag_y]] '''(''' [[#Flag|Flag]] flag, bool value ''')'''        |-| void|| [[#set_flag_z|set_flag_z]] '''(''' [[#Flag|Flag]] flag, bool value ''')'''        |-| void|| [[#set_param_x|set_param_x]] '''(''' [[#Param|Param]] param, float value ''')''' |-| void|| [[#set_param_y|set_param_y]] '''(''' [[#Param|Param]] param, float value ''')''' |-| void|| [[#set_param_z|set_param_z]] '''(''' [[#Param|Param]] param, float value ''')''' |}== Enumerations ===== Param ====== PARAM_LINEAR_LOWER_LIMIT ====== PARAM_LINEAR_UPPER_LIMIT ====== PARAM_LINEAR_LIMIT_SOFTNESS ====== PARAM_LINEAR_RESTITUTION ====== PARAM_LINEAR_DAMPING ====== PARAM_LINEAR_MOTOR_TARGET_VELOCITY ====== PARAM_LINEAR_MOTOR_FORCE_LIMIT ====== PARAM_ANGULAR_LOWER_LIMIT ====== PARAM_ANGULAR_UPPER_LIMIT ====== PARAM_ANGULAR_LIMIT_SOFTNESS ====== PARAM_ANGULAR_DAMPING ====== PARAM_ANGULAR_RESTITUTION ====== PARAM_ANGULAR_FORCE_LIMIT ====== PARAM_ANGULAR_ERP ====== PARAM_ANGULAR_MOTOR_TARGET_VELOCITY ====== PARAM_ANGULAR_MOTOR_FORCE_LIMIT ====== PARAM_MAX ===enum '''Param''':*  '''PARAM_LINEAR_LOWER_LIMIT''' = '''0'''  The minimum difference between the pivot points' axes.*  '''PARAM_LINEAR_UPPER_LIMIT''' = '''1'''  The maximum difference between the pivot points' axes.*  '''PARAM_LINEAR_LIMIT_SOFTNESS''' = '''2'''  A factor applied to the movement across the axes. The lower, the slower the movement.*  '''PARAM_LINEAR_RESTITUTION''' = '''3'''  The amount of restitution on the axes' movement. The lower, the more momentum gets lost.*  '''PARAM_LINEAR_DAMPING''' = '''4'''  The amount of damping that happens at the linear motion across the axes.*  '''PARAM_LINEAR_MOTOR_TARGET_VELOCITY''' = '''5'''  The velocity the linear motor will try to reach.*  '''PARAM_LINEAR_MOTOR_FORCE_LIMIT''' = '''6'''  The maximum force the linear motor will apply while trying to reach the velocity target.*  '''PARAM_ANGULAR_LOWER_LIMIT''' = '''10'''  The minimum rotation in negative direction to break loose and rotate around the axes.*  '''PARAM_ANGULAR_UPPER_LIMIT''' = '''11'''  The minimum rotation in positive direction to break loose and rotate around the axes.*  '''PARAM_ANGULAR_LIMIT_SOFTNESS''' = '''12'''  The speed of all rotations across the axes.*  '''PARAM_ANGULAR_DAMPING''' = '''13'''  The amount of rotational damping across the axes. The lower, the more dampening occurs.*  '''PARAM_ANGULAR_RESTITUTION''' = '''14'''  The amount of rotational restitution across the axes. The lower, the more restitution occurs.*  '''PARAM_ANGULAR_FORCE_LIMIT''' = '''15'''  The maximum amount of force that can occur, when rotating around the axes.*  '''PARAM_ANGULAR_ERP''' = '''16'''  When rotating across the axes, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.*  '''PARAM_ANGULAR_MOTOR_TARGET_VELOCITY''' = '''17'''  Target speed for the motor at the axes.*  '''PARAM_ANGULAR_MOTOR_FORCE_LIMIT''' = '''18'''  Maximum acceleration for the motor at the axes.*  '''PARAM_MAX''' = '''22'''  Represents the size of the [[#Param|Param]] enum.=== Flag ====== FLAG_ENABLE_LINEAR_LIMIT ====== FLAG_ENABLE_ANGULAR_LIMIT ====== FLAG_ENABLE_LINEAR_SPRING ====== FLAG_ENABLE_ANGULAR_SPRING ====== FLAG_ENABLE_MOTOR ====== FLAG_ENABLE_LINEAR_MOTOR ====== FLAG_MAX ===enum '''Flag''':*  '''FLAG_ENABLE_LINEAR_LIMIT''' = '''0'''  If enabled, linear motion is possible within the given limits.*  '''FLAG_ENABLE_ANGULAR_LIMIT''' = '''1'''  If enabled, rotational motion is possible within the given limits.*  '''FLAG_ENABLE_LINEAR_SPRING''' = '''3'''*  '''FLAG_ENABLE_ANGULAR_SPRING''' = '''2'''*  '''FLAG_ENABLE_MOTOR''' = '''4'''  If enabled, there is a rotational motor across these axes.*  '''FLAG_ENABLE_LINEAR_MOTOR''' = '''5'''  If enabled, there is a linear motor across these axes.*  '''FLAG_MAX''' = '''6'''  Represents the size of the [[#Flag|Flag]] enum.== Property Descriptions ===== x/damping ===*  float '''angular_limit_x/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The amount of rotational damping across the X axis.The lower, the longer an impulse from one side takes to travel to the other side.=== x/enabled ===*  bool '''angular_limit_x/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}If {{Span|true}}, rotation across the X axis is limited.=== x/erp ===*  float '''angular_limit_x/erp'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}When rotating across the X axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.=== x/force_limit ===*  float '''angular_limit_x/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The maximum amount of force that can occur, when rotating around the X axis.=== x/lower_angle ===*  float '''angular_limit_x/lower_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in negative direction to break loose and rotate around the X axis.=== x/restitution ===*  float '''angular_limit_x/restitution'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The amount of rotational restitution across the X axis. The lower, the more restitution occurs.=== x/softness ===*  float '''angular_limit_x/softness'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The speed of all rotations across the X axis.=== x/upper_angle ===*  float '''angular_limit_x/upper_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in positive direction to break loose and rotate around the X axis.=== y/damping ===*  float '''angular_limit_y/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The amount of rotational damping across the Y axis. The lower, the more dampening occurs.=== y/enabled ===*  bool '''angular_limit_y/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}If {{Span|true}}, rotation across the Y axis is limited.=== y/erp ===*  float '''angular_limit_y/erp'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}When rotating across the Y axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.=== y/force_limit ===*  float '''angular_limit_y/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The maximum amount of force that can occur, when rotating around the Y axis.=== y/lower_angle ===*  float '''angular_limit_y/lower_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in negative direction to break loose and rotate around the Y axis.=== y/restitution ===*  float '''angular_limit_y/restitution'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The amount of rotational restitution across the Y axis. The lower, the more restitution occurs.=== y/softness ===*  float '''angular_limit_y/softness'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The speed of all rotations across the Y axis.=== y/upper_angle ===*  float '''angular_limit_y/upper_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in positive direction to break loose and rotate around the Y axis.=== z/damping ===*  float '''angular_limit_z/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The amount of rotational damping across the Z axis. The lower, the more dampening occurs.=== z/enabled ===*  bool '''angular_limit_z/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}If {{Span|true}}, rotation across the Z axis is limited.=== z/erp ===*  float '''angular_limit_z/erp'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}When rotating across the Z axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.=== z/force_limit ===*  float '''angular_limit_z/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The maximum amount of force that can occur, when rotating around the Z axis.=== z/lower_angle ===*  float '''angular_limit_z/lower_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in negative direction to break loose and rotate around the Z axis.=== z/restitution ===*  float '''angular_limit_z/restitution'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The amount of rotational restitution across the Z axis. The lower, the more restitution occurs.=== z/softness ===*  float '''angular_limit_z/softness'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The speed of all rotations across the Z axis.=== z/upper_angle ===*  float '''angular_limit_z/upper_angle'''{| class="wikitable | ''Default''|| {{Span|0.0}} |}The minimum rotation in positive direction to break loose and rotate around the Z axis.=== x/enabled ===*  bool '''angular_motor_x/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}If {{Span|true}}, a rotating motor at the X axis is enabled.=== x/force_limit ===*  float '''angular_motor_x/force_limit'''{| class="wikitable | ''Default''|| {{Span|300.0}}          |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}Maximum acceleration for the motor at the X axis.=== x/target_velocity ===*  float '''angular_motor_x/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}Target speed for the motor at the X axis.=== y/enabled ===*  bool '''angular_motor_y/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}If {{Span|true}}, a rotating motor at the Y axis is enabled.=== y/force_limit ===*  float '''angular_motor_y/force_limit'''{| class="wikitable | ''Default''|| {{Span|300.0}}          |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}Maximum acceleration for the motor at the Y axis.=== y/target_velocity ===*  float '''angular_motor_y/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}Target speed for the motor at the Y axis.=== z/enabled ===*  bool '''angular_motor_z/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}If {{Span|true}}, a rotating motor at the Z axis is enabled.=== z/force_limit ===*  float '''angular_motor_z/force_limit'''{| class="wikitable | ''Default''|| {{Span|300.0}}          |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}Maximum acceleration for the motor at the Z axis.=== z/target_velocity ===*  float '''angular_motor_z/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}Target speed for the motor at the Z axis.=== x/damping ===*  float '''angular_spring_x/damping'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== x/enabled ===*  bool '''angular_spring_x/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}=== x/equilibrium_point ===*  float '''angular_spring_x/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== x/stiffness ===*  float '''angular_spring_x/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== y/damping ===*  float '''angular_spring_y/damping'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== y/enabled ===*  bool '''angular_spring_y/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}=== y/equilibrium_point ===*  float '''angular_spring_y/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== y/stiffness ===*  float '''angular_spring_y/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== z/damping ===*  float '''angular_spring_z/damping'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== z/enabled ===*  bool '''angular_spring_z/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}=== z/equilibrium_point ===*  float '''angular_spring_z/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== z/stiffness ===*  float '''angular_spring_z/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== x/damping ===*  float '''linear_limit_x/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The amount of damping that happens at the X motion.=== x/enabled ===*  bool '''linear_limit_x/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}If {{Span|true}}, the linear motion across the X axis is limited.=== x/lower_distance ===*  float '''linear_limit_x/lower_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The minimum difference between the pivot points' X axis.=== x/restitution ===*  float '''linear_limit_x/restitution'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The amount of restitution on the X axis movement. The lower, the more momentum gets lost.=== x/softness ===*  float '''linear_limit_x/softness'''{| class="wikitable | ''Default''|| {{Span|0.7}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}A factor applied to the movement across the X axis. The lower, the slower the movement.=== x/upper_distance ===*  float '''linear_limit_x/upper_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The maximum difference between the pivot points' X axis.=== y/damping ===*  float '''linear_limit_y/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The amount of damping that happens at the Y motion.=== y/enabled ===*  bool '''linear_limit_y/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}If {{Span|true}}, the linear motion across the Y axis is limited.=== y/lower_distance ===*  float '''linear_limit_y/lower_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The minimum difference between the pivot points' Y axis.=== y/restitution ===*  float '''linear_limit_y/restitution'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The amount of restitution on the Y axis movement. The lower, the more momentum gets lost.=== y/softness ===*  float '''linear_limit_y/softness'''{| class="wikitable | ''Default''|| {{Span|0.7}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}A factor applied to the movement across the Y axis. The lower, the slower the movement.=== y/upper_distance ===*  float '''linear_limit_y/upper_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The maximum difference between the pivot points' Y axis.=== z/damping ===*  float '''linear_limit_z/damping'''{| class="wikitable | ''Default''|| {{Span|1.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The amount of damping that happens at the Z motion.=== z/enabled ===*  bool '''linear_limit_z/enabled'''{| class="wikitable | ''Default''|| {{Span|true}}          |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}If {{Span|true}}, the linear motion across the Z axis is limited.=== z/lower_distance ===*  float '''linear_limit_z/lower_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The minimum difference between the pivot points' Z axis.=== z/restitution ===*  float '''linear_limit_z/restitution'''{| class="wikitable | ''Default''|| {{Span|0.5}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The amount of restitution on the Z axis movement. The lower, the more momentum gets lost.=== z/softness ===*  float '''linear_limit_z/softness'''{| class="wikitable | ''Default''|| {{Span|0.7}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}A factor applied to the movement across the Z axis. The lower, the slower the movement.=== z/upper_distance ===*  float '''linear_limit_z/upper_distance'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The maximum difference between the pivot points' Z axis.=== x/enabled ===*  bool '''linear_motor_x/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}If {{Span|true}}, then there is a linear motor on the X axis. It will attempt to reach the target velocity while staying within the force limits.=== x/force_limit ===*  float '''linear_motor_x/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The maximum force the linear motor can apply on the X axis while trying to reach the target velocity.=== x/target_velocity ===*  float '''linear_motor_x/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}The speed that the linear motor will attempt to reach on the X axis.=== y/enabled ===*  bool '''linear_motor_y/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}If {{Span|true}}, then there is a linear motor on the Y axis. It will attempt to reach the target velocity while staying within the force limits.=== y/force_limit ===*  float '''linear_motor_y/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The maximum force the linear motor can apply on the Y axis while trying to reach the target velocity.=== y/target_velocity ===*  float '''linear_motor_y/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}The speed that the linear motor will attempt to reach on the Y axis.=== z/enabled ===*  bool '''linear_motor_z/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}If {{Span|true}}, then there is a linear motor on the Z axis. It will attempt to reach the target velocity while staying within the force limits.=== z/force_limit ===*  float '''linear_motor_z/force_limit'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The maximum force the linear motor can apply on the Z axis while trying to reach the target velocity.=== z/target_velocity ===*  float '''linear_motor_z/target_velocity'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}The speed that the linear motor will attempt to reach on the Z axis.=== x/damping ===*  float '''linear_spring_x/damping'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== x/enabled ===*  bool '''linear_spring_x/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_x(value) |-| ''Getter''|| get_flag_x()      |}=== x/equilibrium_point ===*  float '''linear_spring_x/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== x/stiffness ===*  float '''linear_spring_x/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_x(value) |-| ''Getter''|| get_param_x()      |}=== y/damping ===*  float '''linear_spring_y/damping'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== y/enabled ===*  bool '''linear_spring_y/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_y(value) |-| ''Getter''|| get_flag_y()      |}=== y/equilibrium_point ===*  float '''linear_spring_y/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== y/stiffness ===*  float '''linear_spring_y/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_y(value) |-| ''Getter''|| get_param_y()      |}=== z/damping ===*  float '''linear_spring_z/damping'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== z/enabled ===*  bool '''linear_spring_z/enabled'''{| class="wikitable | ''Default''|| {{Span|false}}         |-| ''Setter''|| set_flag_z(value) |-| ''Getter''|| get_flag_z()      |}=== z/equilibrium_point ===*  float '''linear_spring_z/equilibrium_point'''{| class="wikitable | ''Default''|| {{Span|0.0}}            |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== z/stiffness ===*  float '''linear_spring_z/stiffness'''{| class="wikitable | ''Default''|| {{Span|0.01}}           |-| ''Setter''|| set_param_z(value) |-| ''Getter''|| get_param_z()      |}=== precision ===*  int '''precision'''{| class="wikitable | ''Default''|| {{Span|1}}                |-| ''Setter''|| set_precision(value) |-| ''Getter''|| get_precision()      |}== Method Descriptions ===== get_flag_x ===*  bool '''get_flag_x''' '''(''' [[#Flag|Flag]] flag ''')''' const=== get_flag_y ===*  bool '''get_flag_y''' '''(''' [[#Flag|Flag]] flag ''')''' const=== get_flag_z ===*  bool '''get_flag_z''' '''(''' [[#Flag|Flag]] flag ''')''' const=== get_param_x ===*  float '''get_param_x''' '''(''' [[#Param|Param]] param ''')''' const=== get_param_y ===*  float '''get_param_y''' '''(''' [[#Param|Param]] param ''')''' const=== get_param_z ===*  float '''get_param_z''' '''(''' [[#Param|Param]] param ''')''' const=== set_flag_x ===*  void '''set_flag_x''' '''(''' [[#Flag|Flag]] flag, bool value ''')'''=== set_flag_y ===*  void '''set_flag_y''' '''(''' [[#Flag|Flag]] flag, bool value ''')'''=== set_flag_z ===*  void '''set_flag_z''' '''(''' [[#Flag|Flag]] flag, bool value ''')'''=== set_param_x ===*  void '''set_param_x''' '''(''' [[#Param|Param]] param, float value ''')'''=== set_param_y ===*  void '''set_param_y''' '''(''' [[#Param|Param]] param, float value ''')'''=== set_param_z ===*  void '''set_param_z''' '''(''' [[#Param|Param]] param, float value ''')'''