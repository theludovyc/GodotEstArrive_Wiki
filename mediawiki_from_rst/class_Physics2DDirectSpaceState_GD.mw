__NOTOC__'''Inherits:''' [[Object GD|Object]]Direct access object to a space in the [[Physics2DServer GD|Physics2DServer]].== Description ==Direct access object to a space in the [[Physics2DServer GD|Physics2DServer]]. It's used mainly to do queries against objects and areas residing in a given space.== Tutorials ==*  :doc:`../tutorials/physics/ray-casting`== Methods =={| class="wikitable | [[Array GD|Array]]|| [[#cast_motion|cast_motion]] '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape ''')'''                                                                                                                                                                                                                                                               |-| [[Array GD|Array]]|| [[#collide_shape|collide_shape]] '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape, int max_results=32 ''')'''                                                                                                                                                                                                                     |-| [[Dictionary GD|Dictionary]]|| [[#get_rest_info|get_rest_info]] '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape ''')'''                                                                                                                                                                                                                                                           |-| [[Array GD|Array]]|| [[#intersect_point|intersect_point]] '''(''' [[Vector2 GD|Vector2]] point, int max_results=32, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')'''                                                               |-| [[Array GD|Array]]|| [[#intersect_point_on_canvas|intersect_point_on_canvas]] '''(''' [[Vector2 GD|Vector2]] point, int canvas_instance_id, int max_results=32, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')''' |-| [[Dictionary GD|Dictionary]]|| [[#intersect_ray|intersect_ray]] '''(''' [[Vector2 GD|Vector2]] from, [[Vector2 GD|Vector2]] to, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')'''                                                                        |-| [[Array GD|Array]]|| [[#intersect_shape|intersect_shape]] '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape, int max_results=32 ''')'''                                                                                                                                                                                                                 |}== Method Descriptions ===== cast_motion ===*  [[Array GD|Array]] '''cast_motion''' '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape ''')'''Checks how far the shape can travel toward a point. If the shape can not move, the array will be empty.'''Note:''' Both the shape and the motion are supplied through a [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] object. The method will return an array with two floats between 0 and 1, both representing a fraction of {{Span|motion}}. The first is how far the shape can move without triggering a collision, and the second is the point at which a collision will occur. If no collision is detected, the returned array will be {{Span|[1, 1]}}.=== collide_shape ===*  [[Array GD|Array]] '''collide_shape''' '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape, int max_results=32 ''')'''Checks the intersections of a shape, given through a [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] object, against the space. The resulting array contains a list of points where the shape intersects another. Like with [[#intersect_shape|intersect_shape]], the number of returned results can be limited to save processing time.=== get_rest_info ===*  [[Dictionary GD|Dictionary]] '''get_rest_info''' '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape ''')'''Checks the intersections of a shape, given through a [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] object, against the space. If it collides with more than one shape, the nearest one is selected. If the shape did not intersect anything, then an empty dictionary is returned instead.'''Note:''' This method does not take into account the {{Span|motion}} property of the object. The returned object is a dictionary containing the following fields:{{Span|collider_id}}: The colliding object's ID.{{Span|linear_velocity}}: The colliding object's velocity [[Vector2 GD|Vector2]]. If the object is an [[Area2D GD|Area2D]], the result is {{Span|(0, 0)}}.{{Span|metadata}}: The intersecting shape's metadata. This metadata is different from [[Object GD#get_meta|Object.get_meta()]], and is set with [[Physics2DServer GD#shape_set_data|Physics2DServer.shape_set_data()]].{{Span|normal}}: The object's surface normal at the intersection point.{{Span|point}}: The intersection point.{{Span|rid}}: The intersecting object's [[RID GD|RID]].{{Span|shape}}: The shape index of the colliding shape.=== intersect_point ===*  [[Array GD|Array]] '''intersect_point''' '''(''' [[Vector2 GD|Vector2]] point, int max_results=32, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')'''Checks whether a point is inside any shape. The shapes the point is inside of are returned in an array containing dictionaries with the following fields:{{Span|collider}}: The colliding object.{{Span|collider_id}}: The colliding object's ID.{{Span|metadata}}: The intersecting shape's metadata. This metadata is different from [[Object GD#get_meta|Object.get_meta()]], and is set with [[Physics2DServer GD#shape_set_data|Physics2DServer.shape_set_data()]].{{Span|rid}}: The intersecting object's [[RID GD|RID]].{{Span|shape}}: The shape index of the colliding shape.Additionally, the method can take an {{Span|exclude}} array of objects or [[RID GD|RID]]\ s that are to be excluded from collisions, a {{Span|collision_mask}} bitmask representing the physics layers to check in, or booleans to determine if the ray should collide with [[PhysicsBody GD|PhysicsBody]]\ s or [[Area GD|Area]]\ s, respectively.=== intersect_point_on_canvas ===*  [[Array GD|Array]] '''intersect_point_on_canvas''' '''(''' [[Vector2 GD|Vector2]] point, int canvas_instance_id, int max_results=32, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')'''=== intersect_ray ===*  [[Dictionary GD|Dictionary]] '''intersect_ray''' '''(''' [[Vector2 GD|Vector2]] from, [[Vector2 GD|Vector2]] to, [[Array GD|Array]] exclude=[  ], int collision_layer=2147483647, bool collide_with_bodies=true, bool collide_with_areas=false ''')'''Intersects a ray in a given space. The returned object is a dictionary with the following fields:{{Span|collider}}: The colliding object.{{Span|collider_id}}: The colliding object's ID.{{Span|metadata}}: The intersecting shape's metadata. This metadata is different from [[Object GD#get_meta|Object.get_meta()]], and is set with [[Physics2DServer GD#shape_set_data|Physics2DServer.shape_set_data()]].{{Span|normal}}: The object's surface normal at the intersection point.{{Span|position}}: The intersection point.{{Span|rid}}: The intersecting object's [[RID GD|RID]].{{Span|shape}}: The shape index of the colliding shape.If the ray did not intersect anything, then an empty dictionary is returned instead.Additionally, the method can take an {{Span|exclude}} array of objects or [[RID GD|RID]]\ s that are to be excluded from collisions, a {{Span|collision_mask}} bitmask representing the physics layers to check in, or booleans to determine if the ray should collide with [[PhysicsBody GD|PhysicsBody]]\ s or [[Area GD|Area]]\ s, respectively.=== intersect_shape ===*  [[Array GD|Array]] '''intersect_shape''' '''(''' [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] shape, int max_results=32 ''')'''Checks the intersections of a shape, given through a [[Physics2DShapeQueryParameters GD|Physics2DShapeQueryParameters]] object, against the space.'''Note:''' This method does not take into account the {{Span|motion}} property of the object. The intersected shapes are returned in an array containing dictionaries with the following fields:{{Span|collider}}: The colliding object.{{Span|collider_id}}: The colliding object's ID.{{Span|metadata}}: The intersecting shape's metadata. This metadata is different from [[Object GD#get_meta|Object.get_meta()]], and is set with [[Physics2DServer GD#shape_set_data|Physics2DServer.shape_set_data()]].{{Span|rid}}: The intersecting object's [[RID GD|RID]].{{Span|shape}}: The shape index of the colliding shape.The number of intersections can be limited with the {{Span|max_results}} parameter, to reduce the processing time.