__NOTOC__'''Inherits:''' [[Node GD|Node]] '''<''' [[Object GD|Object]]'''Inherited By:''' [[Control GD|Control]], [[Node2D GD|Node2D]]Base class of anything 2D.== Description ==Base class of anything 2D. Canvas items are laid out in a tree; children inherit and extend their parent's transform. {{Span|CanvasItem}} is extended by [[Control GD|Control]] for anything GUI-related, and by [[Node2D GD|Node2D]] for anything related to the 2D engine.Any {{Span|CanvasItem}} can draw. For this, [[#update|update]] must be called, then [[CanvasItem GD#NOTIFICATION_DRAW|NOTIFICATION_DRAW]] will be received on idle time to request redraw. Because of this, canvas items don't need to be redrawn on every frame, improving the performance significantly. Several functions for drawing on the {{Span|CanvasItem}} are provided (see {{Span|draw_*}} functions). However, they can only be used inside the [[Object GD#_notification|_notification]], signal or [[CanvasItem GD#_draw|_draw]] virtual functions.Canvas items are drawn in tree order. By default, children are on top of their parents so a root {{Span|CanvasItem}} will be drawn behind everything. This behavior can be changed on a per-item basis.A {{Span|CanvasItem}} can also be hidden, which will also hide its children. It provides many ways to change parameters such as modulation (for itself and its children) and self modulation (only for itself), as well as its blend mode.Ultimately, a transform notification can be requested, which will notify the node that its global position changed in case the parent tree changed.== Tutorials ==*  :doc:`../tutorials/2d/2d_transforms`*  :doc:`../tutorials/2d/custom_drawing_in_2d`== Properties =={| class="wikitable | int|| [[#light_mask|light_mask]]|| {{Span|1}}                   |-| [[Material GD|Material]]|| [[#material|material]]||                         |-| [[Color GD|Color]]|| [[#modulate|modulate]]|| {{Span|Color( 1, 1, 1, 1 )}} |-| [[Color GD|Color]]|| [[#self_modulate|self_modulate]]|| {{Span|Color( 1, 1, 1, 1 )}} |-| bool|| [[#show_behind_parent|show_behind_parent]]|| {{Span|false}}               |-| bool|| [[#show_on_top|show_on_top]]||                         |-| [[#TextureFilter|TextureFilter]]|| [[#texture_filter|texture_filter]]|| {{Span|0}}                   |-| [[#TextureRepeat|TextureRepeat]]|| [[#texture_repeat|texture_repeat]]|| {{Span|0}}                   |-| bool|| [[#use_parent_material|use_parent_material]]|| {{Span|false}}               |-| bool|| [[#visible|visible]]|| {{Span|true}}                |}== Methods =={| class="wikitable | void|| [[CanvasItem GD#_draw|_draw]] '''(''' ''')''' virtual|-| void|| [[#draw_arc|draw_arc]] '''(''' [[Vector2 GD|Vector2]] center, float radius, float start_angle, float end_angle, int point_count, [[Color GD|Color]] color, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                |-| float|| [[#draw_char|draw_char]] '''(''' [[Font GD|Font]] font, [[Vector2 GD|Vector2]] position, [[String GD|String]] char, [[String GD|String]] next, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ) ''')'''                                                                                                                                                                                                                                                                                                                                                                                                         |-| void|| [[#draw_circle|draw_circle]] '''(''' [[Vector2 GD|Vector2]] position, float radius, [[Color GD|Color]] color ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |-| void|| [[#draw_colored_polygon|draw_colored_polygon]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, [[PackedVector2Array GD|PackedVector2Array]] uvs=PackedVector2Array(  ), [[Texture2D GD|Texture2D]] texture=null, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                                  |-| void|| [[#draw_line|draw_line]] '''(''' [[Vector2 GD|Vector2]] from, [[Vector2 GD|Vector2]] to, [[Color GD|Color]] color, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                               |-| void|| [[#draw_mesh|draw_mesh]] '''(''' [[Mesh GD|Mesh]] mesh, [[Texture2D GD|Texture2D]] texture, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                                                                   |-| void|| [[#draw_multiline|draw_multiline]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                               |-| void|| [[#draw_multiline_colors|draw_multiline_colors]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                          |-| void|| [[#draw_multimesh|draw_multimesh]] '''(''' [[MultiMesh GD|MultiMesh]] multimesh, [[Texture2D GD|Texture2D]] texture, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                                                                                                                                                                                   |-| void|| [[#draw_polygon|draw_polygon]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, [[PackedVector2Array GD|PackedVector2Array]] uvs=PackedVector2Array(  ), [[Texture2D GD|Texture2D]] texture=null, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                           |-| void|| [[#draw_polyline|draw_polyline]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |-| void|| [[#draw_polyline_colors|draw_polyline_colors]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                            |-| void|| [[#draw_primitive|draw_primitive]] '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, [[PackedVector2Array GD|PackedVector2Array]] uvs, [[Texture2D GD|Texture2D]] texture=null, float width=1.0, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''         |-| void|| [[#draw_rect|draw_rect]] '''(''' [[Rect2 GD|Rect2]] rect, [[Color GD|Color]] color, bool filled=true, float width=1.0 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                                |-| void|| [[#draw_set_transform|draw_set_transform]] '''(''' [[Vector2 GD|Vector2]] position, float rotation, [[Vector2 GD|Vector2]] scale ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |-| void|| [[#draw_set_transform_matrix|draw_set_transform_matrix]] '''(''' [[Transform2D GD|Transform2D]] xform|-| void|| [[#draw_string|draw_string]] '''(''' [[Font GD|Font]] font, [[Vector2 GD|Vector2]] position, [[String GD|String]] text, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), int clip_w=-1 ''')'''                                                                                                                                                                                                                                                                                                                                                                                                      |-| void|| [[#draw_style_box|draw_style_box]] '''(''' [[StyleBox GD|StyleBox]] style_box, [[Rect2 GD|Rect2]] rect|-| void|| [[#draw_texture|draw_texture]] '''(''' [[Texture2D GD|Texture2D]] texture, [[Vector2 GD|Vector2]] position, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                                                                                                                                    |-| void|| [[#draw_texture_rect|draw_texture_rect]] '''(''' [[Texture2D GD|Texture2D]] texture, [[Rect2 GD|Rect2]] rect, bool tile, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''                                                           |-| void|| [[#draw_texture_rect_region|draw_texture_rect_region]] '''(''' [[Texture2D GD|Texture2D]] texture, [[Rect2 GD|Rect2]] rect, [[Rect2 GD|Rect2]] src_rect, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), bool clip_uv=true, [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')''' |-| void|| [[#force_update_transform|force_update_transform|-| [[RID GD|RID]]|| [[#get_canvas|get_canvas]] '''(''' ''')''' const|-| [[RID GD|RID]]|| [[#get_canvas_item|get_canvas_item]] '''(''' ''')''' const|-| [[Transform2D GD|Transform2D]]|| [[#get_canvas_transform|get_canvas_transform]] '''(''' ''')''' const|-| [[Vector2 GD|Vector2]]|| [[#get_global_mouse_position|get_global_mouse_position]] '''(''' ''')''' const|-| [[Transform2D GD|Transform2D]]|| [[#get_global_transform|get_global_transform]] '''(''' ''')''' const|-| [[Transform2D GD|Transform2D]]|| [[#get_global_transform_with_canvas|get_global_transform_with_canvas]] '''(''' ''')''' const|-| [[Vector2 GD|Vector2]]|| [[#get_local_mouse_position|get_local_mouse_position]] '''(''' ''')''' const|-| [[Transform2D GD|Transform2D]]|| [[#get_transform|get_transform]] '''(''' ''')''' const|-| [[Rect2 GD|Rect2]]|| [[#get_viewport_rect|get_viewport_rect]] '''(''' ''')''' const|-| [[Transform2D GD|Transform2D]]|| [[#get_viewport_transform|get_viewport_transform]] '''(''' ''')''' const                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |-| [[World2D GD|World2D]]|| [[#get_world_2d|get_world_2d]] '''(''' ''')''' const|-| void|| [[#hide|hide]] '''(''' ''')'''                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |-| bool|| [[#is_local_transform_notification_enabled|is_local_transform_notification_enabled]] '''(''' ''')''' const|-| bool|| [[#is_set_as_toplevel|is_set_as_toplevel]] '''(''' ''')''' const|-| bool|| [[#is_transform_notification_enabled|is_transform_notification_enabled]] '''(''' ''')''' const|-| bool|| [[#is_visible_in_tree|is_visible_in_tree]] '''(''' ''')''' const|-| [[Vector2 GD|Vector2]]|| [[#make_canvas_position_local|make_canvas_position_local]] '''(''' [[Vector2 GD|Vector2]] screen_point ''')''' const|-| [[InputEvent GD|InputEvent]]|| [[#make_input_local|make_input_local]] '''(''' [[InputEvent GD|InputEvent]] event ''')''' const|-| void|| [[#set_as_toplevel|set_as_toplevel]] '''(''' bool enable|-| void|| [[#set_notify_local_transform|set_notify_local_transform]] '''(''' bool enable|-| void|| [[#set_notify_transform|set_notify_transform]] '''(''' bool enable|-| void|| [[#show|show|-| void|| [[#update|update|}== Signals ===== draw ===*  '''draw ( )'''Emitted when the {{Span|CanvasItem}} must redraw. This can only be connected realtime, as deferred will not allow drawing.=== hide ===*  '''hide ( )'''Emitted when becoming hidden.=== item_rect_changed ===*  '''item_rect_changed ( )'''Emitted when the item rect has changed.=== visibility_changed ===*  '''visibility_changed ( )'''Emitted when the visibility (hidden/visible) changes.== Enumerations ===== TextureFilter ====== TEXTURE_FILTER_PARENT_NODE ====== TEXTURE_FILTER_NEAREST ====== TEXTURE_FILTER_LINEAR ====== TEXTURE_FILTER_NEAREST_WITH_MIPMAPS ====== TEXTURE_FILTER_LINEAR_WITH_MIPMAPS ====== TEXTURE_FILTER_NEAREST_WITH_MIPMAPS_ANISOTROPIC ====== TEXTURE_FILTER_LINEAR_WITH_MIPMAPS_ANISOTROPIC ====== TEXTURE_FILTER_MAX ===enum '''TextureFilter''':*  '''TEXTURE_FILTER_PARENT_NODE''' = '''0'''  The {{Span|CanvasItem}} will inherit the filter from its parent.*  '''TEXTURE_FILTER_NEAREST''' = '''1'''  The texture filter reads from the nearest pixel only. The simplest and fastest method of filtering. Useful for pixel art.*  '''TEXTURE_FILTER_LINEAR''' = '''2'''  The texture filter blends between the nearest four pixels. Use this for most cases where you want to avoid a pixelated style.*  '''TEXTURE_FILTER_NEAREST_WITH_MIPMAPS''' = '''3'''*  '''TEXTURE_FILTER_LINEAR_WITH_MIPMAPS''' = '''4'''*  '''TEXTURE_FILTER_NEAREST_WITH_MIPMAPS_ANISOTROPIC''' = '''5'''*  '''TEXTURE_FILTER_LINEAR_WITH_MIPMAPS_ANISOTROPIC''' = '''6'''*  '''TEXTURE_FILTER_MAX''' = '''7'''  Represents the size of the [[#TextureFilter|TextureFilter]] enum.=== TextureRepeat ====== TEXTURE_REPEAT_PARENT_NODE ====== TEXTURE_REPEAT_DISABLED ====== TEXTURE_REPEAT_ENABLED ====== TEXTURE_REPEAT_MIRROR ====== TEXTURE_REPEAT_MAX ===enum '''TextureRepeat''':*  '''TEXTURE_REPEAT_PARENT_NODE''' = '''0'''  The {{Span|CanvasItem}} will inherit the filter from its parent.*  '''TEXTURE_REPEAT_DISABLED''' = '''1'''  Texture will not repeat.*  '''TEXTURE_REPEAT_ENABLED''' = '''2'''  Texture will repeat normally.*  '''TEXTURE_REPEAT_MIRROR''' = '''3'''  Texture will repeat in a 2x2 tiled mode, where elements at even positions are mirrored.*  '''TEXTURE_REPEAT_MAX''' = '''4'''  Represents the size of the [[#TextureRepeat|TextureRepeat]] enum.== Constants ===== NOTIFICATION_TRANSFORM_CHANGED ====== NOTIFICATION_DRAW ====== NOTIFICATION_VISIBILITY_CHANGED ====== NOTIFICATION_ENTER_CANVAS ====== NOTIFICATION_EXIT_CANVAS ===*  '''NOTIFICATION_TRANSFORM_CHANGED''' = '''2000'''  The {{Span|CanvasItem}}'s transform has changed. This notification is only received if enabled by [[#set_notify_transform|set_notify_transform]] or [[#set_notify_local_transform|set_notify_local_transform]].*  '''NOTIFICATION_DRAW''' = '''30'''  The {{Span|CanvasItem}} is requested to draw.*  '''NOTIFICATION_VISIBILITY_CHANGED''' = '''31'''  The {{Span|CanvasItem}}'s visibility has changed.*  '''NOTIFICATION_ENTER_CANVAS''' = '''32'''  The {{Span|CanvasItem}} has entered the canvas.*  '''NOTIFICATION_EXIT_CANVAS''' = '''33'''  The {{Span|CanvasItem}} has exited the canvas.== Property Descriptions ===== light_mask ===*  int '''light_mask'''{| class="wikitable | ''Default''|| {{Span|1}}                 |-| ''Setter''|| set_light_mask(value) |-| ''Getter''|| get_light_mask()      |}The rendering layers in which this {{Span|CanvasItem}} responds to [[Light2D GD|Light2D]] nodes.=== material ===*  [[Material GD|Material]] '''material'''{| class="wikitable | ''Setter''|| set_material(value) |-| ''Getter''|| get_material()      |}The material applied to textures on this {{Span|CanvasItem}}.=== modulate ===*  [[Color GD|Color]] '''modulate'''{| class="wikitable | ''Default''|| {{Span|Color( 1, 1, 1, 1 )}} |-| ''Setter''|| set_modulate(value)     |-| ''Getter''|| get_modulate()          |}The color applied to textures on this {{Span|CanvasItem}}.=== self_modulate ===*  [[Color GD|Color]] '''self_modulate'''{| class="wikitable | ''Default''|| {{Span|Color( 1, 1, 1, 1 )}}  |-| ''Setter''|| set_self_modulate(value) |-| ''Getter''|| get_self_modulate()      |}The color applied to textures on this {{Span|CanvasItem}}. This is not inherited by children {{Span|CanvasItem}}\ s.=== show_behind_parent ===*  bool '''show_behind_parent'''{| class="wikitable | ''Default''|| {{Span|false}}                       |-| ''Setter''|| set_draw_behind_parent(value)   |-| ''Getter''|| is_draw_behind_parent_enabled() |}If {{Span|true}}, the object draws behind its parent.=== show_on_top ===*  bool '''show_on_top'''If {{Span|true}}, the object draws on top of its parent.=== texture_filter ===*  [[#TextureFilter|TextureFilter]] '''texture_filter'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_texture_filter(value) |-| ''Getter''|| get_texture_filter()      |}=== texture_repeat ===*  [[#TextureRepeat|TextureRepeat]] '''texture_repeat'''{| class="wikitable | ''Default''|| {{Span|0}}                     |-| ''Setter''|| set_texture_repeat(value) |-| ''Getter''|| get_texture_repeat()      |}=== use_parent_material ===*  bool '''use_parent_material'''{| class="wikitable | ''Default''|| {{Span|false}}                      |-| ''Setter''|| set_use_parent_material(value) |-| ''Getter''|| get_use_parent_material()      |}If {{Span|true}}, the parent {{Span|CanvasItem}}'s [[#material|material]] property is used as this one's material.=== visible ===*  bool '''visible'''{| class="wikitable | ''Default''|| {{Span|true}}           |-| ''Setter''|| set_visible(value) |-| ''Getter''|| is_visible()       |}If {{Span|true}}, this {{Span|CanvasItem}} is drawn. For controls that inherit [[Popup GD|Popup]], the correct way to make them visible is to call one of the multiple {{Span|popup*()}} functions instead.== Method Descriptions ===== _draw ===*  void '''_draw ( )''' virtualOverridable function called by the engine (if defined) to draw the canvas item.=== draw_arc ===*  void '''draw_arc''' '''(''' [[Vector2 GD|Vector2]] center, float radius, float start_angle, float end_angle, int point_count, [[Color GD|Color]] color, float width=1.0 ''')'''Draws an arc between the given angles. The larger the value of {{Span|point_count}}, the smoother the curve.=== draw_char ===*  float '''draw_char''' '''(''' [[Font GD|Font]] font, [[Vector2 GD|Vector2]] position, [[String GD|String]] char, [[String GD|String]] next, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ) ''')'''Draws a string character using a custom font. Returns the advance, depending on the character width and kerning with an optional next character.=== draw_circle ===*  void '''draw_circle''' '''(''' [[Vector2 GD|Vector2]] position, float radius, [[Color GD|Color]] color ''')'''Draws a colored circle.=== draw_colored_polygon ===*  void '''draw_colored_polygon''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, [[PackedVector2Array GD|PackedVector2Array]] uvs=PackedVector2Array(  ), [[Texture2D GD|Texture2D]] texture=null, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a colored polygon of any amount of points, convex or concave.=== draw_line ===*  void '''draw_line''' '''(''' [[Vector2 GD|Vector2]] from, [[Vector2 GD|Vector2]] to, [[Color GD|Color]] color, float width=1.0 ''')'''Draws a line from a 2D point to another, with a given color and width.=== draw_mesh ===*  void '''draw_mesh''' '''(''' [[Mesh GD|Mesh]] mesh, [[Texture2D GD|Texture2D]] texture, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[Transform2D GD|Transform2D]] transform=Transform2D( 1, 0, 0, 1, 0, 0 ), [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a [[Mesh GD|Mesh]] in 2D, using the provided texture. See [[MeshInstance2D GD|MeshInstance2D]] for related documentation.=== draw_multiline ===*  void '''draw_multiline''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, float width=1.0 ''')'''Draws multiple, parallel lines with a uniform {{Span|color}}.=== draw_multiline_colors ===*  void '''draw_multiline_colors''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, float width=1.0 ''')'''Draws multiple, parallel lines with a uniform {{Span|width}} and segment-by-segment coloring. Colors assigned to line segments match by index between {{Span|points}} and {{Span|colors}}.=== draw_multimesh ===*  void '''draw_multimesh''' '''(''' [[MultiMesh GD|MultiMesh]] multimesh, [[Texture2D GD|Texture2D]] texture, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a [[MultiMesh GD|MultiMesh]] in 2D with the provided texture. See [[MultiMeshInstance2D GD|MultiMeshInstance2D]] for related documentation.=== draw_polygon ===*  void '''draw_polygon''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, [[PackedVector2Array GD|PackedVector2Array]] uvs=PackedVector2Array(  ), [[Texture2D GD|Texture2D]] texture=null, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a polygon of any amount of points, convex or concave.=== draw_polyline ===*  void '''draw_polyline''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[Color GD|Color]] color, float width=1.0 ''')'''Draws interconnected line segments with a uniform {{Span|color}} and {{Span|width}}.=== draw_polyline_colors ===*  void '''draw_polyline_colors''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, float width=1.0 ''')'''Draws interconnected line segments with a uniform {{Span|width}} and segment-by-segment coloring. Colors assigned to line segments match by index between {{Span|points}} and {{Span|colors}}.=== draw_primitive ===*  void '''draw_primitive''' '''(''' [[PackedVector2Array GD|PackedVector2Array]] points, [[PackedColorArray GD|PackedColorArray]] colors, [[PackedVector2Array GD|PackedVector2Array]] uvs, [[Texture2D GD|Texture2D]] texture=null, float width=1.0, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a custom primitive. 1 point for a point, 2 points for a line, 3 points for a triangle, and 4 points for a quad.=== draw_rect ===*  void '''draw_rect''' '''(''' [[Rect2 GD|Rect2]] rect, [[Color GD|Color]] color, bool filled=true, float width=1.0 ''')'''Draws a rectangle. If {{Span|filled}} is {{Span|true}}, the rectangle will be filled with the {{Span|color}} specified. If {{Span|filled}} is {{Span|false}}, the rectangle will be drawn as a stroke with the {{Span|color}} and {{Span|width}} specified.'''Note:''' {{Span|width}} is only effective if {{Span|filled}} is {{Span|false}}.=== draw_set_transform ===*  void '''draw_set_transform''' '''(''' [[Vector2 GD|Vector2]] position, float rotation, [[Vector2 GD|Vector2]] scale ''')'''Sets a custom transform for drawing via components. Anything drawn afterwards will be transformed by this.=== draw_set_transform_matrix ===*  void '''draw_set_transform_matrix''' '''(''' [[Transform2D GD|Transform2D]] xform ''')'''Sets a custom transform for drawing via matrix. Anything drawn afterwards will be transformed by this.=== draw_string ===*  void '''draw_string''' '''(''' [[Font GD|Font]] font, [[Vector2 GD|Vector2]] position, [[String GD|String]] text, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), int clip_w=-1 ''')'''Draws a string using a custom font.=== draw_style_box ===*  void '''draw_style_box''' '''(''' [[StyleBox GD|StyleBox]] style_box, [[Rect2 GD|Rect2]] rect ''')'''Draws a styled rectangle.=== draw_texture ===*  void '''draw_texture''' '''(''' [[Texture2D GD|Texture2D]] texture, [[Vector2 GD|Vector2]] position, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a texture at a given position.=== draw_texture_rect ===*  void '''draw_texture_rect''' '''(''' [[Texture2D GD|Texture2D]] texture, [[Rect2 GD|Rect2]] rect, bool tile, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a textured rectangle at a given position, optionally modulated by a color. If {{Span|transpose}} is {{Span|true}}, the texture will have its X and Y coordinates swapped.=== draw_texture_rect_region ===*  void '''draw_texture_rect_region''' '''(''' [[Texture2D GD|Texture2D]] texture, [[Rect2 GD|Rect2]] rect, [[Rect2 GD|Rect2]] src_rect, [[Color GD|Color]] modulate=Color( 1, 1, 1, 1 ), bool transpose=false, [[Texture2D GD|Texture2D]] normal_map=null, [[Texture2D GD|Texture2D]] specular_map=null, [[Color GD|Color]] specular_shininess=Color( 1, 1, 1, 1 ), bool clip_uv=true, [[#TextureFilter|TextureFilter]] texture_filter=0, [[#TextureRepeat|TextureRepeat]] texture_repeat=0 ''')'''Draws a textured rectangle region at a given position, optionally modulated by a color. If {{Span|transpose}} is {{Span|true}}, the texture will have its X and Y coordinates swapped.=== force_update_transform ===*  void '''force_update_transform ( )'''Forces the transform to update. Transform changes in physics are not instant for performance reasons. Transforms are accumulated and then set. Use this if you need an up-to-date transform when doing physics operations.=== get_canvas ===*  [[RID GD|RID]] '''get_canvas ( )''' constReturns the [[RID GD|RID]] of the [[World2D GD|World2D]] canvas where this item is in.=== get_canvas_item ===*  [[RID GD|RID]] '''get_canvas_item ( )''' constReturns the canvas item RID used by [[VisualServer GD|VisualServer]] for this item.=== get_canvas_transform ===*  [[Transform2D GD|Transform2D]] '''get_canvas_transform ( )''' constReturns the transform matrix of this item's canvas.=== get_global_mouse_position ===*  [[Vector2 GD|Vector2]] '''get_global_mouse_position ( )''' constReturns the global position of the mouse.=== get_global_transform ===*  [[Transform2D GD|Transform2D]] '''get_global_transform ( )''' constReturns the global transform matrix of this item.=== get_global_transform_with_canvas ===*  [[Transform2D GD|Transform2D]] '''get_global_transform_with_canvas ( )''' constReturns the global transform matrix of this item in relation to the canvas.=== get_local_mouse_position ===*  [[Vector2 GD|Vector2]] '''get_local_mouse_position ( )''' constReturns the mouse position relative to this item's position.=== get_transform ===*  [[Transform2D GD|Transform2D]] '''get_transform ( )''' constReturns the transform matrix of this item.=== get_viewport_rect ===*  [[Rect2 GD|Rect2]] '''get_viewport_rect ( )''' constReturns the viewport's boundaries as a [[Rect2 GD|Rect2]].=== get_viewport_transform ===*  [[Transform2D GD|Transform2D]] '''get_viewport_transform ( )''' constReturns this item's transform in relation to the viewport.=== get_world_2d ===*  [[World2D GD|World2D]] '''get_world_2d ( )''' constReturns the [[World2D GD|World2D]] where this item is in.=== hide ===*  void '''hide ( )'''Hide the {{Span|CanvasItem}} if it's currently visible.=== is_local_transform_notification_enabled ===*  bool '''is_local_transform_notification_enabled ( )''' constReturns {{Span|true}} if local transform notifications are communicated to children.=== is_set_as_toplevel ===*  bool '''is_set_as_toplevel ( )''' constReturns {{Span|true}} if the node is set as top-level. See [[#set_as_toplevel|set_as_toplevel]].=== is_transform_notification_enabled ===*  bool '''is_transform_notification_enabled ( )''' constReturns {{Span|true}} if global transform notifications are communicated to children.=== is_visible_in_tree ===*  bool '''is_visible_in_tree ( )''' constReturns {{Span|true}} if the node is present in the [[SceneTree GD|SceneTree]], its [[#visible|visible]] property is {{Span|true}} and its inherited visibility is also {{Span|true}}.=== make_canvas_position_local ===*  [[Vector2 GD|Vector2]] '''make_canvas_position_local''' '''(''' [[Vector2 GD|Vector2]] screen_point ''')''' constAssigns {{Span|screen_point}} as this node's new local transform.=== make_input_local ===*  [[InputEvent GD|InputEvent]] '''make_input_local''' '''(''' [[InputEvent GD|InputEvent]] event ''')''' constTransformations issued by {{Span|event}}'s inputs are applied in local space instead of global space.=== set_as_toplevel ===*  void '''set_as_toplevel''' '''(''' bool enable ''')'''If {{Span|enable}} is {{Span|true}}, the node won't inherit its transform from parent canvas items.=== set_notify_local_transform ===*  void '''set_notify_local_transform''' '''(''' bool enable ''')'''If {{Span|enable}} is {{Span|true}}, children will be updated with local transform data.=== set_notify_transform ===*  void '''set_notify_transform''' '''(''' bool enable ''')'''If {{Span|enable}} is {{Span|true}}, children will be updated with global transform data.=== show ===*  void '''show ( )'''Show the {{Span|CanvasItem}} if it's currently hidden. For controls that inherit [[Popup GD|Popup]], the correct way to make them visible is to call one of the multiple {{Span|popup*()}} functions instead.=== update ===*  void '''update ( )'''Queue the {{Span|CanvasItem}} for update. [[CanvasItem GD#NOTIFICATION_DRAW|NOTIFICATION_DRAW]] will be called on idle time to request redraw.