__NOTOC__Integer built-in type.== Description ==Signed 64-bit integer type.It can take values in the interval {{Span|[-2^63, 2^63 - 1]}}, i.e. {{Span|[-9223372036854775808, 9223372036854775807]}}. Exceeding those bounds will wrap around.{{Span|int}} is a [[Variant GD|Variant]] type, and will thus be used when assigning an integer value to a [[Variant GD|Variant]]. It can also be enforced with the {{Span|: int}} type hint.::    var my_variant = 0 # int, value 0.    my_variant += 4.2 # float, value 4.2.    var my_int: int = 1 # int, value 1.    my_int = 4.2 # int, value 4, the right value is implicitly cast to int.    my_int = int("6.7") # int, value 6, the String is explicitly cast with int.        var max_int = 9223372036854775807    print(max_int) # 9223372036854775807, OK.    max_int += 1    print(max_int) # -9223372036854775808, we overflowed and wrapped around.== Methods =={| class="wikitable | int|| [[#int|int]] '''(''' bool from ''')'''     |-| int|| [[#int|int]] '''(''' float from ''')'''   |-| int|| [[#int|int]] '''(''' [[String GD|String]] from ''')''' |}== Method Descriptions ===== int ===*  int '''int''' '''(''' bool from ''')'''Cast a bool value to an integer value, {{Span|int(true)}} will be equals to 1 and {{Span|int(false)}} will be equals to 0.*  int '''int''' '''(''' float from ''')'''Cast a float value to an integer value, this method simply removes the number fractions, so for example {{Span|int(2.7)}} will be equals to 2, {{Span|int(.1)}} will be equals to 0 and {{Span|int(-2.7)}} will be equals to -2.*  int '''int''' '''(''' [[String GD|String]] from ''')'''Cast a [[String GD|String]] value to an integer value, this method is an integer parser from a string, so calling this method with an invalid integer string will return 0, a valid string will be something like {{Span|'1.7'}}. This method will ignore all non-number characters, so calling {{Span|int('1e3')}} will return 13.